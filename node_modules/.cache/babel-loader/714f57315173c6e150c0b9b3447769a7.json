{"ast":null,"code":"import _slicedToArray from \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/AgendaCards/DateCards.js/DateCards.js\";\nimport React, { useState } from 'react';\nimport classes from \"./DateCards.module.css\";\nimport MonthTeller from \"../../UI/MonthTeller/MonthTeller\";\nimport Transition from \"react-transition-group/cjs/Transition\";\nexport default function DateCards(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        otherMonth = _useState2[0],\n        setOtherMonth = _useState2[1];\n\n  let todayStyle;\n\n  if (new Date(props.today).getDate() === new Date().getDate() && new Date(props.today).getMonth() === new Date().getMonth()) {\n    todayStyle = {\n      backgroundColor: \"#f56157\",\n      color: \"white\"\n    };\n  }\n\n  let nonMonthDates = {};\n  let monthTeller;\n\n  if (new Date(props.today).getMonth() !== props.monthGetter) {\n    nonMonthDates = {\n      color: 'grey'\n    };\n    monthTeller = /*#__PURE__*/React.createElement(MonthTeller, {\n      monthGetter: new Date(props.today).getMonth(),\n      newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 23\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.DateWrapper,\n    onMouseEnter: () => setOtherMonth(true),\n    onMouseLeave: () => setOtherMonth(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Transition, {\n    in: otherMonth,\n    timeout: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, state => {\n    let animation = {\n      transition: \"z-index .5s ease-out, opacity .5s ease-out\",\n      opacity: state === \"entering\" ? 1 : state === \"entered\" ? 1 : state === \"exited\" ? 0 : 0,\n      zIndex: state === \"entering\" ? 101 : state === \"entered\" ? 101 : state === \"exiting\" ? 96 : -100\n    };\n    return monthTeller;\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Day,\n    style: Object.assign(nonMonthDates, todayStyle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, new Date(props.today).getDate()));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/AgendaCards/DateCards.js/DateCards.js"],"names":["React","useState","classes","MonthTeller","Transition","DateCards","props","otherMonth","setOtherMonth","todayStyle","Date","today","getDate","getMonth","backgroundColor","color","nonMonthDates","monthTeller","monthGetter","newDatesToVerboseHandler","DateWrapper","state","animation","transition","opacity","zIndex","Day","Object","assign"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,oBACDL,QAAQ,CAAC,KAAD,CADP;AAAA;AAAA,QAC9BM,UAD8B;AAAA,QAClBC,aADkB;;AAIrC,MAAIC,UAAJ;;AACA,MACI,IAAIC,IAAJ,CAASJ,KAAK,CAACK,KAAf,EAAsBC,OAAtB,OAAoC,IAAIF,IAAJ,GAAWE,OAAX,EAApC,IACA,IAAIF,IAAJ,CAASJ,KAAK,CAACK,KAAf,EAAsBE,QAAtB,OAAqC,IAAIH,IAAJ,GAAWG,QAAX,EAFzC,EAGE;AACEJ,IAAAA,UAAU,GAAG;AAAEK,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KAAb;AACH;;AAED,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,WAAJ;;AACA,MAAG,IAAIP,IAAJ,CAASJ,KAAK,CAACK,KAAf,EAAsBE,QAAtB,OAAqCP,KAAK,CAACY,WAA9C,EAA2D;AACvDF,IAAAA,aAAa,GAAG;AAACD,MAAAA,KAAK,EAAE;AAAR,KAAhB;AACAE,IAAAA,WAAW,gBAAG,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAE,IAAIP,IAAJ,CAASJ,KAAK,CAACK,KAAf,EAAsBE,QAAtB,EAA1B;AACa,MAAA,wBAAwB,EAAEP,KAAK,CAACa,wBAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAEH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACkB,WAAxB;AACK,IAAA,YAAY,EAAE,MAAMZ,aAAa,CAAC,IAAD,CADtC;AAEK,IAAA,YAAY,EAAE,MAAMA,aAAa,CAAC,KAAD,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAED,UAAhB;AAA4B,IAAA,OAAO,EAAE,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKc,KAAK,IAAI;AACN,QAAIC,SAAS,GAAG;AACZC,MAAAA,UAAU,EAAE,4CADA;AAEZC,MAAAA,OAAO,EACHH,KAAK,KAAK,UAAV,GACM,CADN,GAEMA,KAAK,KAAK,SAAV,GACA,CADA,GAEAA,KAAK,KAAK,QAAV,GACI,CADJ,GAEI,CATF;AAUZI,MAAAA,MAAM,EACFJ,KAAK,KAAK,UAAV,GACM,GADN,GAEMA,KAAK,KAAK,SAAV,GACA,GADA,GAEAA,KAAK,KAAK,SAAV,GACI,EADJ,GAEK,CAAC;AAjBJ,KAAhB;AAmBA,WACIJ,WADJ;AAGH,GAxBL,CAHJ,eA6BI;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACwB,GAAxB;AAA6B,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcZ,aAAd,EAA4BP,UAA5B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,IAAIC,IAAJ,CAASJ,KAAK,CAACK,KAAf,EAAsBC,OAAtB,EADL,CA7BJ,CADJ;AAmCH","sourcesContent":["import React, {useState} from 'react'\nimport classes from \"./DateCards.module.css\";\nimport MonthTeller from \"../../UI/MonthTeller/MonthTeller\";\nimport Transition from \"react-transition-group/cjs/Transition\";\n\nexport default function DateCards(props) {\n    const [otherMonth, setOtherMonth] = useState(false);\n\n\n    let todayStyle;\n    if (\n        new Date(props.today).getDate() === new Date().getDate() &&\n        new Date(props.today).getMonth() === new Date().getMonth()\n    ) {\n        todayStyle = { backgroundColor: \"#f56157\", color: \"white\" };\n    }\n\n    let nonMonthDates = {};\n    let monthTeller;\n    if(new Date(props.today).getMonth() !== props.monthGetter) {\n        nonMonthDates = {color: 'grey'};\n        monthTeller = <MonthTeller monthGetter={new Date(props.today).getMonth()}\n                                   newDatesToVerboseHandler={props.newDatesToVerboseHandler}/>\n    }\n\n    return(\n        <div className={classes.DateWrapper}\n             onMouseEnter={() => setOtherMonth(true)}\n             onMouseLeave={() => setOtherMonth(false)}>\n            <Transition in={otherMonth} timeout={1000}>\n                {state => {\n                    let animation = {\n                        transition: \"z-index .5s ease-out, opacity .5s ease-out\",\n                        opacity:\n                            state === \"entering\"\n                                ? 1\n                                : state === \"entered\"\n                                ? 1\n                                : state === \"exited\"\n                                    ? 0\n                                    : 0,\n                        zIndex:\n                            state === \"entering\"\n                                ? 101\n                                : state === \"entered\"\n                                ? 101\n                                : state === \"exiting\"\n                                    ? 96\n                                    :  -100\n                    };\n                    return (\n                        monthTeller\n                    )\n                }}\n            </Transition>\n            <div className={classes.Day} style={Object.assign(nonMonthDates,todayStyle)}>\n                {new Date(props.today).getDate()}\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}