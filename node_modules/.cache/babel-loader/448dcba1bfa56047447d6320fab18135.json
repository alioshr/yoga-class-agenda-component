{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/AgendaTitles/AgendaTitles.js\";\nimport React from 'react';\nimport classes from \"./AgendaTitles.module.css\";\nexport default function AgendaTitles(props) {\n  const renderMonthDayAndYear = \"\".concat(props.newDatesToVerboseHandler(props.currentMonth, \"renderMonth\"), \" \\n    \").concat(new Date(props.currentDay).getDate(), \", \").concat(props.currentYear);\n  const renderMonthAndYear = \"\".concat(props.newDatesToVerboseHandler(props.currentMonth, \"renderMonth\"), \", \").concat(props.currentYear);\n  let renderDayOfTheWeek = null;\n  let dayOfTheWeekStyle;\n\n  if (props.titleMode === \"DayOfTheWeek\") {\n    dayOfTheWeekStyle = {\n      fontSize: \"1.8rem\",\n      marginBottom: \"10px\"\n    };\n    renderDayOfTheWeek = props.newDatesToVerboseHandler(new Date(props.currentDay).getDay(), \"renderWeekDay\");\n  }\n\n  console.log(props.currentDay);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.AgendaTitlesDisplay,\n    style: dayOfTheWeekStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, props.appViewMode === \"DayMode\" && props.titleMode === undefined ? renderMonthDayAndYear : renderMonthAndYear, props.appViewMode === \"DayMode\" && props.titleMode === 'DayOfTheWeek' ? renderDayOfTheWeek : null);\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/AgendaTitles/AgendaTitles.js"],"names":["React","classes","AgendaTitles","props","renderMonthDayAndYear","newDatesToVerboseHandler","currentMonth","Date","currentDay","getDate","currentYear","renderMonthAndYear","renderDayOfTheWeek","dayOfTheWeekStyle","titleMode","fontSize","marginBottom","getDay","console","log","AgendaTitlesDisplay","appViewMode","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,QAAMC,qBAAqB,aAAMD,KAAK,CAACE,wBAAN,CAA+BF,KAAK,CAACG,YAArC,EAAmD,aAAnD,CAAN,oBACzB,IAAIC,IAAJ,CAASJ,KAAK,CAACK,UAAf,EAA2BC,OAA3B,EADyB,eACgBN,KAAK,CAACO,WADtB,CAA3B;AAEA,QAAMC,kBAAkB,aAAMR,KAAK,CAACE,wBAAN,CAA+BF,KAAK,CAACG,YAArC,EAAmD,aAAnD,CAAN,eAA4EH,KAAK,CAACO,WAAlF,CAAxB;AACA,MAAIE,kBAAkB,GAAG,IAAzB;AACA,MAAIC,iBAAJ;;AACA,MAAGV,KAAK,CAACW,SAAN,KAAoB,cAAvB,EAAuC;AACnCD,IAAAA,iBAAiB,GAAG;AAACE,MAAAA,QAAQ,EAAE,QAAX;AAAqBC,MAAAA,YAAY,EAAE;AAAnC,KAApB;AACAJ,IAAAA,kBAAkB,GAAGT,KAAK,CAACE,wBAAN,CAA+B,IAAIE,IAAJ,CAASJ,KAAK,CAACK,UAAf,EAA2BS,MAA3B,EAA/B,EAAoE,eAApE,CAArB;AACH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAK,CAACK,UAAlB;AACA,sBACI;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACmB,mBAAxB;AAA6C,IAAA,KAAK,EAAEP,iBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KAAK,CAACkB,WAAN,KAAsB,SAAtB,IAAmClB,KAAK,CAACW,SAAN,KAAoBQ,SAAvD,GACGlB,qBADH,GAC2BO,kBAFhC,EAGKR,KAAK,CAACkB,WAAN,KAAsB,SAAtB,IAAmClB,KAAK,CAACW,SAAN,KAAoB,cAAvD,GACDF,kBADC,GACoB,IAJzB,CADJ;AAQH","sourcesContent":["import React from 'react';\nimport classes from \"./AgendaTitles.module.css\";\n\nexport default function AgendaTitles(props) {\n    const renderMonthDayAndYear = `${props.newDatesToVerboseHandler(props.currentMonth, \"renderMonth\")} \n    ${new Date(props.currentDay).getDate()}, ${props.currentYear}`;\n    const renderMonthAndYear = `${props.newDatesToVerboseHandler(props.currentMonth, \"renderMonth\")}, ${props.currentYear}`;\n    let renderDayOfTheWeek = null;\n    let dayOfTheWeekStyle;\n    if(props.titleMode === \"DayOfTheWeek\") {\n        dayOfTheWeekStyle = {fontSize: \"1.8rem\", marginBottom: \"10px\"};\n        renderDayOfTheWeek = props.newDatesToVerboseHandler(new Date(props.currentDay).getDay(), \"renderWeekDay\");\n    }\n    console.log(props.currentDay)\n    return (\n        <div className={classes.AgendaTitlesDisplay} style={dayOfTheWeekStyle}>\n            {props.appViewMode === \"DayMode\" && props.titleMode === undefined ?\n                renderMonthDayAndYear : renderMonthAndYear}\n            {props.appViewMode === \"DayMode\" && props.titleMode === 'DayOfTheWeek' ?\n            renderDayOfTheWeek : null}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}