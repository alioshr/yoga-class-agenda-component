{"ast":null,"code":"import _slicedToArray from \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/DayMode/DayMode.js\";\nimport React, { useState } from 'react';\nimport SideTab from \"../../../SideTab/SideTab\";\nimport TimeTables from \"../../../TimeTables/TimeTables\";\nimport EventCard from \"../../../EventCard/EventCard\";\nimport DayCard from \"./DayCard/DayCard\";\nexport default function DayMode(props) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        dayCardRef = _useState2[0],\n        setDayCardRef = _useState2[1];\n\n  const callbackDivRef = childRef => {\n    setDayCardRef(childRef);\n  };\n\n  let dayCardReference;\n\n  if (dayCardRef !== null) {\n    dayCardReference = dayCardRef;\n  }\n\n  const today = props.currentDay;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TimeTables, {\n    appViewMode: props.appViewMode,\n    dayCardContainerWidth: dayCardReference,\n    style: {\n      color: \"black\",\n      border: \"none\"\n    },\n    tableOfAvailableHours: props.arrayOfDailyHoursTable,\n    classInitialAvailableHour: props.agendaInitialAvailableHour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(DayCard, {\n    callbackDivRef: callbackDivRef,\n    monthGetter: props.monthGetter,\n    backdropIsActive: props.backdropIsActive,\n    today: today,\n    newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TimeTables, {\n    tableOfAvailableHours: props.arrayOfDailyHoursTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), props.dataToBeRendered.filter(cl => cl.classDate === today).map(cl => /*#__PURE__*/React.createElement(EventCard, {\n    zIndexIFClicked: props.dialogBoxData.displayDialogBox,\n    currDay: today,\n    classDate: cl.classDate,\n    classTitle: cl.classTitle,\n    classLocation: cl.location,\n    classDuration: cl.duration,\n    classTime: cl.classTime,\n    classInitialAvailableHour: props.agendaInitialAvailableHour,\n    key: cl.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(SideTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/DayMode/DayMode.js"],"names":["React","useState","SideTab","TimeTables","EventCard","DayCard","DayMode","props","dayCardRef","setDayCardRef","callbackDivRef","childRef","dayCardReference","today","currentDay","display","flexDirection","width","appViewMode","color","border","arrayOfDailyHoursTable","agendaInitialAvailableHour","monthGetter","backdropIsActive","newDatesToVerboseHandler","dataToBeRendered","filter","cl","classDate","map","dialogBoxData","displayDialogBox","classTitle","location","duration","classTime","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,oBACCN,QAAQ,CAAC,IAAD,CADT;AAAA;AAAA,QAC5BO,UAD4B;AAAA,QAChBC,aADgB;;AAGnC,QAAMC,cAAc,GAAGC,QAAQ,IAAI;AAC3BF,IAAAA,aAAa,CAACE,QAAD,CAAb;AACP,GAFD;;AAGA,MAAIC,gBAAJ;;AACA,MAAGJ,UAAU,KAAK,IAAlB,EAAwB;AACpBI,IAAAA,gBAAgB,GAAGJ,UAAnB;AAEH;;AACD,QAAMK,KAAK,GAAGN,KAAK,CAACO,UAApB;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,aAAa,EAAE,KAAjC;AAAwCC,MAAAA,KAAK,EAAE;AAA/C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,WAAW,EAAEV,KAAK,CAACW,WADvB;AAEI,IAAA,qBAAqB,EAAEN,gBAF3B;AAGI,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAHX;AAII,IAAA,qBAAqB,EAAEb,KAAK,CAACc,sBAJjC;AAKI,IAAA,yBAAyB,EAAEd,KAAK,CAACe,0BALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAUI,oBAAC,OAAD;AACI,IAAA,cAAc,EAAEZ,cADpB;AAEI,IAAA,WAAW,EAAEH,KAAK,CAACgB,WAFvB;AAGI,IAAA,gBAAgB,EAAEhB,KAAK,CAACiB,gBAH5B;AAII,IAAA,KAAK,EAAEX,KAJX;AAKI,IAAA,wBAAwB,EAAEN,KAAK,CAACkB,wBALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI,oBAAC,UAAD;AACI,IAAA,qBAAqB,EAAElB,KAAK,CAACc,sBADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAUKd,KAAK,CAACmB,gBAAN,CAAuBC,MAAvB,CAA8BC,EAAE,IAAIA,EAAE,CAACC,SAAH,KAAiBhB,KAArD,EAA4DiB,GAA5D,CAAgEF,EAAE,iBAC/D,oBAAC,SAAD;AACI,IAAA,eAAe,EAAErB,KAAK,CAACwB,aAAN,CAAoBC,gBADzC;AAEI,IAAA,OAAO,EAAEnB,KAFb;AAGI,IAAA,SAAS,EAAEe,EAAE,CAACC,SAHlB;AAII,IAAA,UAAU,EAAED,EAAE,CAACK,UAJnB;AAKI,IAAA,aAAa,EAAEL,EAAE,CAACM,QALtB;AAMI,IAAA,aAAa,EAAEN,EAAE,CAACO,QANtB;AAOI,IAAA,SAAS,EAAEP,EAAE,CAACQ,SAPlB;AAQI,IAAA,yBAAyB,EAAE7B,KAAK,CAACe,0BARrC;AASI,IAAA,GAAG,EAAEM,EAAE,CAACS,EATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAVL,CAVJ,eAkCI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCJ,CADJ;AAuCH","sourcesContent":["import React, {useState} from 'react'\nimport SideTab from \"../../../SideTab/SideTab\";\nimport TimeTables from \"../../../TimeTables/TimeTables\";\nimport EventCard from \"../../../EventCard/EventCard\";\nimport DayCard from \"./DayCard/DayCard\";\n\nexport default function DayMode(props) {\n    const [dayCardRef, setDayCardRef] = useState(null);\n\n    const callbackDivRef = childRef => {\n            setDayCardRef(childRef)\n    };\n    let dayCardReference;\n    if(dayCardRef !== null) {\n        dayCardReference = dayCardRef\n\n    }\n    const today = props.currentDay;\n    return (\n        <div style={{display: \"flex\", flexDirection: \"row\", width: \"100%\"}}>\n            <SideTab>\n                <TimeTables\n                    appViewMode={props.appViewMode}\n                    dayCardContainerWidth={dayCardReference}\n                    style={{ color: \"black\", border: \"none\" }}\n                    tableOfAvailableHours={props.arrayOfDailyHoursTable}\n                    classInitialAvailableHour={props.agendaInitialAvailableHour}\n                />\n            </SideTab>\n            <DayCard\n                callbackDivRef={callbackDivRef}\n                monthGetter={props.monthGetter}\n                backdropIsActive={props.backdropIsActive}\n                today={today}\n                newDatesToVerboseHandler={props.newDatesToVerboseHandler}\n            >\n                <TimeTables\n                    tableOfAvailableHours={props.arrayOfDailyHoursTable}\n                />\n                {props.dataToBeRendered.filter(cl => cl.classDate === today).map(cl =>\n                    <EventCard\n                        zIndexIFClicked={props.dialogBoxData.displayDialogBox}\n                        currDay={today}\n                        classDate={cl.classDate}\n                        classTitle={cl.classTitle}\n                        classLocation={cl.location}\n                        classDuration={cl.duration}\n                        classTime={cl.classTime}\n                        classInitialAvailableHour={props.agendaInitialAvailableHour}\n                        key={cl.id}\n                    />\n                )}\n            </DayCard>\n            <SideTab />\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}