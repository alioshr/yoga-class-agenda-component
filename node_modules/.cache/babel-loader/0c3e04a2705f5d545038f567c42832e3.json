{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/DayMode/DayMode.js\";\nimport React from 'react';\nimport WeekMode from \"../WeekMode/WeekMode\";\nexport default function DayMode(props) {\n  return /*#__PURE__*/React.createElement(WeekMode, {\n    arrayOfDailyHoursTable: props.arrayOfDailyHoursTable,\n    backdropIsActive: props.backdropIsActive,\n    newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n    displayDialogBoxHandler: props.displayDialogBoxHandler,\n    backdropDisplayHandler: data => props.backdropDisplayHandler(data),\n    dialogBoxData: props.dialogBoxData,\n    agendaInitialAvailableHour: props.agendaInitialAvailableHour,\n    layoutWidthDimensions: props.layoutWidthDimensions,\n    agendaLastAvailableHour: props.agendaLastAvailableHour,\n    dataToBeRendered: props.dataToBeRendered,\n    currentWeek: props.currentWeek,\n    monthGetter: props.monthGetter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/DayMode/DayMode.js"],"names":["React","WeekMode","DayMode","props","arrayOfDailyHoursTable","backdropIsActive","newDatesToVerboseHandler","displayDialogBoxHandler","data","backdropDisplayHandler","dialogBoxData","agendaInitialAvailableHour","layoutWidthDimensions","agendaLastAvailableHour","dataToBeRendered","currentWeek","monthGetter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEnC,sBACI,oBAAC,QAAD;AACI,IAAA,sBAAsB,EAAEA,KAAK,CAACC,sBADlC;AAEI,IAAA,gBAAgB,EAAED,KAAK,CAACE,gBAF5B;AAGI,IAAA,wBAAwB,EAAEF,KAAK,CAACG,wBAHpC;AAII,IAAA,uBAAuB,EAAEH,KAAK,CAACI,uBAJnC;AAKI,IAAA,sBAAsB,EAAGC,IAAD,IAAUL,KAAK,CAACM,sBAAN,CAA6BD,IAA7B,CALtC;AAMI,IAAA,aAAa,EAAEL,KAAK,CAACO,aANzB;AAOI,IAAA,0BAA0B,EAAEP,KAAK,CAACQ,0BAPtC;AAQI,IAAA,qBAAqB,EAAER,KAAK,CAACS,qBARjC;AASI,IAAA,uBAAuB,EAAET,KAAK,CAACU,uBATnC;AAUI,IAAA,gBAAgB,EAAEV,KAAK,CAACW,gBAV5B;AAWI,IAAA,WAAW,EAAEX,KAAK,CAACY,WAXvB;AAYI,IAAA,WAAW,EAAEZ,KAAK,CAACa,WAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAiBH","sourcesContent":["import React from 'react'\nimport WeekMode from \"../WeekMode/WeekMode\";\n\nexport default function DayMode(props) {\n\n    return (\n        <WeekMode\n            arrayOfDailyHoursTable={props.arrayOfDailyHoursTable}\n            backdropIsActive={props.backdropIsActive}\n            newDatesToVerboseHandler={props.newDatesToVerboseHandler}\n            displayDialogBoxHandler={props.displayDialogBoxHandler}\n            backdropDisplayHandler={(data) => props.backdropDisplayHandler(data)}\n            dialogBoxData={props.dialogBoxData}\n            agendaInitialAvailableHour={props.agendaInitialAvailableHour}\n            layoutWidthDimensions={props.layoutWidthDimensions}\n            agendaLastAvailableHour={props.agendaLastAvailableHour}\n            dataToBeRendered={props.dataToBeRendered}\n            currentWeek={props.currentWeek}\n            monthGetter={props.monthGetter}\n        />\n    )\n\n}"]},"metadata":{},"sourceType":"module"}