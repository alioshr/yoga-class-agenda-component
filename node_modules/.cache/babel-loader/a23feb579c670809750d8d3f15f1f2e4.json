{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/CalendarMode/CalendarMode.js\";\nimport React from 'react';\nimport MonthDayCard from \"../../../AgendaCards/MonthDayCard/MonthDayCard\";\nimport DateCards from \"../../../AgendaCards/DateCards.js/DateCards\";\nexport default function CalendarMode(props) {\n  console.log(\"current week inside month view mode\", props.currentWeek);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, props.currentMonth[0].map(day => /*#__PURE__*/React.createElement(MonthDayCard, {\n    key: day,\n    newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n    today: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, props.currentMonth.filter(date => new Date(date).getDay() === new Date(day).getDay()).map(date => /*#__PURE__*/React.createElement(DateCards, {\n    today: date,\n    key: date,\n    monthGetter: props.monthGetter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/CalendarMode/CalendarMode.js"],"names":["React","MonthDayCard","DateCards","CalendarMode","props","console","log","currentWeek","display","flexDirection","width","currentMonth","map","day","newDatesToVerboseHandler","filter","date","Date","getDay","monthGetter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gDAAzB;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAkDF,KAAK,CAACG,WAAxD;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,aAAa,EAAE,KAAjC;AAAwCC,MAAAA,KAAK,EAAE;AAA/C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACO,YAAN,CAAmB,CAAnB,EAAsBC,GAAtB,CAA0BC,GAAG,iBAC1B,oBAAC,YAAD;AACI,IAAA,GAAG,EAAEA,GADT;AAEI,IAAA,wBAAwB,EAAET,KAAK,CAACU,wBAFpC;AAGI,IAAA,KAAK,EAAED,GAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKT,KAAK,CAACO,YAAN,CACII,MADJ,CACWC,IAAI,IAAI,IAAIC,IAAJ,CAASD,IAAT,EAAeE,MAAf,OAA4B,IAAID,IAAJ,CAASJ,GAAT,EAAcK,MAAd,EAD/C,EAEIN,GAFJ,CAEQI,IAAI,iBACL,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,IAAlB;AACW,IAAA,GAAG,EAAEA,IADhB;AAEW,IAAA,WAAW,EAAEZ,KAAK,CAACe,WAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHP,CALL,CADH,CADL,CADJ;AAmBH","sourcesContent":["import React from 'react'\nimport MonthDayCard from \"../../../AgendaCards/MonthDayCard/MonthDayCard\";\nimport DateCards from \"../../../AgendaCards/DateCards.js/DateCards\";\n\nexport default function CalendarMode(props) {\n    console.log(\"current week inside month view mode\",props.currentWeek);\n    return (\n        <div style={{display: \"flex\", flexDirection: \"row\", width: \"100%\"}}>\n            {props.currentMonth[0].map(day =>\n                <MonthDayCard\n                    key={day}\n                    newDatesToVerboseHandler={props.newDatesToVerboseHandler}\n                    today={day}\n                >\n                    {props.currentMonth\n                        .filter(date => new Date(date).getDay() === new Date(day).getDay())\n                        .map(date =>\n                            <DateCards today={date}\n                                       key={date}\n                                       monthGetter={props.monthGetter}/>\n                        )}\n                </MonthDayCard>\n            )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}