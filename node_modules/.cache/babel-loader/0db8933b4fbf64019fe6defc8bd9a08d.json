{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/CalendarMode/CalendarMode.js\";\nimport React from 'react';\nimport MonthDayCard from \"../../../AgendaCards/MonthDayCard/MonthDayCard\";\nimport DateCards from \"../../../AgendaCards/DateCards.js/DateCards\";\nexport default function CalendarMode(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, props.currentWeek.map(day => /*#__PURE__*/React.createElement(MonthDayCard, {\n    newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n    today: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, props.currentMonth.map((date, index) => {\n    console.log(new Date(date).getMonth() === props.monthGetter);\n    let nonMonthDates = {};\n\n    if (new Date(date).getDay() === new Date(day).getDay()) {\n      if (index > 24 && new Date(date).getDate() < 20 || index < 7 && new Date(date).getDate() > 15) {\n        nonMonthDates = {\n          color: 'grey'\n        };\n      }\n\n      return /*#__PURE__*/React.createElement(DateCards, {\n        today: date,\n        nonMonthDates: nonMonthDates,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 45\n        }\n      });\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/CalendarMode/CalendarMode.js"],"names":["React","MonthDayCard","DateCards","CalendarMode","props","display","flexDirection","width","currentWeek","map","day","newDatesToVerboseHandler","currentMonth","date","index","console","log","Date","getMonth","monthGetter","nonMonthDates","getDay","getDate","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gDAAzB;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,aAAa,EAAE,KAAjC;AAAwCC,MAAAA,KAAK,EAAE;AAA/C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACI,WAAN,CAAkBC,GAAlB,CAAsBC,GAAG,iBACtB,oBAAC,YAAD;AACI,IAAA,wBAAwB,EAAEN,KAAK,CAACO,wBADpC;AAEI,IAAA,KAAK,EAAED,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAISN,KAAK,CAACQ,YAAN,CAAmBH,GAAnB,CAAuB,CAACI,IAAD,EAAOC,KAAP,KAAiB;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,CAASJ,IAAT,EAAeK,QAAf,OAA8Bd,KAAK,CAACe,WAAhD;AACA,QAAIC,aAAa,GAAG,EAApB;;AACI,QAAG,IAAIH,IAAJ,CAASJ,IAAT,EAAeQ,MAAf,OAA4B,IAAIJ,IAAJ,CAASP,GAAT,EAAcW,MAAd,EAA/B,EAAuD;AACnD,UAAKP,KAAK,GAAG,EAAR,IAAc,IAAIG,IAAJ,CAASJ,IAAT,EAAeS,OAAf,KAA2B,EAA1C,IAAkDR,KAAK,GAAG,CAAR,IAAa,IAAIG,IAAJ,CAASJ,IAAT,EAAeS,OAAf,KAA2B,EAA9F,EAAkG;AAC9FF,QAAAA,aAAa,GAAG;AACZG,UAAAA,KAAK,EAAE;AADK,SAAhB;AAGH;;AACD,0BAAQ,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEV,IAAlB;AAAwB,QAAA,aAAa,EAAEO,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAEH;AACJ,GAZJ,CAJT,CADH,CADL,CADJ;AAyBH","sourcesContent":["import React from 'react'\nimport MonthDayCard from \"../../../AgendaCards/MonthDayCard/MonthDayCard\";\nimport DateCards from \"../../../AgendaCards/DateCards.js/DateCards\";\n\nexport default function CalendarMode(props) {\n    return (\n        <div style={{display: \"flex\", flexDirection: \"row\", width: \"100%\"}}>\n            {props.currentWeek.map(day =>\n                <MonthDayCard\n                    newDatesToVerboseHandler={props.newDatesToVerboseHandler}\n                    today={day}\n                >\n                        {props.currentMonth.map((date, index) => {\n                            console.log(new Date(date).getMonth() === props.monthGetter);\n                            let nonMonthDates = {};\n                                if(new Date(date).getDay() === new Date(day).getDay()) {\n                                    if ((index > 24 && new Date(date).getDate() < 20) || (index < 7 && new Date(date).getDate() > 15)){\n                                        nonMonthDates = {\n                                            color: 'grey'\n                                        }\n                                    }\n                                    return  <DateCards today={date} nonMonthDates={nonMonthDates}/>\n\n                                }\n                            }\n                        )}\n                </MonthDayCard>\n            )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}