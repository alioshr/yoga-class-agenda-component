{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/TimeTables/TimeTables.js\";\nimport React from \"react\";\nimport CurrentTime from \"../UI/CurrentTIme/CurrentTime\";\nimport classes from \"./TimeTables.module.css\";\nexport default function EmptyTables(props) {\n  //ensure that there only content in the div for the column that displays the hours\n  if (props.style) {\n    let style = {\n      boxShadow: \"none\",\n      borderRadius: \"0\"\n    };\n    Object.assign(props.style, style);\n  }\n\n  const calculateCurrentTime = (new Date().getHours() - props.classInitialAvailableHour) * 60 + new Date().getMinutes();\n  const showCurrentTime = props.classLastlAvailableHour - props.classInitialAvailableHour * 60 > calculateCurrentTime + 60;\n  console.log(calculateCurrentTime + 60);\n  console.log(props.classLastlAvailableHour - props.classInitialAvailableHour * 60);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: props.backdropDisplayHandler,\n    className: classes.EmptyTableWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, props.style !== undefined && showCurrentTime ? /*#__PURE__*/React.createElement(CurrentTime, {\n    currentTime: calculateCurrentTime,\n    dayCardContainerWidth: props.dayCardContainerWidth,\n    appViewMode: props.appViewMode,\n    classInitialAvailableHour: props.classInitialAvailableHour,\n    classLastlAvailableHour: props.classLastAvailableHour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }) : null, props.tableOfAvailableHours.map(singleHour => {\n    //ensure that there only content in the div for the\n    // column that displays the hours\n    let displaySingleHour;\n\n    if (props.style !== undefined) {\n      displaySingleHour = \"\".concat(singleHour, \":00\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: singleHour,\n      className: classes.EmptyTable,\n      style: props.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, displaySingleHour);\n  }));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/TimeTables/TimeTables.js"],"names":["React","CurrentTime","classes","EmptyTables","props","style","boxShadow","borderRadius","Object","assign","calculateCurrentTime","Date","getHours","classInitialAvailableHour","getMinutes","showCurrentTime","classLastlAvailableHour","console","log","backdropDisplayHandler","EmptyTableWrapper","undefined","dayCardContainerWidth","appViewMode","classLastAvailableHour","tableOfAvailableHours","map","singleHour","displaySingleHour","EmptyTable"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC;AACA,MAAIA,KAAK,CAACC,KAAV,EAAiB;AACf,QAAIA,KAAK,GAAG;AACVC,MAAAA,SAAS,EAAE,MADD;AAEVC,MAAAA,YAAY,EAAE;AAFJ,KAAZ;AAIAC,IAAAA,MAAM,CAACC,MAAP,CAAcL,KAAK,CAACC,KAApB,EAA2BA,KAA3B;AACD;;AACD,QAAMK,oBAAoB,GAAG,CAAC,IAAIC,IAAJ,GAAWC,QAAX,KAAwBR,KAAK,CAACS,yBAA/B,IAA4D,EAA5D,GAAiE,IAAIF,IAAJ,GAAWG,UAAX,EAA9F;AACA,QAAMC,eAAe,GAAGX,KAAK,CAACY,uBAAN,GAAgCZ,KAAK,CAACS,yBAAN,GAAkC,EAAlE,GAAuEH,oBAAoB,GAAG,EAAtH;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,oBAAoB,GAAC,EAAjC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACY,uBAAN,GAAgCZ,KAAK,CAACS,yBAAN,GAAkC,EAA9E;AACA,sBACE;AAAK,IAAA,OAAO,EAAET,KAAK,CAACe,sBAApB;AAA4C,IAAA,SAAS,EAAEjB,OAAO,CAACkB,iBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,CAACC,KAAN,KAAgBgB,SAAhB,IAA6BN,eAA7B,gBACG,oBAAC,WAAD;AACI,IAAA,WAAW,EAAEL,oBADjB;AAEI,IAAA,qBAAqB,EAAEN,KAAK,CAACkB,qBAFjC;AAGI,IAAA,WAAW,EAAElB,KAAK,CAACmB,WAHvB;AAII,IAAA,yBAAyB,EAAEnB,KAAK,CAACS,yBAJrC;AAKI,IAAA,uBAAuB,EAAET,KAAK,CAACoB,sBALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAOD,IARF,EASGpB,KAAK,CAACqB,qBAAN,CAA4BC,GAA5B,CAAgCC,UAAU,IAAI;AAC7C;AACA;AACA,QAAIC,iBAAJ;;AACA,QAAIxB,KAAK,CAACC,KAAN,KAAgBgB,SAApB,EAA+B;AAC7BO,MAAAA,iBAAiB,aAAMD,UAAN,QAAjB;AACD;;AACD,wBACE;AACE,MAAA,GAAG,EAAEA,UADP;AAEE,MAAA,SAAS,EAAEzB,OAAO,CAAC2B,UAFrB;AAGE,MAAA,KAAK,EAAEzB,KAAK,CAACC,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGuB,iBALH,CADF;AASD,GAhBA,CATH,CADF;AA6BD","sourcesContent":["import React from \"react\";\nimport CurrentTime from \"../UI/CurrentTIme/CurrentTime\";\nimport classes from \"./TimeTables.module.css\";\n\nexport default function EmptyTables(props) {\n  //ensure that there only content in the div for the column that displays the hours\n  if (props.style) {\n    let style = {\n      boxShadow: \"none\",\n      borderRadius: \"0\"\n    };\n    Object.assign(props.style, style);\n  }\n  const calculateCurrentTime = (new Date().getHours() - props.classInitialAvailableHour) * 60 + new Date().getMinutes();\n  const showCurrentTime = props.classLastlAvailableHour - props.classInitialAvailableHour * 60 > calculateCurrentTime + 60;\n  console.log(calculateCurrentTime+60);\n  console.log(props.classLastlAvailableHour - props.classInitialAvailableHour * 60);\n  return (\n    <div onClick={props.backdropDisplayHandler} className={classes.EmptyTableWrapper}>\n      {props.style !== undefined && showCurrentTime ?\n          <CurrentTime\n              currentTime={calculateCurrentTime}\n              dayCardContainerWidth={props.dayCardContainerWidth}\n              appViewMode={props.appViewMode}\n              classInitialAvailableHour={props.classInitialAvailableHour}\n              classLastlAvailableHour={props.classLastAvailableHour}/> :\n      null}\n      {props.tableOfAvailableHours.map(singleHour => {\n        //ensure that there only content in the div for the\n        // column that displays the hours\n        let displaySingleHour;\n        if (props.style !== undefined) {\n          displaySingleHour = `${singleHour}:00`;\n        }\n        return (\n          <div\n            key={singleHour}\n            className={classes.EmptyTable}\n            style={props.style}\n          >\n            {displaySingleHour}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}