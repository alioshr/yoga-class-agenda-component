{"ast":null,"code":"import _objectSpread from \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/Agenda.js\";\nimport React from \"react\";\nimport Layout from \"./UI/Layout/Layout\";\nimport WeekMode from \"./UI/ViewMode/WeekMode/WeekMode\";\nimport CalendarMode from \"./UI/ViewMode/CalendarMode/CalendarMode\";\nimport DayMode from \"./UI/ViewMode/DayMode/DayMode\";\nexport default class Agenda extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      appViewMode: '',\n      currentMonth: [],\n      currentWeek: [],\n      currWeekIndex: \"initial\",\n      prevMonthLastWeekIndex: [],\n      currentDay: '',\n      currentDayIndex: \"initial\",\n      prevWeekLastDayIndex: [],\n      monthGetter: new Date().getMonth(),\n      yearGetter: new Date().getFullYear(),\n      arrayOfDailyHoursTable: [],\n      backdropIsActive: false,\n      dialogBoxData: {\n        displayDialogBox: false,\n        topPositionFromClassCard: \"\",\n        heigthPositionFromClassCard: \"\"\n      },\n      layoutWidthDimensions: {\n        width: \"\",\n        dayCardContainerWidth: \"\"\n      }\n    };\n\n    this.arrayOfTableRows = (startingHour, endingHour) => {\n      let arrayOfDailyHoursTable = [startingHour];\n\n      for (let i = startingHour; i < endingHour; i++) {\n        arrayOfDailyHoursTable.push(Math.max.apply(null, arrayOfDailyHoursTable) + 1);\n      }\n\n      this.setState({\n        arrayOfDailyHoursTable\n      });\n    };\n\n    this.dayModeLogicHandler = () => {\n      const currentWeek = this.state.currentWeek.filter(day => new Date(day).getMonth() === this.state.monthGetter);\n      const currentDay = currentWeek[this.state.currentDayIndex];\n      console.log(\"what should be the current day\", currentDay);\n      this.setState({\n        currentDay\n      });\n    };\n\n    this.dayAgendaNavigationHandler = modal => {\n      const filteredCurrentWeek = this.state.currentWeek.filter(day => new Date(day).getMonth() === this.state.monthGetter);\n\n      if (modal === 'increment') {\n        if (this.state.currentDayIndex < filteredCurrentWeek.length - 1) {\n          this.setState((_ref) => {\n            let currentDayIndex = _ref.currentDayIndex,\n                restTop = _objectWithoutProperties(_ref, [\"currentDayIndex\"]);\n\n            return _objectSpread({\n              currentDayIndex: currentDayIndex + 1\n            }, restTop);\n          }, () => this.dayModeLogicHandler());\n        }\n\n        if (this.state.currentDayIndex === filteredCurrentWeek.length - 1) {\n          this.setState((_ref2) => {\n            let currentDayIndex = _ref2.currentDayIndex,\n                restTop = _objectWithoutProperties(_ref2, [\"currentDayIndex\"]);\n\n            return _objectSpread({\n              currentDayIndex: 0\n            }, restTop);\n          }, () => this.weekAgendaNavigationHandler('increment'));\n        }\n      }\n\n      if (modal === 'decrement' && this.state.currentDay !== new Date().setHours(0, 0, 0, 0)) {\n        if (this.state.currentDayIndex > 0) {\n          this.setState((_ref3) => {\n            let currentDayIndex = _ref3.currentDayIndex,\n                restTop = _objectWithoutProperties(_ref3, [\"currentDayIndex\"]);\n\n            return _objectSpread({\n              currentDayIndex: currentDayIndex - 1\n            }, restTop);\n          }, () => this.dayModeLogicHandler());\n        }\n\n        if (this.state.currentDayIndex === 0) {\n          console.log(\"current day index === 0\");\n          this.weekAgendaNavigationHandler(\"decrement\");\n        }\n      }\n    };\n\n    this.weekAgendaLogicHandler = () => {\n      const currentWeek = this.state.currentMonth[this.state.currWeekIndex];\n      this.setState({\n        currentWeek\n      });\n    };\n\n    this.weekAgendaNavigationHandler = modal => {\n      //init the current week index\n      if (modal === \"increment\") {\n        this.setState((_ref4) => {\n          let prevWeekLastDayIndex = _ref4.prevWeekLastDayIndex,\n              restTop = _objectWithoutProperties(_ref4, [\"prevWeekLastDayIndex\"]);\n\n          return _objectSpread({\n            prevWeekLastDayIndex: [...prevWeekLastDayIndex, this.state.currentWeek.filter(day => new Date(day).getMonth() === this.state.monthGetter).length - 1]\n          }, restTop);\n        }, () => console.log(this.state.prevWeekLastDayIndex)); //if the number of weeks incremented does not exceed the amount of weeks in the month\n\n        if (this.state.currWeekIndex < this.state.currentMonth.length - 1) {\n          this.setState((_ref5) => {\n            let currWeekIndex = _ref5.currWeekIndex,\n                restTop = _objectWithoutProperties(_ref5, [\"currWeekIndex\"]);\n\n            return _objectSpread({\n              currWeekIndex: currWeekIndex + 1\n            }, restTop);\n          }, () => this.weekAgendaLogicHandler());\n        }\n\n        if (this.state.currWeekIndex === this.state.currentMonth.length - 1) {\n          this.setState((_ref6) => {\n            let currWeekIndex = _ref6.currWeekIndex,\n                restTop = _objectWithoutProperties(_ref6, [\"currWeekIndex\"]);\n\n            return _objectSpread({\n              currWeekIndex: 0\n            }, restTop);\n          }, () => this.calendarNavigationHandler(\"increment\"));\n        }\n      }\n\n      if (modal === \"decrement\" && !this.state.currentWeek.includes(new Date().setHours(0, 0, 0, 0))) {\n        this.setState({\n          currentDayIndex: this.state.prevWeekLastDayIndex[this.state.prevWeekLastDayIndex.length - 1]\n        }, () => {\n          this.setState((_ref7) => {\n            let prevWeekLastDayIndex = _ref7.prevWeekLastDayIndex,\n                restTop = _objectWithoutProperties(_ref7, [\"prevWeekLastDayIndex\"]);\n\n            return _objectSpread({\n              prevWeekLastDayIndex: [...prevWeekLastDayIndex.slice(0, -1)]\n            }, restTop);\n          }, () => {\n            console.log(\"curr week filtered\", this.state.currentWeek.filter(day => new Date(day).getMonth() === this.state.monthGetter));\n            console.log(\"prev week index\", this.state.prevWeekLastDayIndex[this.state.prevWeekLastDayIndex.length - 1]);\n            console.log(\"current day index\", this.state.currentDayIndex);\n          });\n        });\n\n        if (this.state.currWeekIndex > 0) {\n          this.setState((_ref8) => {\n            let currWeekIndex = _ref8.currWeekIndex,\n                restTop = _objectWithoutProperties(_ref8, [\"currWeekIndex\"]);\n\n            return _objectSpread({\n              currWeekIndex: currWeekIndex - 1\n            }, restTop);\n          }, () => {\n            this.weekAgendaLogicHandler();\n          });\n        }\n\n        if (this.state.currWeekIndex === 0) {\n          console.log(\"calling calendar decrement in this.weekAgendaNavigationHandler\");\n          this.calendarNavigationHandler(\"decrement\");\n        }\n      }\n    };\n\n    this.calendarLogicHandler = () => {\n      const oneDay = 86400000;\n      const lastDayOfTheMonth = new Date(this.state.yearGetter, this.state.monthGetter + 1, 0).getDate();\n      let currentMonth = [new Date(this.state.yearGetter, this.state.monthGetter, 1).valueOf()]; //starts on month day 1\n\n      for (let i = 1; i < lastDayOfTheMonth; i++) {\n        //push the entire month\n        currentMonth.push(Math.max.apply(null, currentMonth) + oneDay);\n      } //localize the first date of the month dates array and check what day of the week it is\n      //spread the days of the week, which are the remaining days of prev month to fill calendar first week\n\n\n      for (let i = new Date(Math.min(...currentMonth)).getDay(); i > 0; i--) {\n        currentMonth.unshift(Math.min.apply(null, currentMonth) - oneDay);\n      } //spread the days of the week, which are the remaining days of prev month to fill calendar last week\n\n\n      for (let i = new Date(Math.max(...currentMonth)).getDay(); i < 6; i++) {\n        currentMonth.push(Math.max.apply(null, currentMonth) + oneDay);\n      }\n\n      let monthInWeeks = [];\n\n      for (let i = 0; i < currentMonth.length; i += 7) {\n        let chunk = currentMonth.slice(i, i + 7);\n        monthInWeeks.push(chunk);\n      }\n\n      currentMonth = monthInWeeks;\n      this.setState({\n        currentMonth\n      });\n    };\n\n    this.calendarNavigationHandler = modal => {\n      if (modal === \"increment\") {\n        //saving the max index of curr month before incrementing\n        this.setState((_ref9) => {\n          let prevMonthLastWeekIndex = _ref9.prevMonthLastWeekIndex,\n              restTop = _objectWithoutProperties(_ref9, [\"prevMonthLastWeekIndex\"]);\n\n          return _objectSpread({\n            prevMonthLastWeekIndex: [...prevMonthLastWeekIndex, this.state.currentMonth.length - 1]\n          }, restTop);\n        }, () => this.setState({\n          currWeekIndex: 0\n        }));\n\n        if (this.state.monthGetter < 11) {\n          //just add months, before changing the year\n          this.setState((_ref10) => {\n            let monthGetter = _ref10.monthGetter,\n                restTop = _objectWithoutProperties(_ref10, [\"monthGetter\"]);\n\n            return _objectSpread({\n              monthGetter: monthGetter + 1\n            }, restTop);\n          }, () => this.calendarLogicHandler());\n        }\n\n        if (this.state.monthGetter >= 11) {\n          //if the month is december it resets the month and increments the year\n          this.setState((_ref11) => {\n            let yearGetter = _ref11.yearGetter,\n                monthGetter = _ref11.monthGetter,\n                restTop = _objectWithoutProperties(_ref11, [\"yearGetter\", \"monthGetter\"]);\n\n            return _objectSpread({\n              yearGetter: yearGetter + 1,\n              monthGetter: 0\n            }, restTop);\n          }, () => this.calendarLogicHandler());\n        }\n      }\n\n      if (modal === \"decrement\") {\n        if (this.state.appViewMode === \"WeekMode\") {\n          //saving the max index of curr month before incrementing\n          this.setState({\n            currWeekIndex: this.state.prevMonthLastWeekIndex[this.state.prevMonthLastWeekIndex.length - 1]\n          }, () => {\n            this.setState((_ref12) => {\n              let prevMonthLastWeekIndex = _ref12.prevMonthLastWeekIndex,\n                  restTop = _objectWithoutProperties(_ref12, [\"prevMonthLastWeekIndex\"]);\n\n              return _objectSpread({\n                prevMonthLastWeekIndex: [...prevMonthLastWeekIndex.slice(0, -1)]\n              }, restTop);\n            });\n          });\n        }\n\n        if (this.state.appViewMode === \"CalendarMode\") {\n          //saving the max index of curr month before incrementing\n          this.setState({\n            currWeekIndex: 0\n          }, () => {\n            this.setState((_ref13) => {\n              let prevMonthLastWeekIndex = _ref13.prevMonthLastWeekIndex,\n                  restTop = _objectWithoutProperties(_ref13, [\"prevMonthLastWeekIndex\"]);\n\n              return _objectSpread({\n                prevMonthLastWeekIndex: [...prevMonthLastWeekIndex.slice(0, -1)]\n              }, restTop);\n            });\n          });\n        } //just subtract months, before changing the year, if the current day is not present in the current calendar month.\n\n\n        if (this.state.monthGetter > 0 && !this.state.currentMonth.flat().includes(new Date().setHours(0, 0, 0, 0).valueOf())) {\n          this.setState((_ref14) => {\n            let monthGetter = _ref14.monthGetter,\n                restTop = _objectWithoutProperties(_ref14, [\"monthGetter\"]);\n\n            return _objectSpread({\n              monthGetter: monthGetter - 1\n            }, restTop);\n          }, () => this.calendarLogicHandler());\n        } //if the month is december it resets the month and increments the year\n\n\n        if (this.state.monthGetter <= 0) {\n          this.setState((_ref15) => {\n            let yearGetter = _ref15.yearGetter,\n                monthGetter = _ref15.monthGetter,\n                restTop = _objectWithoutProperties(_ref15, [\"yearGetter\", \"monthGetter\"]);\n\n            return _objectSpread({\n              yearGetter: yearGetter - 1,\n              monthGetter: 11\n            }, restTop);\n          }, () => this.calendarLogicHandler());\n        }\n      }\n    };\n\n    this.appNavigationHandler = modal => {\n      if (this.state.appViewMode === \"WeekMode\") {\n        this.weekAgendaNavigationHandler(modal);\n      }\n\n      if (this.state.appViewMode === \"CalendarMode\") {\n        this.calendarNavigationHandler(modal);\n      }\n\n      if (this.state.appViewMode === \"DayMode\") {\n        this.dayAgendaNavigationHandler(modal);\n      }\n    };\n\n    this.newDatesToVerboseHandler = (date, verboseType) => {\n      let renderWeekDay = date.toString().length > 2 ? date.getDay() : date;\n\n      switch (renderWeekDay) {\n        case 0:\n          renderWeekDay = \"Sunday\";\n          break;\n\n        case 1:\n          renderWeekDay = \"Monday\";\n          break;\n\n        case 2:\n          renderWeekDay = \"Tuesday\";\n          break;\n\n        case 3:\n          renderWeekDay = \"Wednesday\";\n          break;\n\n        case 4:\n          renderWeekDay = \"Thursday\";\n          break;\n\n        case 5:\n          renderWeekDay = \"Friday\";\n          break;\n\n        case 6:\n          renderWeekDay = \"Saturday\";\n          break;\n\n        default:\n          renderWeekDay = null;\n      }\n\n      let renderMonth = date.toString().length > 2 ? date.getMonth() : date;\n\n      switch (renderMonth) {\n        case 0:\n          renderMonth = \"January\";\n          break;\n\n        case 1:\n          renderMonth = \"February\";\n          break;\n\n        case 2:\n          renderMonth = \"March\";\n          break;\n\n        case 3:\n          renderMonth = \"April\";\n          break;\n\n        case 4:\n          renderMonth = \"May\";\n          break;\n\n        case 5:\n          renderMonth = \"June\";\n          break;\n\n        case 6:\n          renderMonth = \"July\";\n          break;\n\n        case 7:\n          renderMonth = \"August\";\n          break;\n\n        case 8:\n          renderMonth = \"September\";\n          break;\n\n        case 9:\n          renderMonth = \"October\";\n          break;\n\n        case 10:\n          renderMonth = \"November\";\n          break;\n\n        case 11:\n          renderMonth = \"December\";\n          break;\n\n        default:\n          renderMonth = null;\n      }\n\n      if (verboseType === \"renderWeekDay\") {\n        return renderWeekDay;\n      }\n\n      if (verboseType === \"renderMonth\") {\n        return renderMonth;\n      }\n    };\n\n    this.backdropDisplayHandler = day => {\n      this.setState((_ref16) => {\n        let backdropIsActive = _ref16.backdropIsActive,\n            dialogBoxData = _ref16.dialogBoxData,\n            restTop = _objectWithoutProperties(_ref16, [\"backdropIsActive\", \"dialogBoxData\"]);\n\n        return _objectSpread({\n          backdropIsActive: day,\n          dialogBoxData: {\n            displayDialogBox: false\n          }\n        }, restTop);\n      });\n    };\n\n    this.displayDialogBoxHandler = (day, topPositionFromClassCard, heigthPositionFromClassCard) => {\n      let displayDialogBox;\n      let backdropIsActiv;\n\n      if (this.state.dialogBoxData.displayDialogBox !== day && this.state.backdropIsActive !== \"cover all\") {\n        displayDialogBox = day;\n        backdropIsActiv = \"cover all\";\n      }\n\n      if (this.state.dialogBoxData.displayDialogBox === day && this.state.backdropIsActive === \"cover all\") {\n        displayDialogBox = false;\n        backdropIsActiv = \"false\";\n      }\n\n      this.setState((_ref17) => {\n        let dialogBoxData = _ref17.dialogBoxData,\n            backdropIsActive = _ref17.backdropIsActive,\n            restTop = _objectWithoutProperties(_ref17, [\"dialogBoxData\", \"backdropIsActive\"]);\n\n        return _objectSpread({\n          dialogBoxData: {\n            displayDialogBox: displayDialogBox,\n            topPositionFromClassCard: topPositionFromClassCard,\n            heigthPositionFromClassCard: heigthPositionFromClassCard\n          },\n          backdropIsActive: backdropIsActiv\n        }, restTop);\n      });\n    };\n\n    this.callbackContainerDimensions = container => {\n      this.setState((_ref18) => {\n        let layoutWidthDimensions = _ref18.layoutWidthDimensions,\n            restTop = _objectWithoutProperties(_ref18, [\"layoutWidthDimensions\"]);\n\n        return _objectSpread({\n          layoutWidthDimensions: {\n            width: container.offsetWidth\n          }\n        }, restTop);\n      });\n    };\n\n    this.callbackDayCardContainerDimensions = container => {\n      this.setState((_ref19) => {\n        let layoutWidthDimensions = _ref19.layoutWidthDimensions,\n            restTop = _objectWithoutProperties(_ref19, [\"layoutWidthDimensions\"]);\n\n        return _objectSpread({\n          layoutWidthDimensions: {\n            dayCardContainerWidth: container.offsetWidth\n          }\n        }, restTop);\n      });\n    };\n\n    this.viewModeHandler = appViewMode => {\n      this.setState({\n        appViewMode\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.calendarLogicHandler();\n    this.arrayOfTableRows(this.props.agendaInitialAvailableHour, this.props.agendaLastAvailableHour);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.currentMonth !== this.state.currentMonth) {\n      console.log(\"current month has changed\");\n      const currWeekIndex = this.state.currentMonth.findIndex(week => week.includes(new Date().setHours(0, 0, 0, 0)));\n\n      if (currWeekIndex !== -1 && prevState.currWeekIndex === 'initial') {\n        this.setState({\n          currWeekIndex\n        }, () => this.weekAgendaLogicHandler());\n      } else {\n        this.weekAgendaLogicHandler();\n      }\n    }\n\n    if (prevState.currentWeek !== this.state.currentWeek) {\n      console.log(\"curr week changed\");\n      const currentDayIndex = this.state.currentWeek.findIndex(day => day === new Date().setHours(0, 0, 0, 0));\n\n      if (currentDayIndex !== -1 && prevState.currentDayIndex === 'initial') {\n        this.setState({\n          currentDayIndex\n        }, () => this.dayModeLogicHandler());\n      } else {\n        this.dayModeLogicHandler();\n      }\n    } //only set app view mode after spreading all the state through all modes\n\n\n    if (prevState.currentDay !== this.state.currentDay && prevState.currentDay === '') {\n      const appViewMode = this.props.defaultMode;\n      this.setState({\n        appViewMode\n      }, () => this.state.appViewMode);\n    }\n  } //the function below spreads the table of existing hours for <EmptyTables/>\n\n\n  render() {\n    let viewMode = \"\";\n    const weekMode = /*#__PURE__*/React.createElement(WeekMode, {\n      arrayOfDailyHoursTable: this.state.arrayOfDailyHoursTable,\n      backdropIsActive: this.state.backdropIsActive,\n      newDatesToVerboseHandler: this.newDatesToVerboseHandler,\n      displayDialogBoxHandler: this.displayDialogBoxHandler,\n      backdropDisplayHandler: data => this.backdropDisplayHandler(data),\n      dialogBoxData: this.state.dialogBoxData,\n      agendaInitialAvailableHour: this.props.agendaInitialAvailableHour,\n      layoutWidthDimensions: this.state.layoutWidthDimensions,\n      agendaLastAvailableHour: this.props.agendaLastAvailableHour,\n      dataToBeRendered: this.props.dataToBeRendered,\n      currentWeek: this.state.currentWeek,\n      monthGetter: this.state.monthGetter,\n      callbackDayCardContainerDimensions: this.callbackDayCardContainerDimensions,\n      dayCardContainerWidth: this.state.layoutWidthDimensions.dayCardContainerWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }\n    });\n    const calendarMode = /*#__PURE__*/React.createElement(CalendarMode, {\n      monthGetter: this.state.monthGetter,\n      currentMonth: this.state.currentMonth,\n      currentWeek: this.state.currentWeek,\n      newDatesToVerboseHandler: this.newDatesToVerboseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }\n    });\n    const dayMode = /*#__PURE__*/React.createElement(DayMode, {\n      arrayOfDailyHoursTable: this.state.arrayOfDailyHoursTable,\n      newDatesToVerboseHandler: this.newDatesToVerboseHandler,\n      agendaInitialAvailableHour: this.props.agendaInitialAvailableHour,\n      agendaLastAvailableHour: this.props.agendaLastAvailableHour,\n      dataToBeRendered: this.props.dataToBeRendered,\n      currentDay: this.state.currentDay,\n      monthGetter: this.state.monthGetter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }\n    });\n\n    switch (this.state.appViewMode) {\n      case 'WeekMode':\n        viewMode = weekMode;\n        break;\n\n      case 'CalendarMode':\n        viewMode = calendarMode;\n        break;\n\n      case \"DayMode\":\n        viewMode = dayMode;\n        break;\n    }\n\n    return /*#__PURE__*/React.createElement(Layout, {\n      defaultMode: this.props.defaultMode,\n      appViewMode: this.state.appViewMode,\n      weekMode: () => this.viewModeHandler(\"WeekMode\"),\n      monthMode: () => this.viewModeHandler(\"CalendarMode\"),\n      dayMode: () => this.viewModeHandler(\"DayMode\"),\n      callbackContainerDimensions: this.callbackContainerDimensions,\n      appNavigationHandler: this.appNavigationHandler,\n      newDatesToVerboseHandler: this.newDatesToVerboseHandler,\n      currentWeek: this.state.currentWeek,\n      currentMonth: this.state.monthGetter,\n      currentYear: this.state.yearGetter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }\n    }, viewMode);\n  }\n\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/Agenda.js"],"names":["React","Layout","WeekMode","CalendarMode","DayMode","Agenda","Component","state","appViewMode","currentMonth","currentWeek","currWeekIndex","prevMonthLastWeekIndex","currentDay","currentDayIndex","prevWeekLastDayIndex","monthGetter","Date","getMonth","yearGetter","getFullYear","arrayOfDailyHoursTable","backdropIsActive","dialogBoxData","displayDialogBox","topPositionFromClassCard","heigthPositionFromClassCard","layoutWidthDimensions","width","dayCardContainerWidth","arrayOfTableRows","startingHour","endingHour","i","push","Math","max","apply","setState","dayModeLogicHandler","filter","day","console","log","dayAgendaNavigationHandler","modal","filteredCurrentWeek","length","restTop","weekAgendaNavigationHandler","setHours","weekAgendaLogicHandler","calendarNavigationHandler","includes","slice","calendarLogicHandler","oneDay","lastDayOfTheMonth","getDate","valueOf","min","getDay","unshift","monthInWeeks","chunk","flat","appNavigationHandler","newDatesToVerboseHandler","date","verboseType","renderWeekDay","toString","renderMonth","backdropDisplayHandler","displayDialogBoxHandler","backdropIsActiv","callbackContainerDimensions","container","offsetWidth","callbackDayCardContainerDimensions","viewModeHandler","componentDidMount","props","agendaInitialAvailableHour","agendaLastAvailableHour","componentDidUpdate","prevProps","prevState","snapshot","findIndex","week","defaultMode","render","viewMode","weekMode","data","dataToBeRendered","calendarMode","dayMode"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Layout from \"./UI/Layout/Layout\";\nimport WeekMode from \"./UI/ViewMode/WeekMode/WeekMode\";\nimport CalendarMode from \"./UI/ViewMode/CalendarMode/CalendarMode\";\nimport DayMode from \"./UI/ViewMode/DayMode/DayMode\";\n\nexport default class Agenda extends React.Component {\n  state = {\n    appViewMode: '',\n    currentMonth: [],\n    currentWeek: [],\n    currWeekIndex: \"initial\",\n    prevMonthLastWeekIndex: [],\n    currentDay: '',\n    currentDayIndex: \"initial\",\n    prevWeekLastDayIndex: [],\n    monthGetter: new Date().getMonth(),\n    yearGetter: new Date().getFullYear(),\n    arrayOfDailyHoursTable: [],\n    backdropIsActive: false,\n    dialogBoxData: {\n      displayDialogBox: false,\n      topPositionFromClassCard: \"\",\n      heigthPositionFromClassCard: \"\"\n    },\n    layoutWidthDimensions: {\n      width: \"\",\n      dayCardContainerWidth: \"\"\n    }\n  };\n\n  componentDidMount(){\n    this.calendarLogicHandler();\n    this.arrayOfTableRows(this.props.agendaInitialAvailableHour, this.props.agendaLastAvailableHour);\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(prevState.currentMonth !== this.state.currentMonth) {\n      console.log(\"current month has changed\");\n      const currWeekIndex =  this.state.currentMonth.findIndex(week => week.includes(new Date().setHours(0,0,0,0)));\n      if(currWeekIndex !== -1 && prevState.currWeekIndex === 'initial') {\n        this.setState({currWeekIndex}, () => this.weekAgendaLogicHandler())\n      } else {\n        this.weekAgendaLogicHandler()\n      }\n    }\n    if(prevState.currentWeek !== this.state.currentWeek) {\n      console.log(\"curr week changed\");\n      const currentDayIndex = this.state.currentWeek.findIndex(day => day === new Date().setHours(0,0,0,0));\n      if(currentDayIndex !== -1 && prevState.currentDayIndex === 'initial') {\n        this.setState({currentDayIndex}, () => this.dayModeLogicHandler())\n      } else {\n        this.dayModeLogicHandler()\n      }\n    }\n    //only set app view mode after spreading all the state through all modes\n    if(prevState.currentDay !== this.state.currentDay && prevState.currentDay === '') {\n      const appViewMode = this.props.defaultMode;\n      this.setState({appViewMode}, () => this.state.appViewMode);\n    }\n  }\n\n  //the function below spreads the table of existing hours for <EmptyTables/>\n  arrayOfTableRows = (startingHour, endingHour) => {\n    let arrayOfDailyHoursTable = [startingHour];\n    for (let i = startingHour; i < endingHour; i++) {\n      arrayOfDailyHoursTable.push(\n          Math.max.apply(null, arrayOfDailyHoursTable) + 1\n      );\n    }\n    this.setState({ arrayOfDailyHoursTable });\n  };\n\n  dayModeLogicHandler = () => {\n    const currentWeek = this.state.currentWeek.filter(day => new Date(day).getMonth() === this.state.monthGetter);\n    const currentDay = currentWeek[this.state.currentDayIndex];\n    console.log(\"what should be the current day\", currentDay);\n    this.setState({currentDay});\n  };\n\n  dayAgendaNavigationHandler = modal => {\n    const filteredCurrentWeek = this.state.currentWeek.filter(day => new Date(day).getMonth() === this.state.monthGetter);\n    if(modal === 'increment') {\n      if(this.state.currentDayIndex < filteredCurrentWeek.length -1) {\n        this.setState(({currentDayIndex, ...restTop}) => ({\n          currentDayIndex: currentDayIndex + 1,\n          ...restTop\n        }), () => this.dayModeLogicHandler())\n      }\n      if(this.state.currentDayIndex === filteredCurrentWeek.length -1) {\n        this.setState(({currentDayIndex, ...restTop}) => ({\n          currentDayIndex: 0,\n          ...restTop\n        }), () => this.weekAgendaNavigationHandler('increment'))\n      }\n    }\n    if(modal === 'decrement' && this.state.currentDay !== new Date().setHours(0,0,0,0)) {\n      if(this.state.currentDayIndex > 0) {\n        this.setState(({currentDayIndex, ...restTop}) => ({\n          currentDayIndex: currentDayIndex - 1,\n          ...restTop\n        }), () => this.dayModeLogicHandler())\n      }\n      if(this.state.currentDayIndex === 0) {\n        console.log(\"current day index === 0\")\n        this.weekAgendaNavigationHandler(\"decrement\")\n      }\n    }\n  };\n\n  weekAgendaLogicHandler = () => {\n    const currentWeek = this.state.currentMonth[this.state.currWeekIndex];\n    this.setState({currentWeek});\n  };\n\n  weekAgendaNavigationHandler = modal => {\n    //init the current week index\n    if (modal === \"increment\") {\n      this.setState(({prevWeekLastDayIndex, ...restTop}) => ({\n        prevWeekLastDayIndex: [...prevWeekLastDayIndex, this.state.currentWeek.filter(day =>\n            new Date(day).getMonth() === this.state.monthGetter).length-1],\n        ...restTop\n      }), () => console.log(this.state.prevWeekLastDayIndex));\n      //if the number of weeks incremented does not exceed the amount of weeks in the month\n      if(this.state.currWeekIndex < this.state.currentMonth.length -1) {\n        this.setState(\n            ({currWeekIndex, ...restTop}) => ({\n              currWeekIndex: currWeekIndex + 1,\n              ...restTop\n            }),\n            () => this.weekAgendaLogicHandler());\n      }\n      if(this.state.currWeekIndex === this.state.currentMonth.length -1) {\n        this.setState(({currWeekIndex, ...restTop}) => ({\n          currWeekIndex: 0,\n          ...restTop\n        }), () => this.calendarNavigationHandler(\"increment\"));\n      }\n    }\n\n    if (modal === \"decrement\" && !this.state.currentWeek.includes(new Date().setHours(0,0,0,0))) {\n\n      this.setState({currentDayIndex: this.state.prevWeekLastDayIndex[this.state.prevWeekLastDayIndex.length -1]}, () => {\n        this.setState(({prevWeekLastDayIndex, ...restTop}) => ({\n          prevWeekLastDayIndex: [...prevWeekLastDayIndex.slice(0, -1)],\n          ...restTop\n        }), () => {\n          console.log(\"curr week filtered\", this.state.currentWeek.filter(day => new Date(day).getMonth() === this.state.monthGetter));\n          console.log(\"prev week index\", this.state.prevWeekLastDayIndex[this.state.prevWeekLastDayIndex.length-1])\n          console.log(\"current day index\", this.state.currentDayIndex)\n        })\n      });\n\n      if(this.state.currWeekIndex > 0) {\n        this.setState(\n            ({currWeekIndex, ...restTop}) => ({\n              currWeekIndex: currWeekIndex - 1,\n              ...restTop\n            }),\n            () => {\n              this.weekAgendaLogicHandler();\n            })}\n\n      if(this.state.currWeekIndex === 0) {\n        console.log(\"calling calendar decrement in this.weekAgendaNavigationHandler\");\n        this.calendarNavigationHandler(\"decrement\");\n      }\n    }\n  };\n\n  calendarLogicHandler = () => {\n    const oneDay = 86400000;\n    const lastDayOfTheMonth = new Date(this.state.yearGetter, this.state.monthGetter + 1, 0).getDate();\n    let currentMonth = [new Date(this.state.yearGetter, this.state.monthGetter, 1).valueOf()]; //starts on month day 1\n    for(let i = 1; i < lastDayOfTheMonth; i++) { //push the entire month\n      currentMonth.push(Math.max.apply(null, currentMonth) + oneDay)\n    }\n    //localize the first date of the month dates array and check what day of the week it is\n    //spread the days of the week, which are the remaining days of prev month to fill calendar first week\n    for(let i = new Date(Math.min(...currentMonth)).getDay(); i > 0; i-- ) {\n      currentMonth.unshift(Math.min.apply(null, currentMonth) - oneDay)\n    }\n    //spread the days of the week, which are the remaining days of prev month to fill calendar last week\n    for(let i = new Date(Math.max(...currentMonth)).getDay(); i < 6; i++ ) {\n      currentMonth.push(Math.max.apply(null, currentMonth) + oneDay)\n    }\n    let monthInWeeks = [];\n    for (let i = 0; i < currentMonth.length; i += 7 ) {\n      let chunk = currentMonth.slice(i, i+7 );\n      monthInWeeks.push(chunk)\n    }\n    currentMonth = monthInWeeks;\n    this.setState({currentMonth});\n  };\n\n  calendarNavigationHandler = modal => {\n    if(modal === \"increment\") {\n      //saving the max index of curr month before incrementing\n      this.setState(({prevMonthLastWeekIndex, ...restTop}) => ({\n        prevMonthLastWeekIndex: [...prevMonthLastWeekIndex, this.state.currentMonth.length -1],\n        ...restTop\n      }), () => this.setState({currWeekIndex: 0}));\n      if(this.state.monthGetter < 11) { //just add months, before changing the year\n        this.setState(({monthGetter, ...restTop}) => ({\n          monthGetter: monthGetter + 1,\n          ...restTop\n        }), () => this.calendarLogicHandler());\n      }\n      if(this.state.monthGetter >= 11) {//if the month is december it resets the month and increments the year\n        this.setState(({yearGetter, monthGetter, ...restTop}) => ({\n          yearGetter: yearGetter + 1,\n          monthGetter: 0,\n          ...restTop\n        }), () => this.calendarLogicHandler())\n      }\n    }\n    if (modal === \"decrement\") {\n      if(this.state.appViewMode === \"WeekMode\") {\n        //saving the max index of curr month before incrementing\n        this.setState({currWeekIndex: this.state.prevMonthLastWeekIndex[this.state.prevMonthLastWeekIndex.length -1]}, () => {\n          this.setState(({prevMonthLastWeekIndex, ...restTop}) => ({\n            prevMonthLastWeekIndex: [...prevMonthLastWeekIndex.slice(0, -1)],\n            ...restTop\n          }));\n        });\n      }\n      if(this.state.appViewMode === \"CalendarMode\") {\n        //saving the max index of curr month before incrementing\n        this.setState({currWeekIndex: 0}, () => {\n          this.setState(({prevMonthLastWeekIndex, ...restTop}) => ({\n            prevMonthLastWeekIndex: [...prevMonthLastWeekIndex.slice(0, -1)],\n            ...restTop\n          }));\n        });\n      }\n      //just subtract months, before changing the year, if the current day is not present in the current calendar month.\n      if(this.state.monthGetter > 0 && !this.state.currentMonth.flat().includes(new Date().setHours(0,0,0,0).valueOf())) {\n        this.setState(({monthGetter, ...restTop}) => ({\n          monthGetter: monthGetter - 1,\n          ...restTop\n        }), () => this.calendarLogicHandler());\n      }\n      //if the month is december it resets the month and increments the year\n      if(this.state.monthGetter <= 0) {\n        this.setState(({yearGetter, monthGetter, ...restTop}) => ({\n          yearGetter: yearGetter - 1,\n          monthGetter: 11,\n          ...restTop\n        }), () => this.calendarLogicHandler())\n      }\n    }\n  };\n\n  //this functions navigates in between weeks\n  appNavigationHandler = modal => {\n    if(this.state.appViewMode === \"WeekMode\") {\n      this.weekAgendaNavigationHandler(modal)\n    }\n    if(this.state.appViewMode === \"CalendarMode\") {\n      this.calendarNavigationHandler(modal)\n    }\n    if(this.state.appViewMode === \"DayMode\") {\n      this.dayAgendaNavigationHandler(modal)\n    }\n  };\n\n  //this function does the verbose work for my days to appear nicely\n  newDatesToVerboseHandler = (date, verboseType) => {\n    let renderWeekDay = date.toString().length > 2 ?\n        date.getDay() : date;\n    switch (renderWeekDay) {\n      case 0:\n        renderWeekDay = \"Sunday\";\n        break;\n\n      case 1:\n        renderWeekDay = \"Monday\";\n        break;\n\n      case 2:\n        renderWeekDay = \"Tuesday\";\n        break;\n\n      case 3:\n        renderWeekDay = \"Wednesday\";\n        break;\n\n      case 4:\n        renderWeekDay = \"Thursday\";\n        break;\n\n      case 5:\n        renderWeekDay = \"Friday\";\n        break;\n\n      case 6:\n        renderWeekDay = \"Saturday\";\n        break;\n      default:\n        renderWeekDay = null;\n    }\n\n    let renderMonth =  date.toString().length > 2 ?\n        date.getMonth() : date;\n\n    switch (renderMonth) {\n      case 0:\n        renderMonth = \"January\";\n        break;\n\n      case 1:\n        renderMonth = \"February\";\n        break;\n\n      case 2:\n        renderMonth = \"March\";\n        break;\n\n      case 3:\n        renderMonth = \"April\";\n        break;\n\n      case 4:\n        renderMonth = \"May\";\n        break;\n\n      case 5:\n        renderMonth = \"June\";\n        break;\n\n      case 6:\n        renderMonth = \"July\";\n        break;\n\n      case 7:\n        renderMonth = \"August\";\n        break;\n\n      case 8:\n        renderMonth = \"September\";\n        break;\n\n      case 9:\n        renderMonth = \"October\";\n        break;\n\n      case 10:\n        renderMonth = \"November\";\n        break;\n\n      case 11:\n        renderMonth = \"December\";\n        break;\n      default:\n        renderMonth = null;\n    }\n\n    if (verboseType === \"renderWeekDay\") {\n      return renderWeekDay;\n    }\n    if (verboseType === \"renderMonth\") {\n      return renderMonth;\n    }\n  };\n  //by clicking inside a event day card activates the backdrop for that day so I can edit the events or ad new ones\n  backdropDisplayHandler = (day) => {\n    this.setState(({ backdropIsActive, dialogBoxData, ...restTop }) => ({\n      backdropIsActive: day,\n      dialogBoxData: {\n        displayDialogBox: false\n      },\n      ...restTop\n    }));\n  };\n  //logic to run the dialog box. This box will handle create class, edit class & view full class card\n  displayDialogBoxHandler = (\n      day,\n      topPositionFromClassCard,\n      heigthPositionFromClassCard\n  ) => {\n    let displayDialogBox;\n    let backdropIsActiv;\n\n    if (this.state.dialogBoxData.displayDialogBox !== day && this.state.backdropIsActive !== \"cover all\") {\n      displayDialogBox = day;\n      backdropIsActiv = \"cover all\";\n    }\n    if (this.state.dialogBoxData.displayDialogBox === day && this.state.backdropIsActive === \"cover all\") {\n      displayDialogBox = false;\n      backdropIsActiv = \"false\";\n    }\n    this.setState(({ dialogBoxData, backdropIsActive, ...restTop }) => ({\n      dialogBoxData: {\n        displayDialogBox: displayDialogBox,\n        topPositionFromClassCard: topPositionFromClassCard,\n        heigthPositionFromClassCard: heigthPositionFromClassCard\n      },\n      backdropIsActive: backdropIsActiv,\n      ...restTop\n    }));\n  };\n\n  callbackContainerDimensions = container => {\n    this.setState(({ layoutWidthDimensions, ...restTop }) => ({\n      layoutWidthDimensions: {\n        width: container.offsetWidth,\n      },\n      ...restTop\n    }));\n  };\n\n  callbackDayCardContainerDimensions = container => {\n    this.setState(({ layoutWidthDimensions, ...restTop }) => ({\n      layoutWidthDimensions: {\n        dayCardContainerWidth: container.offsetWidth,\n      },\n      ...restTop\n    }));\n  };\n\n  viewModeHandler = (appViewMode) => {\n    this.setState({appViewMode})\n  };\n  render() {\n    let viewMode = \"\";\n    const weekMode = (\n        <WeekMode\n            arrayOfDailyHoursTable={this.state.arrayOfDailyHoursTable}\n            backdropIsActive={this.state.backdropIsActive}\n            newDatesToVerboseHandler={this.newDatesToVerboseHandler}\n            displayDialogBoxHandler={this.displayDialogBoxHandler}\n            backdropDisplayHandler={(data) => this.backdropDisplayHandler(data)}\n            dialogBoxData={this.state.dialogBoxData}\n            agendaInitialAvailableHour={this.props.agendaInitialAvailableHour}\n            layoutWidthDimensions={this.state.layoutWidthDimensions}\n            agendaLastAvailableHour={this.props.agendaLastAvailableHour}\n            dataToBeRendered={this.props.dataToBeRendered}\n            currentWeek={this.state.currentWeek}\n            monthGetter={this.state.monthGetter}\n            callbackDayCardContainerDimensions={this.callbackDayCardContainerDimensions}\n            dayCardContainerWidth={this.state.layoutWidthDimensions.dayCardContainerWidth}\n        />\n    );\n    const calendarMode = (\n        <CalendarMode\n            monthGetter={this.state.monthGetter}\n            currentMonth={this.state.currentMonth}\n            currentWeek={this.state.currentWeek}\n            newDatesToVerboseHandler={this.newDatesToVerboseHandler}/>\n    );\n    const dayMode = (\n        <DayMode\n            arrayOfDailyHoursTable={this.state.arrayOfDailyHoursTable}\n            newDatesToVerboseHandler={this.newDatesToVerboseHandler}\n            agendaInitialAvailableHour={this.props.agendaInitialAvailableHour}\n            agendaLastAvailableHour={this.props.agendaLastAvailableHour}\n            dataToBeRendered={this.props.dataToBeRendered}\n            currentDay={this.state.currentDay}\n            monthGetter={this.state.monthGetter}/>\n    );\n    switch (this.state.appViewMode) {\n      case('WeekMode') :\n        viewMode = weekMode;\n        break;\n      case('CalendarMode') :\n        viewMode = calendarMode;\n        break;\n      case(\"DayMode\") :\n        viewMode = dayMode;\n        break;\n    }\n    return (\n        <Layout\n            defaultMode={this.props.defaultMode}\n            appViewMode={this.state.appViewMode}\n            weekMode={() => this.viewModeHandler(\"WeekMode\")}\n            monthMode={() => this.viewModeHandler(\"CalendarMode\")}\n            dayMode={() => this.viewModeHandler(\"DayMode\")}\n            callbackContainerDimensions={this.callbackContainerDimensions}\n            appNavigationHandler={this.appNavigationHandler}\n            newDatesToVerboseHandler={this.newDatesToVerboseHandler}\n            currentWeek={this.state.currentWeek}\n            currentMonth={this.state.monthGetter}\n            currentYear={this.state.yearGetter}\n        >\n          {viewMode}\n        </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}