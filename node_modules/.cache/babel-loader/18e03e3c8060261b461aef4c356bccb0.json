{"ast":null,"code":"import _slicedToArray from \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/DayMode/DayMode.js\";\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport SideTab from \"../../../SideTab/SideTab\";\nimport TimeTables from \"../../../TimeTables/TimeTables\";\nimport EventCard from \"../../../EventCard/EventCard\";\nimport DayCard from \"./DayCard/DayCard\";\nimport classes from \"./DayCard/DayCard.module.css\";\nexport default function DayMode(props) {\n  /*const [dayCardRef, setDayCardRef] = useState();*/\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        singleTimeTableHeight = _useState2[0],\n        setSingleTimeTableHeight = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newEvent = _useState4[0],\n        setNewEvent = _useState4[1];\n\n  const ref = useRef();\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        dimensions = _useState6[0],\n        setDimensions = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mouseX = _useState8[0],\n        setMouseX = _useState8[1];\n\n  const _useState9 = useState(),\n        _useState10 = _slicedToArray(_useState9, 2),\n        mouseY = _useState10[0],\n        setMouseY = _useState10[1];\n\n  const updateDimensions = () => {\n    setDimensions(ref.current.getBoundingClientRect());\n  }; //componentDidMount\n\n\n  useLayoutEffect(() => {\n    updateDimensions();\n    window.addEventListener(\"resize\", updateDimensions);\n    return () => {\n      window.removeEventListener(\"resize\", updateDimensions);\n    };\n  }, []);\n  useEffect(() => {\n    updateDimensions();\n  }, [dimensions]);\n\n  const mouseMoveHandler = event => {\n    setMouseX(event.screenX);\n    setMouseY(event.screenY);\n  };\n\n  console.log(\"X: \", mouseX - dimensions.x);\n  console.log(\"Y: \", mouseY - dimensions.y - 79); // why there is an extra 79px here?\n\n  /* const callbackDivRef = childRef => {\n           setDayCardRef(childRef)\n   };*/\n\n  const callbackTimeTableDims = childRef => {\n    setSingleTimeTableHeight(childRef);\n  };\n\n  if (singleTimeTableHeight !== undefined) {}\n\n  const displayNewEventHandler = () => {\n    setNewEvent(!newEvent);\n  };\n\n  console.log(newEvent);\n  const today = props.currentDay;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"100%\"\n    },\n    onDoubleClick: displayNewEventHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideTab, {\n    style: {\n      height: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TimeTables, {\n    currAgendaData: props.currentDay,\n    appViewMode: props.appViewMode,\n    dayCardContainerWidth: dimensions //it was day card ref\n    ,\n    style: {\n      color: \"black\",\n      border: \"none\",\n      boxShadow: \"none\",\n      borderRadius: \"0\"\n    },\n    tableOfAvailableHours: props.arrayOfDailyHoursTable,\n    agendaInitialAvailableHour: props.agendaInitialAvailableHour,\n    agendaLastAvailableHour: props.agendaLastAvailableHour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    onMouseMove: event => mouseMoveHandler(event),\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TimeTables, {\n    tableOfAvailableHours: props.arrayOfDailyHoursTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }), props.dataToBeRendered.filter(cl => cl.classDate === today).map(cl => /*#__PURE__*/React.createElement(EventCard, {\n    zIndexIFClicked: props.dialogBoxData.displayDialogBox,\n    currDay: today,\n    classDate: cl.classDate,\n    classTitle: cl.classTitle,\n    classLocation: cl.location,\n    classDuration: cl.duration,\n    classTime: cl.classTime,\n    classInitialAvailableHour: props.agendaInitialAvailableHour,\n    key: cl.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(SideTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/DayMode/DayMode.js"],"names":["React","useEffect","useLayoutEffect","useRef","useState","SideTab","TimeTables","EventCard","DayCard","classes","DayMode","props","singleTimeTableHeight","setSingleTimeTableHeight","newEvent","setNewEvent","ref","dimensions","setDimensions","mouseX","setMouseX","mouseY","setMouseY","updateDimensions","current","getBoundingClientRect","window","addEventListener","removeEventListener","mouseMoveHandler","event","screenX","screenY","console","log","x","y","callbackTimeTableDims","childRef","undefined","displayNewEventHandler","today","currentDay","display","flexDirection","width","height","appViewMode","color","border","boxShadow","borderRadius","arrayOfDailyHoursTable","agendaInitialAvailableHour","agendaLastAvailableHour","position","dataToBeRendered","filter","cl","classDate","map","dialogBoxData","displayDialogBox","classTitle","location","duration","classTime","id"],"mappings":"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","sourcesContent":["import React, {useEffect, useLayoutEffect, useRef, useState} from 'react'\nimport SideTab from \"../../../SideTab/SideTab\";\nimport TimeTables from \"../../../TimeTables/TimeTables\";\nimport EventCard from \"../../../EventCard/EventCard\";\nimport DayCard from \"./DayCard/DayCard\";\nimport classes from \"./DayCard/DayCard.module.css\";\n\nexport default function DayMode(props) {\n    /*const [dayCardRef, setDayCardRef] = useState();*/\n    const [singleTimeTableHeight, setSingleTimeTableHeight] = useState();\n    const [newEvent, setNewEvent] = useState(false);\n    const ref = useRef();\n    const [dimensions, setDimensions] = useState({});\n    const [mouseX, setMouseX] = useState();\n    const [mouseY, setMouseY] = useState();\n\n    const updateDimensions = () => {\n        setDimensions(ref.current.getBoundingClientRect());\n    };\n    //componentDidMount\n    useLayoutEffect(() => {\n        updateDimensions();\n        window.addEventListener(\"resize\", updateDimensions);\n        return () => {\n            window.removeEventListener(\"resize\", updateDimensions)\n        }\n    }, []);\n\n    useEffect(() => {\n       updateDimensions()\n    }, [dimensions]);\n\n    const mouseMoveHandler = event => {\n        setMouseX(event.screenX);\n        setMouseY(event.screenY);\n    }\n    console.log(\"X: \", mouseX - dimensions.x);\n    console.log(\"Y: \", mouseY - dimensions.y - 79); // why there is an extra 79px here?\n\n   /* const callbackDivRef = childRef => {\n            setDayCardRef(childRef)\n    };*/\n    const callbackTimeTableDims = childRef => {\n       setSingleTimeTableHeight(childRef)\n    };\n    if(singleTimeTableHeight !== undefined) {\n    }\n    const displayNewEventHandler = () => {\n      setNewEvent(!newEvent)\n    };\n    console.log(newEvent);\n    const today = props.currentDay;\n    return (\n        <div style={{display: \"flex\", flexDirection: \"row\", width: \"100%\"}} onDoubleClick={displayNewEventHandler}>\n            <SideTab style={{height: \"auto\"}}>\n                <TimeTables\n                    currAgendaData={props.currentDay}\n                    appViewMode={props.appViewMode}\n                    dayCardContainerWidth={dimensions}//it was day card ref\n                    style={{ color: \"black\", border: \"none\", boxShadow: \"none\",  borderRadius: \"0\" }}\n                    tableOfAvailableHours={props.arrayOfDailyHoursTable}\n                    agendaInitialAvailableHour={props.agendaInitialAvailableHour}\n                    agendaLastAvailableHour={props.agendaLastAvailableHour}\n                />\n            </SideTab>\n           {/* <DayCard\n                appViewMode={props.appViewMode}\n                callbackDivRef={callbackDivRef}\n                monthGetter={props.monthGetter}\n                backdropIsActive={props.backdropIsActive}\n                today={today}\n                newDatesToVerboseHandler={props.newDatesToVerboseHandler}\n            >*/}\n                <div style={{position: \"relative\"}}\n                     onMouseMove={(event) => mouseMoveHandler(event)}\n                     ref={ref}>\n                    <div>\n                        <div>\n                            <TimeTables\n                                tableOfAvailableHours={props.arrayOfDailyHoursTable}\n                            />\n                            {props.dataToBeRendered.filter(cl => cl.classDate === today).map(cl =>\n                                <EventCard\n                                    zIndexIFClicked={props.dialogBoxData.displayDialogBox}\n                                    currDay={today}\n                                    classDate={cl.classDate}\n                                    classTitle={cl.classTitle}\n                                    classLocation={cl.location}\n                                    classDuration={cl.duration}\n                                    classTime={cl.classTime}\n                                    classInitialAvailableHour={props.agendaInitialAvailableHour}\n                                    key={cl.id}\n                                />\n                            )}\n                        </div>\n                    </div>\n\n                </div>\n           {/* </DayCard>*/}\n            <SideTab />\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}