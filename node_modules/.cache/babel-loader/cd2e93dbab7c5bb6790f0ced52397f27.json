{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/Components/TimeTables/TimeTables.js\";\nimport React from \"react\";\nimport CurrentTime from \"../../UI/CurrentTIme/CurrentTime\";\nimport classes from \"./TimeTables.module.css\";\nexport default function EmptyTables(props) {\n  const calculateCurrentTime = (new Date().getHours() - props.agendaInitialAvailableHour) * 60 + new Date().getMinutes();\n  const showCurrentTime = (props.agendaLastAvailableHour - props.agendaInitialAvailableHour) * 60 + 60 > calculateCurrentTime;\n\n  const currentTimeHalfAnHourFromTableDayHour = singleHour => {\n    return singleHour - new Date().getHours() === 1 && new Date().getMinutes() > 30 || new Date().getHours() - singleHour === 1 && new Date().getMinutes() < 30;\n  };\n\n  let todayIsPresentInScreenToRenderCurrentHour;\n  if (props.appViewMode === \"WeekMode\") todayIsPresentInScreenToRenderCurrentHour = props.currAgendaData.includes(new Date().setHours(0, 0, 0, 0).valueOf());\n  if (props.appViewMode === \"DayMode\") todayIsPresentInScreenToRenderCurrentHour = new Date().setHours(0, 0, 0, 0).valueOf() === props.currAgendaData;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.EmptyTableWrapper,\n    style: props.outerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, props.style !== undefined && showCurrentTime && todayIsPresentInScreenToRenderCurrentHour ? /*#__PURE__*/React.createElement(CurrentTime, {\n    currentTime: calculateCurrentTime,\n    dayCardContainerWidth: props.dayCardContainerWidth,\n    appViewMode: props.appViewMode,\n    classInitialAvailableHour: props.classInitialAvailableHour,\n    classLastlAvailableHour: props.classLastAvailableHour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }) : null, props.tableOfAvailableHours.map(singleHour => {\n    //ensure that there only content in the div for the column that displays the hours\n    let displaySingleHour;\n    if (props.style !== undefined && !currentTimeHalfAnHourFromTableDayHour(singleHour)) displaySingleHour = \"\".concat(singleHour, \":00\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: singleHour,\n      className: classes.EmptyTable,\n      style: props.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, displaySingleHour);\n  }));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/Components/TimeTables/TimeTables.js"],"names":["React","CurrentTime","classes","EmptyTables","props","calculateCurrentTime","Date","getHours","agendaInitialAvailableHour","getMinutes","showCurrentTime","agendaLastAvailableHour","currentTimeHalfAnHourFromTableDayHour","singleHour","todayIsPresentInScreenToRenderCurrentHour","appViewMode","currAgendaData","includes","setHours","valueOf","EmptyTableWrapper","outerStyle","style","undefined","dayCardContainerWidth","classInitialAvailableHour","classLastAvailableHour","tableOfAvailableHours","map","displaySingleHour","EmptyTable"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAMC,oBAAoB,GAAG,CAAC,IAAIC,IAAJ,GAAWC,QAAX,KAAwBH,KAAK,CAACI,0BAA/B,IAA6D,EAA7D,GAAkE,IAAIF,IAAJ,GAAWG,UAAX,EAA/F;AACA,QAAMC,eAAe,GAAG,CAACN,KAAK,CAACO,uBAAN,GAAgCP,KAAK,CAACI,0BAAvC,IAAqE,EAArE,GAA0E,EAA1E,GAA+EH,oBAAvG;;AACA,QAAMO,qCAAqC,GAAGC,UAAU,IAAI;AAC3D,WAAQA,UAAU,GAAG,IAAIP,IAAJ,GAAWC,QAAX,EAAb,KAAuC,CAAvC,IAA4C,IAAID,IAAJ,GAAWG,UAAX,KAA0B,EAAvE,IACF,IAAIH,IAAJ,GAAWC,QAAX,KAAwBM,UAAxB,KAAuC,CAAvC,IAA4C,IAAIP,IAAJ,GAAWG,UAAX,KAA0B,EAD3E;AAEA,GAHD;;AAIA,MAAIK,yCAAJ;AACA,MAAGV,KAAK,CAACW,WAAN,KAAsB,UAAzB,EACED,yCAAyC,GAAGV,KAAK,CAACY,cAAN,CAAqBC,QAArB,CAA8B,IAAIX,IAAJ,GAAWY,QAAX,CAAoB,CAApB,EAAsB,CAAtB,EAAwB,CAAxB,EAA0B,CAA1B,EAA6BC,OAA7B,EAA9B,CAA5C;AACF,MAAGf,KAAK,CAACW,WAAN,KAAsB,SAAzB,EACED,yCAAyC,GAAG,IAAIR,IAAJ,GAAWY,QAAX,CAAoB,CAApB,EAAsB,CAAtB,EAAwB,CAAxB,EAA0B,CAA1B,EAA6BC,OAA7B,OAA2Cf,KAAK,CAACY,cAA7F;AACF,sBACI;AAAK,IAAA,SAAS,EAAEd,OAAO,CAACkB,iBAAxB;AAA2C,IAAA,KAAK,EAAEhB,KAAK,CAACiB,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,KAAK,CAACkB,KAAN,KAAgBC,SAAhB,IAA6Bb,eAA7B,IAAgDI,yCAAhD,gBACG,oBAAC,WAAD;AAAa,IAAA,WAAW,EAAET,oBAA1B;AACa,IAAA,qBAAqB,EAAED,KAAK,CAACoB,qBAD1C;AAEa,IAAA,WAAW,EAAEpB,KAAK,CAACW,WAFhC;AAGa,IAAA,yBAAyB,EAAEX,KAAK,CAACqB,yBAH9C;AAIa,IAAA,uBAAuB,EAAErB,KAAK,CAACsB,sBAJ5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAMG,IAPN,EAQGtB,KAAK,CAACuB,qBAAN,CAA4BC,GAA5B,CAAgCf,UAAU,IAAI;AAC7C;AACA,QAAIgB,iBAAJ;AACA,QAAIzB,KAAK,CAACkB,KAAN,KAAgBC,SAAhB,IAA6B,CAACX,qCAAqC,CAACC,UAAD,CAAvE,EAAqFgB,iBAAiB,aAAMhB,UAAN,QAAjB;AACrF,wBACI;AAAK,MAAA,GAAG,EAAEA,UAAV;AACK,MAAA,SAAS,EAAEX,OAAO,CAAC4B,UADxB;AAEK,MAAA,KAAK,EAAE1B,KAAK,CAACkB,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGO,iBAHH,CADJ;AAOD,GAXA,CARH,CADJ;AAuBD","sourcesContent":["import React from \"react\";\nimport CurrentTime from \"../../UI/CurrentTIme/CurrentTime\";\nimport classes from \"./TimeTables.module.css\";\n\nexport default function EmptyTables(props) {\n  const calculateCurrentTime = (new Date().getHours() - props.agendaInitialAvailableHour) * 60 + new Date().getMinutes();\n  const showCurrentTime = (props.agendaLastAvailableHour - props.agendaInitialAvailableHour) * 60 + 60 > calculateCurrentTime;\n  const currentTimeHalfAnHourFromTableDayHour = singleHour => {\n   return (singleHour - new Date().getHours() === 1 && new Date().getMinutes() > 30) ||\n       (new Date().getHours() - singleHour === 1 && new Date().getMinutes() < 30)\n  };\n  let todayIsPresentInScreenToRenderCurrentHour;\n  if(props.appViewMode === \"WeekMode\")\n    todayIsPresentInScreenToRenderCurrentHour = props.currAgendaData.includes(new Date().setHours(0,0,0,0).valueOf());\n  if(props.appViewMode === \"DayMode\")\n    todayIsPresentInScreenToRenderCurrentHour = new Date().setHours(0,0,0,0).valueOf() === props.currAgendaData;\n  return (\n      <div className={classes.EmptyTableWrapper} style={props.outerStyle}>\n        {props.style !== undefined && showCurrentTime && todayIsPresentInScreenToRenderCurrentHour?\n            <CurrentTime currentTime={calculateCurrentTime}\n                         dayCardContainerWidth={props.dayCardContainerWidth}\n                         appViewMode={props.appViewMode}\n                         classInitialAvailableHour={props.classInitialAvailableHour}\n                         classLastlAvailableHour={props.classLastAvailableHour}/> :\n            null}\n        {props.tableOfAvailableHours.map(singleHour => {\n          //ensure that there only content in the div for the column that displays the hours\n          let displaySingleHour;\n          if (props.style !== undefined && !currentTimeHalfAnHourFromTableDayHour(singleHour)) displaySingleHour = `${singleHour}:00`;\n          return (\n              <div key={singleHour}\n                   className={classes.EmptyTable}\n                   style={props.style}>\n                {displaySingleHour}\n              </div>\n          );\n        })}\n      </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}