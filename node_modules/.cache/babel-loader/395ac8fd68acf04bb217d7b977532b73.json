{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/AgendaCards/DateCards.js/DateCards.js\";\nimport React from 'react';\nimport classes from \"./DateCards.module.css\";\nimport MonthTeller from \"../../UI/MonthTeller/MonthTeller\";\nexport default function DateCards(props) {\n  let todayStyle;\n\n  if (new Date(props.today).getDate() === new Date().getDate() && new Date(props.today).getMonth() === new Date().getMonth()) {\n    todayStyle = {\n      backgroundColor: \"#f56157\",\n      color: \"white\"\n    };\n  }\n\n  let nonMonthDates = {};\n  let monthTeller;\n\n  if (new Date(props.today).getMonth() !== props.monthGetter) {\n    nonMonthDates = {\n      color: 'grey'\n    };\n    monthTeller = /*#__PURE__*/React.createElement(MonthTeller, {\n      monthGetter: props.monthGetter,\n      newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 23\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.DateWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MonthTeller, {\n    monthGetter: props.monthGetter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Day,\n    style: Object.assign(nonMonthDates, todayStyle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, new Date(props.today).getDate()));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/AgendaCards/DateCards.js/DateCards.js"],"names":["React","classes","MonthTeller","DateCards","props","todayStyle","Date","today","getDate","getMonth","backgroundColor","color","nonMonthDates","monthTeller","monthGetter","newDatesToVerboseHandler","DateWrapper","Day","Object","assign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACrC,MAAIC,UAAJ;;AACA,MACI,IAAIC,IAAJ,CAASF,KAAK,CAACG,KAAf,EAAsBC,OAAtB,OAAoC,IAAIF,IAAJ,GAAWE,OAAX,EAApC,IACA,IAAIF,IAAJ,CAASF,KAAK,CAACG,KAAf,EAAsBE,QAAtB,OAAqC,IAAIH,IAAJ,GAAWG,QAAX,EAFzC,EAGE;AACEJ,IAAAA,UAAU,GAAG;AAAEK,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KAAb;AACH;;AAED,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,WAAJ;;AACA,MAAG,IAAIP,IAAJ,CAASF,KAAK,CAACG,KAAf,EAAsBE,QAAtB,OAAqCL,KAAK,CAACU,WAA9C,EAA2D;AACvDF,IAAAA,aAAa,GAAG;AAACD,MAAAA,KAAK,EAAE;AAAR,KAAhB;AACAE,IAAAA,WAAW,gBAAG,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAET,KAAK,CAACU,WAAhC;AACa,MAAA,wBAAwB,EAAEV,KAAK,CAACW,wBAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAEH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEd,OAAO,CAACe,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,WAAW,EAAEZ,KAAK,CAACU,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACgB,GAAxB;AAA6B,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcP,aAAd,EAA4BP,UAA5B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,IAAIC,IAAJ,CAASF,KAAK,CAACG,KAAf,EAAsBC,OAAtB,EADL,CAFJ,CADJ;AAQH","sourcesContent":["import React from 'react'\nimport classes from \"./DateCards.module.css\";\nimport MonthTeller from \"../../UI/MonthTeller/MonthTeller\";\n\nexport default function DateCards(props) {\n    let todayStyle;\n    if (\n        new Date(props.today).getDate() === new Date().getDate() &&\n        new Date(props.today).getMonth() === new Date().getMonth()\n    ) {\n        todayStyle = { backgroundColor: \"#f56157\", color: \"white\" };\n    }\n\n    let nonMonthDates = {};\n    let monthTeller;\n    if(new Date(props.today).getMonth() !== props.monthGetter) {\n        nonMonthDates = {color: 'grey'};\n        monthTeller = <MonthTeller monthGetter={props.monthGetter}\n                                   newDatesToVerboseHandler={props.newDatesToVerboseHandler}/>\n    }\n\n    return(\n        <div className={classes.DateWrapper}>\n            <MonthTeller monthGetter={props.monthGetter}/>\n            <div className={classes.Day} style={Object.assign(nonMonthDates,todayStyle)}>\n                {new Date(props.today).getDate()}\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}