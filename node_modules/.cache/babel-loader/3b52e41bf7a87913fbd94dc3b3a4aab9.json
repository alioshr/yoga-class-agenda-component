{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/CalendarMode/CalendarMode.js\";\nimport React, { Fragment } from 'react';\nimport DateCards from \"../../../Components/DateCards.js/DateCards\";\nimport DayOfTheWeekCard from \"../../../Components/DayOfTheWeekCard/DayOfTheWeekCard\";\nexport default function CalendarMode(props) {\n  console.log(props.newDatesToVerboseHandler(0, \"renderWeekDay\"));\n\n  const testingLiftedDate = childDate => {\n    console.log(\"clicked Date\", childDate);\n  };\n\n  let dayHeaderWrapper;\n  let dayCardStyle;\n\n  if (props.calendarViewType === \"FullCalendar\" && props.appViewMode === \"CalendarMode\") {\n    dayHeaderWrapper = {\n      display: \"flex\",\n      zIndex: 0,\n      fontSize: \"1.5rem\",\n      justifyContent: \"flex-end\",\n      alignItems: \"flex-end\",\n      height: \"auto\"\n    };\n    dayCardStyle = {\n      color: \"black\",\n      margin: \"1px\",\n      fontSize: \"1.5rem\"\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, [1585450800000, 1585537200000, 1585623600000, 1585710000000, 1585796400000, 1585882800000, 1585969200000].map((day, dayIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: dayHeaderWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DayOfTheWeekCard, {\n    style: dayCardStyle,\n    newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n    today: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, props.currentMonth.flat().filter(date => new Date(date).getDay() === new Date(day).getDay()).map((date, innerDateIndex) => /*#__PURE__*/React.createElement(DateCards, {\n    today: date,\n    liftClickedDate: testingLiftedDate,\n    currentDay: props.currentDay,\n    key: date,\n    monthGetter: props.monthGetter,\n    newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n    calendarViewType: props.calendarViewType,\n    cardDayIndex: dayIndex,\n    cardDatesInnerIndex: innerDateIndex,\n    appViewMode: props.appViewMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/CalendarMode/CalendarMode.js"],"names":["React","Fragment","DateCards","DayOfTheWeekCard","CalendarMode","props","console","log","newDatesToVerboseHandler","testingLiftedDate","childDate","dayHeaderWrapper","dayCardStyle","calendarViewType","appViewMode","display","zIndex","fontSize","justifyContent","alignItems","height","color","margin","flexDirection","width","map","day","dayIndex","currentMonth","flat","filter","date","Date","getDay","innerDateIndex","currentDay","monthGetter"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\nimport DateCards from \"../../../Components/DateCards.js/DateCards\";\nimport DayOfTheWeekCard from \"../../../Components/DayOfTheWeekCard/DayOfTheWeekCard\";\n\nexport default function CalendarMode(props) {\n    console.log(props.newDatesToVerboseHandler(0,\"renderWeekDay\"))\n    const testingLiftedDate = childDate => {\n        console.log(\"clicked Date\",childDate)\n    }\n    let dayHeaderWrapper;\n    let dayCardStyle;\n    if(props.calendarViewType === \"FullCalendar\" && props.appViewMode === \"CalendarMode\") {\n        dayHeaderWrapper = {\n            display: \"flex\",\n            zIndex: 0,\n            fontSize: \"1.5rem\",\n            justifyContent: \"flex-end\",\n            alignItems: \"flex-end\",\n            height: \"auto\"\n        };\n        dayCardStyle = {color: \"black\", margin: \"1px\", fontSize: \"1.5rem\"};\n    }\n    return (\n        <div style={{display: \"flex\", flexDirection: \"row\", width: \"100%\"}}>\n            {[1585450800000, 1585537200000, 1585623600000, 1585710000000, 1585796400000, 1585882800000, 1585969200000].map((day, dayIndex) =>\n                <div style={{width: \"100%\"}}>\n                    <div style={dayHeaderWrapper}>\n                        <DayOfTheWeekCard\n                            style={dayCardStyle}\n                            newDatesToVerboseHandler={props.newDatesToVerboseHandler}\n                            today={day}/>\n                    </div>\n                    <Fragment>\n                    {props.currentMonth\n                        .flat()\n                        .filter(date => new Date(date).getDay() === new Date(day).getDay())\n                        .map((date, innerDateIndex) =>\n                            <DateCards today={date}\n                                       liftClickedDate={testingLiftedDate}\n                                       currentDay={props.currentDay}\n                                       key={date}\n                                       monthGetter={props.monthGetter}\n                                       newDatesToVerboseHandler={props.newDatesToVerboseHandler}\n                                       calendarViewType={props.calendarViewType}\n                                       cardDayIndex={dayIndex}\n                                       cardDatesInnerIndex={innerDateIndex}\n                                       appViewMode={props.appViewMode}/>\n                        )}\n                    </Fragment>\n                </div>\n            )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}