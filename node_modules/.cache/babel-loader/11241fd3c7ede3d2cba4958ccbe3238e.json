{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/EventCard/EventCard.js\";\nimport React from \"react\";\nimport classes from \"./EventCard.module.css\";\nexport default function ClassCard(props) {\n  //adds extra digit(zeros) for numbers upon rendering\n  const padToTwo = number => number <= 9 ? \"0\".concat(number) : number; //function that calculates the class start or class end\n\n\n  const classElapseHandler = (classDate, classStartHour, classStartMinute, classDuration, classModal) => {\n    const clDuration = classDuration.split(\"\").slice(0, 2).join(\"\");\n\n    const classHourToMilliseconds = hour => 3600000 * hour;\n\n    const classMinutesInMilliseconds = minutes => 60000 * minutes;\n\n    const classStart = classDate + classHourToMilliseconds(classStartHour) + classMinutesInMilliseconds(classStartMinute);\n    const classEnd = \"\".concat(padToTwo(new Date(classStart + classMinutesInMilliseconds(clDuration)).getHours()), \":\").concat(padToTwo(new Date(classStart + classMinutesInMilliseconds(clDuration)).getMinutes()));\n\n    if (classModal === \"class start\") {\n      return classStart;\n    }\n\n    if (classModal === \"class end\") {\n      return classEnd;\n    }\n  }; //taking in consideration a global consence that 1px = 1min below I calculate the position on the card\n  //according to the scheduled time\n\n\n  const calculateCardTopPositioning = (props.classTime.hour - props.classInitialAvailableHour) * 60 + props.classTime.minutes;\n  const calculateCardWidthPositioning = props.classDuration.split(\"\").slice(0, 2).join(\"\");\n  let cardPosition = {\n    top: calculateCardTopPositioning + \"px\",\n    height: calculateCardWidthPositioning + \"px\"\n  }; //If I click on the event card I wanna make it stand out the backdrop\n\n  props.zIndexIFClicked === props.currDay ? Object.assign(cardPosition, {\n    zIndex: \"100\"\n  }) : Object.assign(cardPosition, {\n    zIndex: \"97\"\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => props.displayFullEventCard(props.currDay, calculateCardTopPositioning, calculateCardWidthPositioning),\n    className: classes.EventCard,\n    style: cardPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Start: \", padToTwo(props.classTime.hour), \":\", padToTwo(props.classTime.minutes), \" - End:\", \" \", classElapseHandler(props.classDate, props.classTime.hour, props.classTime.minutes, props.classDuration, \"class end\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, props.classTitle, \" @ \", props.classLocation)));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/EventCard/EventCard.js"],"names":["React","classes","ClassCard","props","padToTwo","number","classElapseHandler","classDate","classStartHour","classStartMinute","classDuration","classModal","clDuration","split","slice","join","classHourToMilliseconds","hour","classMinutesInMilliseconds","minutes","classStart","classEnd","Date","getHours","getMinutes","calculateCardTopPositioning","classTime","classInitialAvailableHour","calculateCardWidthPositioning","cardPosition","top","height","zIndexIFClicked","currDay","Object","assign","zIndex","displayFullEventCard","EventCard","classTitle","classLocation"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./EventCard.module.css\";\n\nexport default function ClassCard(props) {\n  //adds extra digit(zeros) for numbers upon rendering\n  const padToTwo = number => (number <= 9 ? `0${number}` : number);\n  //function that calculates the class start or class end\n  const classElapseHandler = (\n    classDate,\n    classStartHour,\n    classStartMinute,\n    classDuration,\n    classModal\n  ) => {\n    const clDuration = classDuration\n      .split(\"\")\n      .slice(0, 2)\n      .join(\"\");\n    const classHourToMilliseconds = hour => 3600000 * hour;\n    const classMinutesInMilliseconds = minutes => 60000 * minutes;\n    const classStart =\n      classDate +\n      classHourToMilliseconds(classStartHour) +\n      classMinutesInMilliseconds(classStartMinute);\n    const classEnd = `${padToTwo(\n      new Date(classStart + classMinutesInMilliseconds(clDuration)).getHours()\n    )}:${padToTwo(\n      new Date(classStart + classMinutesInMilliseconds(clDuration)).getMinutes()\n    )}`;\n\n    if (classModal === \"class start\") {\n      return classStart;\n    }\n    if (classModal === \"class end\") {\n      return classEnd;\n    }\n  };\n\n  //taking in consideration a global consence that 1px = 1min below I calculate the position on the card\n  //according to the scheduled time\n  const calculateCardTopPositioning =\n    (props.classTime.hour - props.classInitialAvailableHour) * 60 +\n    props.classTime.minutes;\n  const calculateCardWidthPositioning = props.classDuration\n    .split(\"\")\n    .slice(0, 2)\n    .join(\"\");\n  let cardPosition = {\n    top: calculateCardTopPositioning + \"px\",\n    height: calculateCardWidthPositioning + \"px\"\n  };\n  //If I click on the event card I wanna make it stand out the backdrop\n  props.zIndexIFClicked === props.currDay\n    ? Object.assign(cardPosition, { zIndex: \"100\" })\n    : Object.assign(cardPosition, { zIndex: \"97\" });\n\n  return (\n    <div\n      onClick={() => props.displayFullEventCard(props.currDay, calculateCardTopPositioning, calculateCardWidthPositioning)}\n      className={classes.EventCard}\n      style={cardPosition}\n    >\n      <div>\n        <div>\n          Start: {padToTwo(props.classTime.hour)}:\n          {padToTwo(props.classTime.minutes)} - End:{\" \"}\n          {classElapseHandler(\n            props.classDate,\n            props.classTime.hour,\n            props.classTime.minutes,\n            props.classDuration,\n            \"class end\"\n          )}\n        </div>\n        <hr />\n        <div>\n          {props.classTitle} @ {props.classLocation}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}