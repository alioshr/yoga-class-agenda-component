{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/AgendaTitles/AgendaTitles.js\";\nimport React from 'react';\nimport classes from \"./AgendaTitles.module.css\";\nexport default function AgendaTitles(props) {\n  let renderMonthDayAndYear = null;\n  let renderMonthAndYear = null;\n  let renderDayOfTheWeek = null;\n  let dayOfTheWeekStyle;\n\n  if (props.titleMode === \"DayOfTheWeek\" && props.currentDay !== '') {\n    dayOfTheWeekStyle = {\n      fontSize: \"1.8rem\",\n      marginBottom: \"10px\"\n    };\n    renderDayOfTheWeek = props.newDatesToVerboseHandler(new Date(props.currentDay).getDay(), \"renderWeekDay\");\n  } else {\n    let renderMonthDayAndYear = \"\".concat(props.newDatesToVerboseHandler(props.currentMonth, \"renderMonth\"), \" \\n    \").concat(new Date(props.currentDay).getDate(), \", \").concat(props.currentYear);\n    let renderMonthAndYear = \"\".concat(props.newDatesToVerboseHandler(props.currentMonth, \"renderMonth\"), \", \").concat(props.currentYear);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.AgendaTitlesDisplay,\n    style: dayOfTheWeekStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, props.appViewMode === \"DayMode\" && props.titleMode === undefined ? renderMonthDayAndYear : null, props.appViewMode !== \"DayMode\" && props.titleMode === undefined ? renderMonthAndYear : null, props.appViewMode === \"DayMode\" && props.titleMode === 'DayOfTheWeek' ? renderDayOfTheWeek : null);\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/AgendaTitles/AgendaTitles.js"],"names":["React","classes","AgendaTitles","props","renderMonthDayAndYear","renderMonthAndYear","renderDayOfTheWeek","dayOfTheWeekStyle","titleMode","currentDay","fontSize","marginBottom","newDatesToVerboseHandler","Date","getDay","currentMonth","getDate","currentYear","AgendaTitlesDisplay","appViewMode","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,MAAIC,qBAAqB,GAAG,IAA5B;AACA,MAAIC,kBAAkB,GAAG,IAAzB;AACA,MAAIC,kBAAkB,GAAG,IAAzB;AACA,MAAIC,iBAAJ;;AACA,MAAGJ,KAAK,CAACK,SAAN,KAAoB,cAApB,IAAsCL,KAAK,CAACM,UAAN,KAAqB,EAA9D,EAAkE;AAC9DF,IAAAA,iBAAiB,GAAG;AAACG,MAAAA,QAAQ,EAAE,QAAX;AAAqBC,MAAAA,YAAY,EAAE;AAAnC,KAApB;AACAL,IAAAA,kBAAkB,GAAGH,KAAK,CAACS,wBAAN,CAA+B,IAAIC,IAAJ,CAASV,KAAK,CAACM,UAAf,EAA2BK,MAA3B,EAA/B,EAAoE,eAApE,CAArB;AACH,GAHD,MAGO;AACH,QAAIV,qBAAqB,aAAMD,KAAK,CAACS,wBAAN,CAA+BT,KAAK,CAACY,YAArC,EAAmD,aAAnD,CAAN,oBAC3B,IAAIF,IAAJ,CAASV,KAAK,CAACM,UAAf,EAA2BO,OAA3B,EAD2B,eACcb,KAAK,CAACc,WADpB,CAAzB;AAEA,QAAIZ,kBAAkB,aAAMF,KAAK,CAACS,wBAAN,CAA+BT,KAAK,CAACY,YAArC,EAAmD,aAAnD,CAAN,eAA4EZ,KAAK,CAACc,WAAlF,CAAtB;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACiB,mBAAxB;AAA6C,IAAA,KAAK,EAAEX,iBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACgB,WAAN,KAAsB,SAAtB,IAAmChB,KAAK,CAACK,SAAN,KAAoBY,SAAvD,GACGhB,qBADH,GAC2B,IAFhC,EAGKD,KAAK,CAACgB,WAAN,KAAsB,SAAtB,IAAmChB,KAAK,CAACK,SAAN,KAAoBY,SAAvD,GACGf,kBADH,GACwB,IAJ7B,EAKKF,KAAK,CAACgB,WAAN,KAAsB,SAAtB,IAAmChB,KAAK,CAACK,SAAN,KAAoB,cAAvD,GACGF,kBADH,GACwB,IAN7B,CADJ;AAUH","sourcesContent":["import React from 'react';\nimport classes from \"./AgendaTitles.module.css\";\n\nexport default function AgendaTitles(props) {\n    let renderMonthDayAndYear = null\n    let renderMonthAndYear = null\n    let renderDayOfTheWeek = null;\n    let dayOfTheWeekStyle;\n    if(props.titleMode === \"DayOfTheWeek\" && props.currentDay !== '') {\n        dayOfTheWeekStyle = {fontSize: \"1.8rem\", marginBottom: \"10px\"};\n        renderDayOfTheWeek = props.newDatesToVerboseHandler(new Date(props.currentDay).getDay(), \"renderWeekDay\");\n    } else {\n        let renderMonthDayAndYear = `${props.newDatesToVerboseHandler(props.currentMonth, \"renderMonth\")} \n    ${new Date(props.currentDay).getDate()}, ${props.currentYear}`;\n        let renderMonthAndYear = `${props.newDatesToVerboseHandler(props.currentMonth, \"renderMonth\")}, ${props.currentYear}`;\n    }\n\n    return (\n        <div className={classes.AgendaTitlesDisplay} style={dayOfTheWeekStyle}>\n            {props.appViewMode === \"DayMode\" && props.titleMode === undefined ?\n                renderMonthDayAndYear : null}\n            {props.appViewMode !== \"DayMode\" && props.titleMode === undefined ?\n                renderMonthAndYear : null}\n            {props.appViewMode === \"DayMode\" && props.titleMode === 'DayOfTheWeek' ?\n                renderDayOfTheWeek : null}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}