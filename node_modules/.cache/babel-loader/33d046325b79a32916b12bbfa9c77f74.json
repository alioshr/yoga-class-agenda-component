{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/CalendarMode/CalendarMode.js\";\nimport React, { Fragment } from 'react';\nimport DateCards from \"../../../Components/DateCards.js/DateCards\";\nimport DayOfTheWeekCard from \"../../../Components/DayOfTheWeekCard/DayOfTheWeekCard\";\nimport classes from './CalendarMode.module.css';\nexport default function CalendarMode(props) {\n  //day card style will be 1rem when in dayCard\n  let dayOfTheWeekCardStyle = {\n    fontSize: \"1rem\"\n  };\n  const smallCalendarOnDayMode = {\n    fontSize: \"1rem\"\n  }; //if statement just for fullCalendar\n\n  if (props.calendarViewType === \"FullCalendar\" && props.appViewMode === \"CalendarMode\") {\n    dayOfTheWeekCardStyle = {\n      color: \"black\",\n      margin: \"1px\",\n      fontSize: \"1.5rem\",\n      height: \"auto\",\n      textAlign: 'right'\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.CalendarWrapper,\n    style: props.calendarOuterStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, [1585450800000, 1585537200000, 1585623600000, 1585710000000, 1585796400000, 1585882800000, 1585969200000].map((day, dayIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.CalendarInnerWrapper,\n    style: {\n      width: \"100%\"\n    },\n    key: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DayOfTheWeekCard, {\n    style: dayOfTheWeekCardStyle,\n    newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n    today: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, props.currentMonth.flat().filter(date => new Date(date).getDay() === new Date(day).getDay()).map((date, innerDateIndex) => /*#__PURE__*/React.createElement(DateCards, {\n    today: date,\n    goToClickedDate: props.goToClickedDate,\n    monthGetter: props.monthGetter,\n    newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n    currentDay: props.currentDay,\n    key: date,\n    calendarViewType: props.calendarViewType,\n    cardDayIndex: dayIndex,\n    cardDatesInnerIndex: innerDateIndex,\n    appViewMode: props.appViewMode,\n    smallCalendarOnDayMode: smallCalendarOnDayMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/CalendarMode/CalendarMode.js"],"names":["React","Fragment","DateCards","DayOfTheWeekCard","classes","CalendarMode","props","dayOfTheWeekCardStyle","fontSize","smallCalendarOnDayMode","calendarViewType","appViewMode","color","margin","height","textAlign","CalendarWrapper","calendarOuterStyle","map","day","dayIndex","CalendarInnerWrapper","width","newDatesToVerboseHandler","currentMonth","flat","filter","date","Date","getDay","innerDateIndex","goToClickedDate","monthGetter","currentDay"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,OAAOC,gBAAP,MAA6B,uDAA7B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC;AACA,MAAIC,qBAAqB,GAAG;AAACC,IAAAA,QAAQ,EAAE;AAAX,GAA5B;AACA,QAAMC,sBAAsB,GAAG;AAACD,IAAAA,QAAQ,EAAE;AAAX,GAA/B,CAHwC,CAIxC;;AACA,MAAGF,KAAK,CAACI,gBAAN,KAA2B,cAA3B,IAA6CJ,KAAK,CAACK,WAAN,KAAsB,cAAtE,EAAsF;AAClFJ,IAAAA,qBAAqB,GAAG;AAACK,MAAAA,KAAK,EAAE,OAAR;AAAiBC,MAAAA,MAAM,EAAE,KAAzB;AAAgCL,MAAAA,QAAQ,EAAE,QAA1C;AAAoDM,MAAAA,MAAM,EAAE,MAA5D;AAAoEC,MAAAA,SAAS,EAAE;AAA/E,KAAxB;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACY,eAAxB;AAAyC,IAAA,KAAK,EAAEV,KAAK,CAACW,kBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC,aAAD,EAAgB,aAAhB,EAA+B,aAA/B,EAA8C,aAA9C,EAA6D,aAA7D,EAA4E,aAA5E,EAA2F,aAA3F,EAA0GC,GAA1G,CAA8G,CAACC,GAAD,EAAMC,QAAN,kBAC3G;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACiB,oBAAxB;AACI,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KADX;AAEK,IAAA,GAAG,EAAEH,GAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEZ,qBADX;AAEI,IAAA,wBAAwB,EAAED,KAAK,CAACiB,wBAFpC;AAGI,IAAA,KAAK,EAAEJ,GAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAOI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,KAAK,CAACkB,YAAN,CACIC,IADJ,GAEIC,MAFJ,CAEWC,IAAI,IAAI,IAAIC,IAAJ,CAASD,IAAT,EAAeE,MAAf,OAA4B,IAAID,IAAJ,CAAST,GAAT,EAAcU,MAAd,EAF/C,EAGIX,GAHJ,CAGQ,CAACS,IAAD,EAAOG,cAAP,kBACD,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,IAAlB;AACW,IAAA,eAAe,EAAErB,KAAK,CAACyB,eADlC;AAEW,IAAA,WAAW,EAAEzB,KAAK,CAAC0B,WAF9B;AAGW,IAAA,wBAAwB,EAAE1B,KAAK,CAACiB,wBAH3C;AAIW,IAAA,UAAU,EAAEjB,KAAK,CAAC2B,UAJ7B;AAKW,IAAA,GAAG,EAAEN,IALhB;AAMW,IAAA,gBAAgB,EAAErB,KAAK,CAACI,gBANnC;AAOW,IAAA,YAAY,EAAEU,QAPzB;AAQW,IAAA,mBAAmB,EAAEU,cARhC;AASW,IAAA,WAAW,EAAExB,KAAK,CAACK,WAT9B;AAUW,IAAA,sBAAsB,EAAEF,sBAVnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJP,CADL,CAPJ,CADH,CADL,CADJ;AAgCH","sourcesContent":["import React, {Fragment} from 'react'\nimport DateCards from \"../../../Components/DateCards.js/DateCards\";\nimport DayOfTheWeekCard from \"../../../Components/DayOfTheWeekCard/DayOfTheWeekCard\"\nimport classes from './CalendarMode.module.css'\n\nexport default function CalendarMode(props) {\n    //day card style will be 1rem when in dayCard\n    let dayOfTheWeekCardStyle = {fontSize: \"1rem\"}\n    const smallCalendarOnDayMode = {fontSize: \"1rem\"};\n    //if statement just for fullCalendar\n    if(props.calendarViewType === \"FullCalendar\" && props.appViewMode === \"CalendarMode\") {\n        dayOfTheWeekCardStyle = {color: \"black\", margin: \"1px\", fontSize: \"1.5rem\", height: \"auto\", textAlign: 'right'};\n    }\n    return (\n        <div className={classes.CalendarWrapper} style={props.calendarOuterStyle}>\n            {[1585450800000, 1585537200000, 1585623600000, 1585710000000, 1585796400000, 1585882800000, 1585969200000].map((day, dayIndex) =>\n                <div className={classes.CalendarInnerWrapper}\n                    style={{width: \"100%\"}}\n                     key={day}>\n                    <DayOfTheWeekCard\n                        style={dayOfTheWeekCardStyle}\n                        newDatesToVerboseHandler={props.newDatesToVerboseHandler}\n                        today={day}/>\n                    <Fragment>\n                        {props.currentMonth\n                            .flat()\n                            .filter(date => new Date(date).getDay() === new Date(day).getDay())\n                            .map((date, innerDateIndex) =>\n                                <DateCards today={date}\n                                           goToClickedDate={props.goToClickedDate}\n                                           monthGetter={props.monthGetter}\n                                           newDatesToVerboseHandler={props.newDatesToVerboseHandler}\n                                           currentDay={props.currentDay}\n                                           key={date}\n                                           calendarViewType={props.calendarViewType}\n                                           cardDayIndex={dayIndex}\n                                           cardDatesInnerIndex={innerDateIndex}\n                                           appViewMode={props.appViewMode}\n                                           smallCalendarOnDayMode={smallCalendarOnDayMode}/>\n                            )}\n                    </Fragment>\n                </div>\n            )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}