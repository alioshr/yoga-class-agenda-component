{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/TimeTables/TimeTables.js\";\nimport React, { useEffect, useState } from \"react\";\nimport classes from \"./TimeTables.module.css\";\nexport default function EmptyTables(props) {\n  //ensure that there only content in the div for the column that displays the hours\n  let renderSingleHour;\n\n  if (props.style) {\n    let style = {\n      boxShadow: \"none\",\n      borderRadius: \"0\"\n    };\n    Object.assign(props.style, style);\n    renderSingleHour = true;\n  } //1 px per minute\n\n\n  const padToTwo = number => number <= 9 ? \"0\".concat(number) : number;\n\n  const calculateCurrentTime = (new Date().getHours() - props.classInitialAvailableHour) * 60 + new Date().getMinutes();\n  const currentTimeTopPositioning = {\n    top: calculateCurrentTime + \"px\"\n  };\n  let currentTimeLineWidth = {\n    width: props.dayCardContainerWidth * 7 + 5 + \"px\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: props.backdropDisplayHandler,\n    className: classes.EmptyTableWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, props.style !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.CurrentTime,\n    style: currentTimeTopPositioning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"\".concat(padToTwo(currentTime.getHours()), \":\").concat(padToTwo(currentTime.getMinutes())), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.CurrentTimeLine,\n    style: currentTimeLineWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  })) : null, props.tableOfAvailableHours.map(singleHour => {\n    //ensure that there only content in the div for the\n    // column that displays the hours\n    let displaySingleHour;\n\n    if (props.style !== undefined) {\n      displaySingleHour = \"\".concat(singleHour, \":00\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: singleHour,\n      className: classes.EmptyTable,\n      style: props.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, displaySingleHour);\n  }));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/TimeTables/TimeTables.js"],"names":["React","useEffect","useState","classes","EmptyTables","props","renderSingleHour","style","boxShadow","borderRadius","Object","assign","padToTwo","number","calculateCurrentTime","Date","getHours","classInitialAvailableHour","getMinutes","currentTimeTopPositioning","top","currentTimeLineWidth","width","dayCardContainerWidth","backdropDisplayHandler","EmptyTableWrapper","undefined","CurrentTime","currentTime","CurrentTimeLine","tableOfAvailableHours","map","singleHour","displaySingleHour","EmptyTable"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAEzC;AACA,MAAIC,gBAAJ;;AACA,MAAID,KAAK,CAACE,KAAV,EAAiB;AACf,QAAIA,KAAK,GAAG;AACVC,MAAAA,SAAS,EAAE,MADD;AAEVC,MAAAA,YAAY,EAAE;AAFJ,KAAZ;AAIAC,IAAAA,MAAM,CAACC,MAAP,CAAcN,KAAK,CAACE,KAApB,EAA2BA,KAA3B;AACAD,IAAAA,gBAAgB,GAAG,IAAnB;AACD,GAXwC,CAY3C;;;AACE,QAAMM,QAAQ,GAAGC,MAAM,IAAKA,MAAM,IAAI,CAAV,cAAkBA,MAAlB,IAA6BA,MAAzD;;AACA,QAAMC,oBAAoB,GAAG,CAAC,IAAIC,IAAJ,GAAWC,QAAX,KAAwBX,KAAK,CAACY,yBAA/B,IAA4D,EAA5D,GAAiE,IAAIF,IAAJ,GAAWG,UAAX,EAA9F;AACA,QAAMC,yBAAyB,GAAG;AAACC,IAAAA,GAAG,EAAEN,oBAAoB,GAAG;AAA7B,GAAlC;AACA,MAAIO,oBAAoB,GAAG;AAACC,IAAAA,KAAK,EAAEjB,KAAK,CAACkB,qBAAN,GAA8B,CAA9B,GAAkC,CAAlC,GAAsC;AAA9C,GAA3B;AACA,sBACE;AAAK,IAAA,OAAO,EAAElB,KAAK,CAACmB,sBAApB;AAA4C,IAAA,SAAS,EAAErB,OAAO,CAACsB,iBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,KAAK,CAACE,KAAN,KAAgBmB,SAAhB,gBACG;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAACwB,WAAxB;AAAqC,IAAA,KAAK,EAAER,yBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACMP,QAAQ,CAACgB,WAAW,CAACZ,QAAZ,EAAD,CADd,cAC0CJ,QAAQ,CAACgB,WAAW,CAACV,UAAZ,EAAD,CADlD,gBAEE;AAAK,IAAA,SAAS,EAAEf,OAAO,CAAC0B,eAAxB;AAAyC,IAAA,KAAK,EAAER,oBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADH,GAKD,IANF,EAOGhB,KAAK,CAACyB,qBAAN,CAA4BC,GAA5B,CAAgCC,UAAU,IAAI;AAC7C;AACA;AACA,QAAIC,iBAAJ;;AACA,QAAI5B,KAAK,CAACE,KAAN,KAAgBmB,SAApB,EAA+B;AAC7BO,MAAAA,iBAAiB,aAAMD,UAAN,QAAjB;AACD;;AACD,wBACE;AACE,MAAA,GAAG,EAAEA,UADP;AAEE,MAAA,SAAS,EAAE7B,OAAO,CAAC+B,UAFrB;AAGE,MAAA,KAAK,EAAE7B,KAAK,CAACE,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG0B,iBALH,CADF;AASD,GAhBA,CAPH,CADF;AA2BD","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport classes from \"./TimeTables.module.css\";\n\nexport default function EmptyTables(props) {\n  \n  //ensure that there only content in the div for the column that displays the hours\n  let renderSingleHour;\n  if (props.style) {\n    let style = {\n      boxShadow: \"none\",\n      borderRadius: \"0\"\n    };\n    Object.assign(props.style, style);\n    renderSingleHour = true;\n  }\n//1 px per minute\n  const padToTwo = number => (number <= 9 ? `0${number}` : number);\n  const calculateCurrentTime = (new Date().getHours() - props.classInitialAvailableHour) * 60 + new Date().getMinutes();\n  const currentTimeTopPositioning = {top: calculateCurrentTime + \"px\"};\n  let currentTimeLineWidth = {width: props.dayCardContainerWidth * 7 + 5 + \"px\"};\n  return (\n    <div onClick={props.backdropDisplayHandler} className={classes.EmptyTableWrapper}>\n      {props.style !== undefined ?\n          <div className={classes.CurrentTime} style={currentTimeTopPositioning}>\n            {`${padToTwo(currentTime.getHours())}:${padToTwo(currentTime.getMinutes())}`}\n            <div className={classes.CurrentTimeLine} style={currentTimeLineWidth}/>\n          </div> :\n      null}\n      {props.tableOfAvailableHours.map(singleHour => {\n        //ensure that there only content in the div for the\n        // column that displays the hours\n        let displaySingleHour;\n        if (props.style !== undefined) {\n          displaySingleHour = `${singleHour}:00`;\n        }\n        return (\n          <div\n            key={singleHour}\n            className={classes.EmptyTable}\n            style={props.style}\n          >\n            {displaySingleHour}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}