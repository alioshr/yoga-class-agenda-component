{"ast":null,"code":"import _slicedToArray from \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/DayMode/DayMode.js\";\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport TimeTables from \"../../../Components/TimeTables/TimeTables\";\nimport EventCard from \"../../../Components/EventCard/EventCard\";\nimport CalendarMode from \"../CalendarMode/CalendarMode\";\nimport AgendaTitles from \"../../AgendaTitles/AgendaTitles\";\nimport LeftArrow from \"../../NavigationButtons/LeftArrow/LeftArrow\";\nimport TakeMeHome from \"../../NavigationButtons/TakeMeHome/TakeMeHome\";\nimport RightArrow from \"../../NavigationButtons/RightArrow/RightArrow\";\nimport classes from './DayMode.module.css';\nexport default function DayMode(props) {\n  const ref = useRef();\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        dimensions = _useState2[0],\n        setDimensions = _useState2[1];\n  /*const [mouseX, setMouseX] = useState(0);\n  const [mouseY, setMouseY] = useState(0);*/\n\n\n  const updateDimensions = () => {\n    setDimensions(ref.current.getBoundingClientRect());\n  };\n\n  useLayoutEffect(() => {\n    updateDimensions();\n    window.addEventListener(\"resize\", updateDimensions);\n    return () => {\n      window.removeEventListener(\"resize\", updateDimensions);\n    };\n  }, []);\n  /*const mouseMoveHandler = event => {\n      setMouseX(event.screenX);\n      setMouseY(event.screenY);\n  }*/\n\n  /* console.log(\"X: \", Math.round((mouseX - dimensions.x)/5)*5);\n   console.log(\"Y: \", mouseY - dimensions.y - 79); // why there is an extra 79px here?*/\n\n  const today = props.currentDay;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.DayModeWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.LeftTabWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AgendaTitles, {\n    newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n    monthGetter: props.monthGetter,\n    currentMonth: props.currentMonth,\n    currentYear: props.currentYear,\n    currentDay: props.currentDay,\n    appViewMode: props.appViewMode,\n    calendarViewType: props.calendarViewType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.LeftTabInnerContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TimeTables, {\n    currAgendaData: props.currentDay,\n    appViewMode: props.appViewMode,\n    dayCardContainerWidth: dimensions,\n    style: {\n      color: \"black\",\n      border: \"none\",\n      boxShadow: \"none\",\n      borderRadius: \"0\"\n    },\n    tableOfAvailableHours: props.arrayOfDailyHoursTable,\n    agendaInitialAvailableHour: props.agendaInitialAvailableHour,\n    agendaLastAvailableHour: props.agendaLastAvailableHour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.LeftTabEventsArea\n    /*onMouseMove={(event) => mouseMoveHandler(event)}*/\n    ,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TimeTables, {\n    tableOfAvailableHours: props.arrayOfDailyHoursTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }), props.dataToBeRendered.filter(cl => cl.classDate === today).map(cl => /*#__PURE__*/React.createElement(EventCard, {\n    currDay: today,\n    classDate: cl.classDate,\n    classTitle: cl.classTitle,\n    classLocation: cl.location,\n    classDuration: cl.duration,\n    classTime: cl.classTime,\n    classInitialAvailableHour: props.agendaInitialAvailableHour,\n    key: cl.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.RightTabWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.RightTabInnerWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.RightTabControlPanel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(LeftArrow, {\n    appNavigationHandler: props.appNavigationHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TakeMeHome, {\n    takeMeToToday: props.takeMeToToday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(RightArrow, {\n    appNavigationHandler: props.appNavigationHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(CalendarMode, {\n    calendarOuterStyle: {\n      marginTop: 0,\n      height: \"auto\",\n      width: \"auto\"\n    },\n    calendarInnerStyle: {\n      maxWidth: \"40px\"\n    },\n    currentDay: props.currentDay,\n    appViewMode: \"CalendarMode\",\n    calendarViewType: \"SimpleCalendar\",\n    monthGetter: props.monthGetter,\n    currentMonth: props.currentMonth,\n    currentWeek: props.currentWeek,\n    newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n    goToClickedDate: props.goToClickedDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/DayMode/DayMode.js"],"names":["React","useLayoutEffect","useRef","useState","TimeTables","EventCard","CalendarMode","AgendaTitles","LeftArrow","TakeMeHome","RightArrow","classes","DayMode","props","ref","dimensions","setDimensions","updateDimensions","current","getBoundingClientRect","window","addEventListener","removeEventListener","today","currentDay","DayModeWrapper","LeftTabWrapper","newDatesToVerboseHandler","monthGetter","currentMonth","currentYear","appViewMode","calendarViewType","LeftTabInnerContent","color","border","boxShadow","borderRadius","arrayOfDailyHoursTable","agendaInitialAvailableHour","agendaLastAvailableHour","LeftTabEventsArea","dataToBeRendered","filter","cl","classDate","map","classTitle","location","duration","classTime","id","RightTabWrapper","RightTabInnerWrapper","RightTabControlPanel","appNavigationHandler","takeMeToToday","marginTop","height","width","maxWidth","currentWeek","goToClickedDate"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,eAAf,EAAgCC,MAAhC,EAAwCC,QAAxC,QAAuD,OAAvD;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACnC,QAAMC,GAAG,GAAGZ,MAAM,EAAlB;;AADmC,oBAECC,QAAQ,CAAC,CAAD,CAFT;AAAA;AAAA,QAE5BY,UAF4B;AAAA,QAEhBC,aAFgB;AAGnC;;;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BD,IAAAA,aAAa,CAACF,GAAG,CAACI,OAAJ,CAAYC,qBAAZ,EAAD,CAAb;AACH,GAFD;;AAGAlB,EAAAA,eAAe,CAAC,MAAM;AAClBgB,IAAAA,gBAAgB;AAChBG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCJ,gBAAlC;AACA,WAAO,MAAM;AACTG,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCL,gBAArC;AACH,KAFD;AAGH,GANc,EAMZ,EANY,CAAf;AAOA;;;;;AAIA;;;AAEA,QAAMM,KAAK,GAAGV,KAAK,CAACW,UAApB;AACA,sBACQ;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACc,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEd,OAAO,CAACe,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,wBAAwB,EAAEb,KAAK,CAACc,wBAA9C;AACc,IAAA,WAAW,EAAEd,KAAK,CAACe,WADjC;AAEc,IAAA,YAAY,EAAEf,KAAK,CAACgB,YAFlC;AAGc,IAAA,WAAW,EAAEhB,KAAK,CAACiB,WAHjC;AAIc,IAAA,UAAU,EAAEjB,KAAK,CAACW,UAJhC;AAKc,IAAA,WAAW,EAAEX,KAAK,CAACkB,WALjC;AAMc,IAAA,gBAAgB,EAAElB,KAAK,CAACmB,gBANtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI;AAAK,IAAA,SAAS,EAAErB,OAAO,CAACsB,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,UAAD;AAAY,IAAA,cAAc,EAAEpB,KAAK,CAACW,UAAlC;AACY,IAAA,WAAW,EAAEX,KAAK,CAACkB,WAD/B;AAEY,IAAA,qBAAqB,EAAEhB,UAFnC;AAGY,IAAA,KAAK,EAAE;AAAEmB,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE,MAA1B;AAAkCC,MAAAA,SAAS,EAAE,MAA7C;AAAsDC,MAAAA,YAAY,EAAE;AAApE,KAHnB;AAIY,IAAA,qBAAqB,EAAExB,KAAK,CAACyB,sBAJzC;AAKY,IAAA,0BAA0B,EAAEzB,KAAK,CAAC0B,0BAL9C;AAMY,IAAA,uBAAuB,EAAE1B,KAAK,CAAC2B,uBAN3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,eASI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B;AACnB;AADL;AAEK,IAAA,GAAG,EAAE3B,GAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,UAAD;AAAY,IAAA,qBAAqB,EAAED,KAAK,CAACyB,sBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAIKzB,KAAK,CAAC6B,gBAAN,CAAuBC,MAAvB,CAA8BC,EAAE,IAAIA,EAAE,CAACC,SAAH,KAAiBtB,KAArD,EAA4DuB,GAA5D,CAAgEF,EAAE,iBAC/D,oBAAC,SAAD;AACI,IAAA,OAAO,EAAErB,KADb;AAEI,IAAA,SAAS,EAAEqB,EAAE,CAACC,SAFlB;AAGI,IAAA,UAAU,EAAED,EAAE,CAACG,UAHnB;AAII,IAAA,aAAa,EAAEH,EAAE,CAACI,QAJtB;AAKI,IAAA,aAAa,EAAEJ,EAAE,CAACK,QALtB;AAMI,IAAA,SAAS,EAAEL,EAAE,CAACM,SANlB;AAOI,IAAA,yBAAyB,EAAErC,KAAK,CAAC0B,0BAPrC;AAQI,IAAA,GAAG,EAAEK,EAAE,CAACO,EARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAJL,CATJ,CARJ,CADJ,eAqCI;AAAK,IAAA,SAAS,EAAExC,OAAO,CAACyC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEzC,OAAO,CAAC0C,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE1C,OAAO,CAAC2C,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,oBAAoB,EAAEzC,KAAK,CAAC0C,oBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,aAAa,EAAE1C,KAAK,CAAC2C,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,UAAD;AAAY,IAAA,oBAAoB,EAAE3C,KAAK,CAAC0C,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,eAMI,oBAAC,YAAD;AACI,IAAA,kBAAkB,EAAE;AAACE,MAAAA,SAAS,EAAE,CAAZ;AAAeC,MAAAA,MAAM,EAAE,MAAvB;AAA+BC,MAAAA,KAAK,EAAE;AAAtC,KADxB;AAEI,IAAA,kBAAkB,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAFxB;AAGI,IAAA,UAAU,EAAE/C,KAAK,CAACW,UAHtB;AAII,IAAA,WAAW,EAAE,cAJjB;AAKI,IAAA,gBAAgB,EAAE,gBALtB;AAMI,IAAA,WAAW,EAAEX,KAAK,CAACe,WANvB;AAOI,IAAA,YAAY,EAAEf,KAAK,CAACgB,YAPxB;AAQI,IAAA,WAAW,EAAEhB,KAAK,CAACgD,WARvB;AASI,IAAA,wBAAwB,EAAEhD,KAAK,CAACc,wBATpC;AAUI,IAAA,eAAe,EAAEd,KAAK,CAACiD,eAV3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,CArCJ,CADR;AA6DH","sourcesContent":["import React, {useLayoutEffect, useRef, useState} from 'react'\nimport TimeTables from \"../../../Components/TimeTables/TimeTables\";\nimport EventCard from \"../../../Components/EventCard/EventCard\";\nimport CalendarMode from \"../CalendarMode/CalendarMode\";\nimport AgendaTitles from \"../../AgendaTitles/AgendaTitles\";\nimport LeftArrow from \"../../NavigationButtons/LeftArrow/LeftArrow\";\nimport TakeMeHome from \"../../NavigationButtons/TakeMeHome/TakeMeHome\";\nimport RightArrow from \"../../NavigationButtons/RightArrow/RightArrow\";\nimport classes from './DayMode.module.css'\n\nexport default function DayMode(props) {\n    const ref = useRef();\n    const [dimensions, setDimensions] = useState(0);\n    /*const [mouseX, setMouseX] = useState(0);\n    const [mouseY, setMouseY] = useState(0);*/\n    const updateDimensions = () => {\n        setDimensions(ref.current.getBoundingClientRect());\n    };\n    useLayoutEffect(() => {\n        updateDimensions();\n        window.addEventListener(\"resize\", updateDimensions);\n        return () => {\n            window.removeEventListener(\"resize\", updateDimensions)\n        }\n    }, []);\n    /*const mouseMoveHandler = event => {\n        setMouseX(event.screenX);\n        setMouseY(event.screenY);\n    }*/\n    /* console.log(\"X: \", Math.round((mouseX - dimensions.x)/5)*5);\n     console.log(\"Y: \", mouseY - dimensions.y - 79); // why there is an extra 79px here?*/\n    const today = props.currentDay;\n    return (\n            <div className={classes.DayModeWrapper}>\n                <div className={classes.LeftTabWrapper}>\n                    <AgendaTitles newDatesToVerboseHandler={props.newDatesToVerboseHandler}\n                                  monthGetter={props.monthGetter}\n                                  currentMonth={props.currentMonth}\n                                  currentYear={props.currentYear}\n                                  currentDay={props.currentDay}\n                                  appViewMode={props.appViewMode}\n                                  calendarViewType={props.calendarViewType}/>\n                    <div className={classes.LeftTabInnerContent}>\n                            <TimeTables currAgendaData={props.currentDay}\n                                        appViewMode={props.appViewMode}\n                                        dayCardContainerWidth={dimensions}\n                                        style={{ color: \"black\", border: \"none\", boxShadow: \"none\",  borderRadius: \"0\" }}\n                                        tableOfAvailableHours={props.arrayOfDailyHoursTable}\n                                        agendaInitialAvailableHour={props.agendaInitialAvailableHour}\n                                        agendaLastAvailableHour={props.agendaLastAvailableHour}\n                            />\n                        <div className={classes.LeftTabEventsArea}\n                             /*onMouseMove={(event) => mouseMoveHandler(event)}*/\n                             ref={ref}>\n                            <TimeTables tableOfAvailableHours={props.arrayOfDailyHoursTable}/>\n                            {props.dataToBeRendered.filter(cl => cl.classDate === today).map(cl =>\n                                <EventCard\n                                    currDay={today}\n                                    classDate={cl.classDate}\n                                    classTitle={cl.classTitle}\n                                    classLocation={cl.location}\n                                    classDuration={cl.duration}\n                                    classTime={cl.classTime}\n                                    classInitialAvailableHour={props.agendaInitialAvailableHour}\n                                    key={cl.id}\n                                />\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.RightTabWrapper}>\n                    <div className={classes.RightTabInnerWrapper}>\n                        <div className={classes.RightTabControlPanel}>\n                            <LeftArrow appNavigationHandler={props.appNavigationHandler}/>\n                            <TakeMeHome takeMeToToday={props.takeMeToToday}/>\n                            <RightArrow appNavigationHandler={props.appNavigationHandler}/>\n                        </div>\n                        <CalendarMode\n                            calendarOuterStyle={{marginTop: 0, height: \"auto\", width: \"auto\"}}\n                            calendarInnerStyle={{maxWidth: \"40px\"}}\n                            currentDay={props.currentDay}\n                            appViewMode={\"CalendarMode\"}\n                            calendarViewType={\"SimpleCalendar\"}\n                            monthGetter={props.monthGetter}\n                            currentMonth={props.currentMonth}\n                            currentWeek={props.currentWeek}\n                            newDatesToVerboseHandler={props.newDatesToVerboseHandler}\n                            goToClickedDate={props.goToClickedDate}/>\n                    </div>\n                </div>\n            </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}