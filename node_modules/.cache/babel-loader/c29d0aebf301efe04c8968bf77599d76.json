{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/Layout/Layout.js\";\nimport React from \"react\";\nimport classes from \"./Layout.module.css\";\nimport ViewMode from \"../ViewMode/ViewMode\";\nexport default class Layout extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.updateDimensions = () => {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }, () => {\n        this.props.callbackContainerDimensions(this.container);\n      });\n    };\n\n    this.componentDidMount = () => {\n      //should delete this later and use the individual width of each card on WeekMode as I did with the DayMode\n      this.updateDimensions();\n      window.addEventListener(\"resize\", this.updateDimensions);\n    };\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    if (this.container !== null && this.container !== undefined) {\n      console.log(\"height @ Layout - \", this.container.offsetHeight);\n    }\n\n    let calendarViewType;\n\n    switch (this.props.calendarViewType) {\n      case \"FullCalendar\":\n        calendarViewType = /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.OutStructure,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.FirstRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(ViewMode, {\n          weekMode: this.props.weekMode,\n          monthMode: this.props.monthMode,\n          dayMode: this.props.dayMode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.SecondRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.MonthDisplay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }\n        }, this.props.appViewMode === \"DayMode\" ? \"\".concat(this.props.newDatesToVerboseHandler(this.props.currentMonth, \"renderMonth\"), \"\\n                                     \").concat(new Date(this.props.currentDay).getDate(), \", \").concat(this.props.currentYear) : \" \".concat(this.props.newDatesToVerboseHandler(this.props.currentMonth, \"renderMonth\"), \", \").concat(this.props.currentYear)), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.ControlsDisplay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.LeftArrow,\n          onClick: () => this.props.appNavigationHandler(\"decrement\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.props.takeMeToToday,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }\n        }, \"Today\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.RightArrow,\n          onClick: () => this.props.appNavigationHandler(\"increment\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }\n        }))), this.props.appViewMode === \"DayMode\" ? /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: \"1.8rem\",\n            marginBottom: \"10px\"\n          },\n          className: classes.MonthDisplay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }\n        }, this.props.newDatesToVerboseHandler(new Date(this.props.currentDay).getDay(), \"renderWeekDay\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.AgendaInnerStructure,\n          ref: el => this.render(this.container = el),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }\n        }, this.props.children));\n        break;\n\n      case \"SimpleCalendar\":\n        calendarViewType = /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.OutStructure,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.SecondRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.LeftArrow,\n          onClick: () => this.props.appNavigationHandler(\"decrement\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.MonthDisplay,\n          style: {\n            textAlign: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }\n        }, this.props.newDatesToVerboseHandler(this.props.currentMonth, \"renderMonth\"), \", \", this.props.currentYear), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.RightArrow,\n          onClick: () => this.props.appNavigationHandler(\"increment\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.AgendaInnerStructure,\n          ref: el => this.render(this.container = el),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }\n        }, this.props.children));\n    }\n\n    return calendarViewType;\n  }\n\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/Layout/Layout.js"],"names":["React","classes","ViewMode","Layout","Component","state","width","height","updateDimensions","setState","window","innerWidth","innerHeight","props","callbackContainerDimensions","container","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","undefined","console","log","offsetHeight","calendarViewType","OutStructure","FirstRow","weekMode","monthMode","dayMode","SecondRow","MonthDisplay","appViewMode","newDatesToVerboseHandler","currentMonth","Date","currentDay","getDate","currentYear","ControlsDisplay","LeftArrow","appNavigationHandler","takeMeToToday","RightArrow","fontSize","marginBottom","getDay","AgendaInnerStructure","el","children","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./Layout.module.css\";\nimport ViewMode from \"../ViewMode/ViewMode\";\n\nexport default class Layout extends React.Component {\n    state = { width: 0, height: 0 };\n    updateDimensions = () => {\n        this.setState(\n            { width: window.innerWidth, height: window.innerHeight },\n            () => {\n                this.props.callbackContainerDimensions(this.container);\n            }\n        );\n    };\n\n    componentDidMount = () => {\n        //should delete this later and use the individual width of each card on WeekMode as I did with the DayMode\n        this.updateDimensions();\n        window.addEventListener(\"resize\", this.updateDimensions);\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n    render() {\n        if(this.container !== null && this.container !== undefined) {\n            console.log(\"height @ Layout - \",this.container.offsetHeight)\n\n        }\n        let calendarViewType;\n        switch (this.props.calendarViewType) {\n            case (\"FullCalendar\") :\n                calendarViewType = (\n                    <div className={classes.OutStructure}>\n                        {/*here is display the top title w/ the curr month*/}\n                        <div className={classes.FirstRow}>\n                            <ViewMode\n                                weekMode={this.props.weekMode}\n                                monthMode={this.props.monthMode}\n                                dayMode={this.props.dayMode}/>\n                        </div>\n                        <div className={classes.SecondRow}>\n                            <div className={classes.MonthDisplay}>\n                                {this.props.appViewMode === \"DayMode\" ?\n                                    `${this.props.newDatesToVerboseHandler(this.props.currentMonth, \"renderMonth\")}\n                                     ${new Date(this.props.currentDay).getDate()}, ${this.props.currentYear}`:\n                                    ` ${this.props.newDatesToVerboseHandler(this.props.currentMonth, \"renderMonth\")}, ${this.props.currentYear}`\n                                }\n                            </div>\n                            <div className={classes.ControlsDisplay}>\n                                <div\n                                    className={classes.LeftArrow}\n                                    onClick={() => this.props.appNavigationHandler(\"decrement\")}\n                                />\n                                <button onClick={this.props.takeMeToToday}>Today</button>\n                                <div\n                                    className={classes.RightArrow}\n                                    onClick={() => this.props.appNavigationHandler(\"increment\")}\n                                />\n                            </div>\n                        </div>\n                        {this.props.appViewMode === \"DayMode\" ?\n                            <div style={{fontSize: \"1.8rem\", marginBottom: \"10px\"}} className={classes.MonthDisplay}>\n                                {this.props.newDatesToVerboseHandler(new Date(this.props.currentDay).getDay(), \"renderWeekDay\")}\n                            </div> :\n                            null}\n                        <div\n                            className={classes.AgendaInnerStructure}\n                            ref={el => this.render((this.container = el))}\n                        >\n                            {this.props.children}\n                        </div>\n                    </div>\n                );\n                break;\n            case(\"SimpleCalendar\") :\n                calendarViewType = (\n                    <div className={classes.OutStructure}>\n                        <div className={classes.SecondRow}>\n\n                                <div\n                                    className={classes.LeftArrow}\n                                    onClick={() => this.props.appNavigationHandler(\"decrement\")}\n                                />\n                                <div className={classes.MonthDisplay} style={{textAlign: \"center\"}}>\n                                    {this.props.newDatesToVerboseHandler(this.props.currentMonth, \"renderMonth\")}, {this.props.currentYear}\n                                </div>\n                                <div\n                                    className={classes.RightArrow}\n                                    onClick={() => this.props.appNavigationHandler(\"increment\")}\n                                />\n\n                        </div>\n                        <div\n                            className={classes.AgendaInnerStructure}\n                            ref={el => this.render((this.container = el))}\n                        >\n                            {this.props.children}\n                        </div>\n                    </div>\n                );\n        }\n\n\n        return calendarViewType\n    }\n}\n"]},"metadata":{},"sourceType":"module"}