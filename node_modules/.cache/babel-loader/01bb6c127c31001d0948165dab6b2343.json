{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/EventDialogBox/EventDialogBox.js\";\nimport React from \"react\";\nimport \"./EventDialogBox.css\";\nimport Transition from \"react-transition-group/CSSTransition\";\nexport default function EventDialogBox(props) {\n  //taking in consideration a global consensus that 1px = 1min\n  //I initialize variables the total height of the event day elapse duration\n  const totalTableHeight = (props.classLastAvailableHour - props.classInitialAvailableHour) * 60; //I keep subtracting 90 px below when working w/ width\n  //as I consider the width of the <SideTab/> to 45px each\n\n  const totalContainerWidth = props.dimsFromLayoutWidth; //percentage calculator for logical purposes\n\n  const percentCalc = (percentage, totalValue) => percentage * totalValue / 100; //init the var responsible for the styling\n\n\n  let eventDialogBoxPosition = {}; //positioning logic for the dialog box below\n\n  eventDialogBoxPosition.width = percentCalc(61, totalContainerWidth) - 90 + \"px\";\n  eventDialogBoxPosition.height = percentCalc(50, totalTableHeight) + \"px\"; //if day is before Wednesday\n\n  if (new Date(props.today).getDay() > 3) {\n    delete eventDialogBoxPosition.left;\n    eventDialogBoxPosition.right = 0 + \"px\";\n  } //If day is equal or higher than Wednesday\n\n\n  if (new Date(props.today).getDay() <= 3) {\n    delete eventDialogBoxPosition.right;\n    eventDialogBoxPosition.left = 0 + \"px\";\n  } //If the day card is displayed below half of the calendar\n\n\n  if (props.calculateCardTopPositioning > percentCalc(50, totalTableHeight)) {\n    delete eventDialogBoxPosition.top;\n    eventDialogBoxPosition.bottom = totalTableHeight - (props.calculateCardTopPositioning - props.calculateCardHeigthPositioning) + 5 + \"px\";\n  } //If the day card is displayed above half of the calendar\n\n\n  if (props.calculateCardTopPositioning < percentCalc(50, totalTableHeight)) {\n    delete eventDialogBoxPosition.bottom;\n    eventDialogBoxPosition.top = props.calculateCardTopPositioning + parseInt(props.calculateCardHeigthPositioning, 10) + 5 + \"px\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: props.key,\n    style: Object.assign(props.animation, eventDialogBoxPosition),\n    className: \"DialogBoxContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/EventDialogBox/EventDialogBox.js"],"names":["React","Transition","EventDialogBox","props","totalTableHeight","classLastAvailableHour","classInitialAvailableHour","totalContainerWidth","dimsFromLayoutWidth","percentCalc","percentage","totalValue","eventDialogBoxPosition","width","height","Date","today","getDay","left","right","calculateCardTopPositioning","top","bottom","calculateCardHeigthPositioning","parseInt","key","Object","assign","animation","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C;AACA;AACA,QAAMC,gBAAgB,GAAG,CAACD,KAAK,CAACE,sBAAN,GAA+BF,KAAK,CAACG,yBAAtC,IAAmE,EAA5F,CAH4C,CAI5C;AACA;;AACA,QAAMC,mBAAmB,GAAGJ,KAAK,CAACK,mBAAlC,CAN4C,CAO5C;;AACA,QAAMC,WAAW,GAAG,CAACC,UAAD,EAAaC,UAAb,KAA6BD,UAAU,GAAGC,UAAd,GAA4B,GAA5E,CAR4C,CAS5C;;;AACA,MAAIC,sBAAsB,GAAG,EAA7B,CAV4C,CAW5C;;AACAA,EAAAA,sBAAsB,CAACC,KAAvB,GAA+BJ,WAAW,CAAC,EAAD,EAAKF,mBAAL,CAAX,GAAuC,EAAvC,GAA4C,IAA3E;AACAK,EAAAA,sBAAsB,CAACE,MAAvB,GAAgCL,WAAW,CAAC,EAAD,EAAKL,gBAAL,CAAX,GAAoC,IAApE,CAb4C,CAc5C;;AACA,MAAI,IAAIW,IAAJ,CAASZ,KAAK,CAACa,KAAf,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACtC,WAAOL,sBAAsB,CAACM,IAA9B;AACAN,IAAAA,sBAAsB,CAACO,KAAvB,GAA+B,IAAI,IAAnC;AACD,GAlB2C,CAmB5C;;;AACA,MAAI,IAAIJ,IAAJ,CAASZ,KAAK,CAACa,KAAf,EAAsBC,MAAtB,MAAkC,CAAtC,EAAyC;AACvC,WAAOL,sBAAsB,CAACO,KAA9B;AACAP,IAAAA,sBAAsB,CAACM,IAAvB,GAA8B,IAAI,IAAlC;AACD,GAvB2C,CAwB5C;;;AACA,MAAIf,KAAK,CAACiB,2BAAN,GAAoCX,WAAW,CAAC,EAAD,EAAKL,gBAAL,CAAnD,EAA2E;AACzE,WAAOQ,sBAAsB,CAACS,GAA9B;AACAT,IAAAA,sBAAsB,CAACU,MAAvB,GACElB,gBAAgB,IACfD,KAAK,CAACiB,2BAAN,GACCjB,KAAK,CAACoB,8BAFQ,CAAhB,GAGA,CAHA,GAIA,IALF;AAMD,GAjC2C,CAkC5C;;;AACA,MAAIpB,KAAK,CAACiB,2BAAN,GAAoCX,WAAW,CAAC,EAAD,EAAKL,gBAAL,CAAnD,EAA2E;AACzE,WAAOQ,sBAAsB,CAACU,MAA9B;AACAV,IAAAA,sBAAsB,CAACS,GAAvB,GACElB,KAAK,CAACiB,2BAAN,GACAI,QAAQ,CAACrB,KAAK,CAACoB,8BAAP,EAAuC,EAAvC,CADR,GAEA,CAFA,GAGA,IAJF;AAKD;;AACD,sBACQ;AACI,IAAA,GAAG,EAAEpB,KAAK,CAACsB,GADf;AAEE,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcxB,KAAK,CAACyB,SAApB,EAA+BhB,sBAA/B,CAFT;AAGE,IAAA,SAAS,EAAC,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGT,KAAK,CAAC0B,QALT,CADR;AASD","sourcesContent":["import React from \"react\";\nimport \"./EventDialogBox.css\";\nimport Transition from \"react-transition-group/CSSTransition\";\n\nexport default function EventDialogBox(props) {\n  //taking in consideration a global consensus that 1px = 1min\n  //I initialize variables the total height of the event day elapse duration\n  const totalTableHeight = (props.classLastAvailableHour - props.classInitialAvailableHour) * 60;\n  //I keep subtracting 90 px below when working w/ width\n  //as I consider the width of the <SideTab/> to 45px each\n  const totalContainerWidth = props.dimsFromLayoutWidth;\n  //percentage calculator for logical purposes\n  const percentCalc = (percentage, totalValue) => (percentage * totalValue) / 100;\n  //init the var responsible for the styling\n  let eventDialogBoxPosition = {};\n  //positioning logic for the dialog box below\n  eventDialogBoxPosition.width = percentCalc(61, totalContainerWidth) - 90 + \"px\";\n  eventDialogBoxPosition.height = percentCalc(50, totalTableHeight) + \"px\";\n  //if day is before Wednesday\n  if (new Date(props.today).getDay() > 3) {\n    delete eventDialogBoxPosition.left;\n    eventDialogBoxPosition.right = 0 + \"px\";\n  }\n  //If day is equal or higher than Wednesday\n  if (new Date(props.today).getDay() <= 3) {\n    delete eventDialogBoxPosition.right;\n    eventDialogBoxPosition.left = 0 + \"px\";\n  }\n  //If the day card is displayed below half of the calendar\n  if (props.calculateCardTopPositioning > percentCalc(50, totalTableHeight)) {\n    delete eventDialogBoxPosition.top;\n    eventDialogBoxPosition.bottom =\n      totalTableHeight -\n      (props.calculateCardTopPositioning -\n        props.calculateCardHeigthPositioning) +\n      5 +\n      \"px\";\n  }\n  //If the day card is displayed above half of the calendar\n  if (props.calculateCardTopPositioning < percentCalc(50, totalTableHeight)) {\n    delete eventDialogBoxPosition.bottom;\n    eventDialogBoxPosition.top =\n      props.calculateCardTopPositioning +\n      parseInt(props.calculateCardHeigthPositioning, 10) +\n      5 +\n      \"px\";\n  }\n  return (\n          <div\n              key={props.key}\n            style={Object.assign(props.animation, eventDialogBoxPosition)}\n            className=\"DialogBoxContainer\"\n          >\n            {props.children}\n          </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}