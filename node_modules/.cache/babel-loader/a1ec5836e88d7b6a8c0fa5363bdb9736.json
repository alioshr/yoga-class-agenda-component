{"ast":null,"code":"import _slicedToArray from \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/TimeTables/CurrentTIme/CurrentTime.js\";\nimport React, { useState, useEffect } from 'react';\nimport classes from './CurrentTime.module.css';\nexport default function CurrentTime(props) {\n  const _useState = useState(new Date()),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentTime = _useState2[0],\n        setCurrentTime = _useState2[1];\n\n  useEffect(() => {\n    setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n  }, []);\n\n  const padToTwo = number => number <= 9 ? \"0\".concat(number) : number;\n\n  const calculateCurrentTime = (new Date().getHours() - props.classInitialAvailableHour) * 60 + new Date().getMinutes();\n  const currentTimeTopPositioning = {\n    top: calculateCurrentTime + \"px\",\n    position: \"absolute\"\n  };\n  let currentTimeLineWidth;\n\n  if (props.appViewMode === \"DayMode\") {\n    currentTimeLineWidth = {\n      width: props.dayCardContainerWidth + \"px\"\n    };\n  }\n\n  if (props.appViewMode === \"WeekMode\") {\n    currentTimeLineWidth = {\n      width: props.dayCardContainerWidth * 7 + \"px\"\n    };\n  }\n\n  console.log(props.appViewMode);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: currentTimeTopPositioning,\n    className: classes.CurrentTimeWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.CurrentTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"\".concat(padToTwo(currentTime.getHours()), \":\").concat(padToTwo(currentTime.getMinutes()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.CurrentTimeLine,\n    style: currentTimeLineWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/TimeTables/CurrentTIme/CurrentTime.js"],"names":["React","useState","useEffect","classes","CurrentTime","props","Date","currentTime","setCurrentTime","setInterval","padToTwo","number","calculateCurrentTime","getHours","classInitialAvailableHour","getMinutes","currentTimeTopPositioning","top","position","currentTimeLineWidth","appViewMode","width","dayCardContainerWidth","console","log","CurrentTimeWrapper","CurrentTimeLine"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,oBACDJ,QAAQ,CAAC,IAAIK,IAAJ,EAAD,CADP;AAAA;AAAA,QAChCC,WADgC;AAAA,QACnBC,cADmB;;AAEvCN,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,WAAW,CAAC,MAAK;AACbD,MAAAA,cAAc,CAAC,IAAIF,IAAJ,EAAD,CAAd;AACH,KAFU,EAER,IAFQ,CAAX;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAKA,QAAMI,QAAQ,GAAGC,MAAM,IAAKA,MAAM,IAAI,CAAV,cAAkBA,MAAlB,IAA6BA,MAAzD;;AACA,QAAMC,oBAAoB,GAAG,CAAC,IAAIN,IAAJ,GAAWO,QAAX,KAAwBR,KAAK,CAACS,yBAA/B,IAA4D,EAA5D,GAAiE,IAAIR,IAAJ,GAAWS,UAAX,EAA9F;AACA,QAAMC,yBAAyB,GAAG;AAACC,IAAAA,GAAG,EAAEL,oBAAoB,GAAG,IAA7B;AAAmCM,IAAAA,QAAQ,EAAE;AAA7C,GAAlC;AACA,MAAIC,oBAAJ;;AACA,MAAGd,KAAK,CAACe,WAAN,KAAsB,SAAzB,EAAoC;AAChCD,IAAAA,oBAAoB,GAAG;AAACE,MAAAA,KAAK,EAAEhB,KAAK,CAACiB,qBAAN,GAA8B;AAAtC,KAAvB;AACH;;AACD,MAAGjB,KAAK,CAACe,WAAN,KAAsB,UAAzB,EAAqC;AACjCD,IAAAA,oBAAoB,GAAG;AAACE,MAAAA,KAAK,EAAEhB,KAAK,CAACiB,qBAAN,GAA8B,CAA9B,GAAkC;AAA1C,KAAvB;AACH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAK,CAACe,WAAlB;AACA,sBACI;AAAK,IAAA,KAAK,EAAEJ,yBAAZ;AAAuC,IAAA,SAAS,EAAEb,OAAO,CAACsB,kBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEtB,OAAO,CAACC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQM,QAAQ,CAACH,WAAW,CAACM,QAAZ,EAAD,CADhB,cAC4CH,QAAQ,CAACH,WAAW,CAACQ,UAAZ,EAAD,CADpD,EADJ,eAII;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACuB,eAAxB;AAAyC,IAAA,KAAK,EAAEP,oBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport classes from './CurrentTime.module.css'\n\nexport default function CurrentTime(props) {\n    const [currentTime, setCurrentTime] = useState(new Date());\n    useEffect(() => {\n        setInterval(()=> {\n            setCurrentTime(new Date())\n        }, 1000)\n    }, []);\n    const padToTwo = number => (number <= 9 ? `0${number}` : number);\n    const calculateCurrentTime = (new Date().getHours() - props.classInitialAvailableHour) * 60 + new Date().getMinutes();\n    const currentTimeTopPositioning = {top: calculateCurrentTime + \"px\", position: \"absolute\"};\n    let currentTimeLineWidth;\n    if(props.appViewMode === \"DayMode\") {\n        currentTimeLineWidth = {width: props.dayCardContainerWidth + \"px\"};\n    }\n    if(props.appViewMode === \"WeekMode\") {\n        currentTimeLineWidth = {width: props.dayCardContainerWidth * 7 + \"px\"};\n    }\n    console.log(props.appViewMode);\n    return (\n        <div style={currentTimeTopPositioning} className={classes.CurrentTimeWrapper}>\n            <div className={classes.CurrentTime} >\n                {`${padToTwo(currentTime.getHours())}:${padToTwo(currentTime.getMinutes())}`}\n            </div>\n            <div className={classes.CurrentTimeLine} style={currentTimeLineWidth}/>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}