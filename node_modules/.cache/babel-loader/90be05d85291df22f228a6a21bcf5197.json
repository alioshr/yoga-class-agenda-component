{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/Layout/Layout.js\";\nimport React from \"react\";\nimport classes from \"./Layout.module.css\";\nimport ViewMode from \"../ViewMode/ViewMode\";\nimport RightArrow from \"../NavigationButtons/RightArrow/RightArrow\";\nimport LeftArrow from \"../NavigationButtons/LeftArrow/LeftArrow\";\nimport AgendaTitles from \"../AgendaTitles/AgendaTitles\";\nimport TakeMeHome from \"../NavigationButtons/TakeMeHome/TakeMeHome\";\nexport default class Layout extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateDimensions = () => {\n      this.props.callbackContainerDimensions(this.container);\n    };\n\n    this.componentDidMount = () => {\n      //should delete this later and use the individual width of each card on WeekMode as I did with the DayMode\n      this.updateDimensions();\n      window.addEventListener(\"resize\", this.updateDimensions);\n    };\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    let calendarViewType;\n\n    switch (this.props.calendarViewType) {\n      case \"FullCalendar\":\n        calendarViewType = /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.OutStructure,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.HeaderWrapper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.FirstRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(ViewMode, {\n          weekMode: this.props.weekMode,\n          monthMode: this.props.monthMode,\n          dayMode: this.props.dayMode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.SecondRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(AgendaTitles, {\n          newDatesToVerboseHandler: this.props.newDatesToVerboseHandler,\n          monthGetter: this.props.monthGetter,\n          currentYear: this.props.currentYear,\n          currentDay: this.props.currentDay,\n          appViewMode: this.props.appViewMode,\n          calendarViewType: this.props.calendarViewType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.ControlsDisplay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(LeftArrow, {\n          appNavigationHandler: this.props.appNavigationHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(TakeMeHome, {\n          takeMeToToday: this.props.takeMeToToday,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(RightArrow, {\n          appNavigationHandler: this.props.appNavigationHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 37\n          }\n        }))), this.props.appViewMode === \"DayMode\" ? /*#__PURE__*/React.createElement(AgendaTitles, {\n          newDatesToVerboseHandler: this.props.newDatesToVerboseHandler,\n          monthGetter: this.props.monthGetter,\n          currentMonth: this.props.currentMonth,\n          currentYear: this.props.currentYear,\n          currentDay: this.props.currentDay,\n          appViewMode: this.props.appViewMode,\n          calendarViewType: this.props.calendarViewType,\n          displayDayOfTheWeek: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }\n        }) : null), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.AgendaInnerStructure,\n          ref: el => this.render(this.container = el),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }\n        }, this.props.children));\n        break;\n\n      case \"SimpleCalendar\":\n        calendarViewType = /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.OutStructure,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.SecondRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(LeftArrow, {\n          appNavigationHandler: this.props.appNavigationHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(AgendaTitles, {\n          newDatesToVerboseHandler: this.props.newDatesToVerboseHandler,\n          monthGetter: this.props.monthGetter,\n          currentYear: this.props.currentYear,\n          currentDay: this.props.currentDay,\n          appViewMode: this.props.appViewMode,\n          calendarViewType: this.props.calendarViewType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(RightArrow, {\n          appNavigationHandler: this.props.appNavigationHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.AgendaInnerStructure,\n          ref: el => this.render(this.container = el),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }\n        }, this.props.children));\n        break;\n\n      default:\n        calendarViewType = null;\n    }\n\n    return calendarViewType;\n  }\n\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/Layout/Layout.js"],"names":["React","classes","ViewMode","RightArrow","LeftArrow","AgendaTitles","TakeMeHome","Layout","Component","updateDimensions","props","callbackContainerDimensions","container","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","calendarViewType","OutStructure","HeaderWrapper","FirstRow","weekMode","monthMode","dayMode","SecondRow","newDatesToVerboseHandler","monthGetter","currentYear","currentDay","appViewMode","ControlsDisplay","appNavigationHandler","takeMeToToday","currentMonth","AgendaInnerStructure","el","children"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./Layout.module.css\";\nimport ViewMode from \"../ViewMode/ViewMode\";\nimport RightArrow from \"../NavigationButtons/RightArrow/RightArrow\";\nimport LeftArrow from \"../NavigationButtons/LeftArrow/LeftArrow\";\nimport AgendaTitles from \"../AgendaTitles/AgendaTitles\";\nimport TakeMeHome from \"../NavigationButtons/TakeMeHome/TakeMeHome\";\n\nexport default class Layout extends React.Component {\n    updateDimensions = () => {\n        this.props.callbackContainerDimensions(this.container);\n    };\n    componentDidMount = () => {\n        //should delete this later and use the individual width of each card on WeekMode as I did with the DayMode\n        this.updateDimensions();\n        window.addEventListener(\"resize\", this.updateDimensions);\n    };\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n\n    render() {\n        let calendarViewType;\n        switch (this.props.calendarViewType) {\n            case (\"FullCalendar\") :\n                calendarViewType = (\n                    <div className={classes.OutStructure}>\n                        <div className={classes.HeaderWrapper}>\n                            {/*here is display the top title w/ the curr month*/}\n                            <div className={classes.FirstRow}>\n                                <ViewMode\n                                    weekMode={this.props.weekMode}\n                                    monthMode={this.props.monthMode}\n                                    dayMode={this.props.dayMode}/>\n                            </div>\n                            <div className={classes.SecondRow}>\n                                <AgendaTitles newDatesToVerboseHandler={this.props.newDatesToVerboseHandler}\n                                              monthGetter={this.props.monthGetter}\n                                              currentYear={this.props.currentYear}\n                                              currentDay={this.props.currentDay}\n                                              appViewMode={this.props.appViewMode}\n                                              calendarViewType={this.props.calendarViewType}/>\n                                <div className={classes.ControlsDisplay}>\n                                    <LeftArrow appNavigationHandler={this.props.appNavigationHandler}/>\n                                    <TakeMeHome takeMeToToday={this.props.takeMeToToday}/>\n                                    <RightArrow appNavigationHandler={this.props.appNavigationHandler}/>\n                                </div>\n                            </div>\n                            {this.props.appViewMode === \"DayMode\" ?\n                                <AgendaTitles newDatesToVerboseHandler={this.props.newDatesToVerboseHandler}\n                                              monthGetter={this.props.monthGetter}\n                                              currentMonth={this.props.currentMonth}\n                                              currentYear={this.props.currentYear}\n                                              currentDay={this.props.currentDay}\n                                              appViewMode={this.props.appViewMode}\n                                              calendarViewType={this.props.calendarViewType}\n                                              displayDayOfTheWeek={true}/> : null}\n                        </div>\n                        <div className={classes.AgendaInnerStructure}\n                             ref={el => this.render((this.container = el))}>\n                            {this.props.children}\n                        </div>\n                    </div>\n                );\n                break;\n            case(\"SimpleCalendar\") :\n                calendarViewType = (\n                    <div className={classes.OutStructure}>\n                        <div className={classes.SecondRow}>\n                            <LeftArrow appNavigationHandler={this.props.appNavigationHandler}/>\n                            <AgendaTitles newDatesToVerboseHandler={this.props.newDatesToVerboseHandler}\n                                          monthGetter={this.props.monthGetter}\n                                          currentYear={this.props.currentYear}\n                                          currentDay={this.props.currentDay}\n                                          appViewMode={this.props.appViewMode}\n                                          calendarViewType={this.props.calendarViewType}/>\n                            <RightArrow appNavigationHandler={this.props.appNavigationHandler}/>\n                        </div>\n                        <div className={classes.AgendaInnerStructure}\n                             ref={el => this.render((this.container = el))}>\n                            {this.props.children}\n                        </div>\n                    </div>\n                );\n                break;\n            default :\n                calendarViewType = null;\n        }\n        return calendarViewType\n    }\n}\n"]},"metadata":{},"sourceType":"module"}