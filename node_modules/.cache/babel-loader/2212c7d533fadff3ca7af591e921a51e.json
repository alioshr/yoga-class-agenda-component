{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/EventDialogBox/EventDialogBox.js\";\nimport React from \"react\";\nimport \"./EventDialogBox.css\";\nexport default function EventDialogBox(props) {\n  //taking in consideration a global consensus that 1px = 1min\n  //I initialize variables the total height of the event day elapse duration\n  const totalTableHeight = (props.classLastAvailableHour - props.classInitialAvailableHour) * 60; //I keep subtracting 90 px below when working w/ width\n  //as I consider the width of the <SideTab/> to 45px each\n\n  const totalContainerWidth = props.dimsFromLayoutWidth; //percentage calculator for logical purposes\n\n  const percentCalc = (percentage, totalValue) => percentage * totalValue / 100; //init the var responsible for the styling\n\n\n  let eventDialogBoxPosition = {};\n  eventDialogBoxPosition.top = eventDialogBoxPosition.top !== undefined && props.animation ? eventDialogBoxPosition.top : 50 + \"%\"; //positioning logic for the dialog box below\n\n  eventDialogBoxPosition.width = percentCalc(61, totalContainerWidth) - 90 + \"px\";\n  eventDialogBoxPosition.height = percentCalc(50, totalTableHeight) + \"px\"; //if day is before Wednesday\n\n  if (new Date(props.today).getDay() > 3) {\n    delete eventDialogBoxPosition.left;\n    eventDialogBoxPosition.right = 0 + \"px\";\n  } //If day is equal or higher than Wednesday\n\n\n  if (new Date(props.today).getDay() <= 3) {\n    delete eventDialogBoxPosition.right;\n    eventDialogBoxPosition.left = 0 + \"px\";\n  } //If the day card is displayed below half of the calendar\n\n\n  if (props.calculateCardTopPositioning > 0 && props.calculateCardTopPositioning > percentCalc(50, totalTableHeight)) {\n    delete eventDialogBoxPosition.top;\n    eventDialogBoxPosition.bottom = totalTableHeight - (props.calculateCardTopPositioning - props.calculateCardHeigthPositioning) + 5 + \"px\";\n  } //If the day card is displayed above half of the calendar\n\n\n  if (props.calculateCardTopPositioning > 0 && props.calculateCardTopPositioning < percentCalc(50, totalTableHeight)) {\n    delete eventDialogBoxPosition.bottom;\n    eventDialogBoxPosition.top = props.calculateCardTopPositioning + parseInt(props.calculateCardHeigthPositioning, 10) + 5 + \"px\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: Object.assign(props.animation, eventDialogBoxPosition),\n    className: \"DialogBoxContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/EventDialogBox/EventDialogBox.js"],"names":["React","EventDialogBox","props","totalTableHeight","classLastAvailableHour","classInitialAvailableHour","totalContainerWidth","dimsFromLayoutWidth","percentCalc","percentage","totalValue","eventDialogBoxPosition","top","undefined","animation","width","height","Date","today","getDay","left","right","calculateCardTopPositioning","bottom","calculateCardHeigthPositioning","parseInt","Object","assign","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C;AACA;AACA,QAAMC,gBAAgB,GAAG,CAACD,KAAK,CAACE,sBAAN,GAA+BF,KAAK,CAACG,yBAAtC,IAAmE,EAA5F,CAH4C,CAI5C;AACA;;AACA,QAAMC,mBAAmB,GAAGJ,KAAK,CAACK,mBAAlC,CAN4C,CAO5C;;AACA,QAAMC,WAAW,GAAG,CAACC,UAAD,EAAaC,UAAb,KAA6BD,UAAU,GAAGC,UAAd,GAA4B,GAA5E,CAR4C,CAS5C;;;AACA,MAAIC,sBAAsB,GAAG,EAA7B;AACAA,EAAAA,sBAAsB,CAACC,GAAvB,GAA6BD,sBAAsB,CAACC,GAAvB,KAA+BC,SAA/B,IAA4CX,KAAK,CAACY,SAAlD,GAA8DH,sBAAsB,CAACC,GAArF,GAA4F,KAAK,GAA9H,CAX4C,CAY5C;;AACAD,EAAAA,sBAAsB,CAACI,KAAvB,GAA+BP,WAAW,CAAC,EAAD,EAAKF,mBAAL,CAAX,GAAuC,EAAvC,GAA4C,IAA3E;AACAK,EAAAA,sBAAsB,CAACK,MAAvB,GAAgCR,WAAW,CAAC,EAAD,EAAKL,gBAAL,CAAX,GAAoC,IAApE,CAd4C,CAe5C;;AACA,MAAI,IAAIc,IAAJ,CAASf,KAAK,CAACgB,KAAf,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACtC,WAAOR,sBAAsB,CAACS,IAA9B;AACAT,IAAAA,sBAAsB,CAACU,KAAvB,GAA+B,IAAI,IAAnC;AACD,GAnB2C,CAoB5C;;;AACA,MAAI,IAAIJ,IAAJ,CAASf,KAAK,CAACgB,KAAf,EAAsBC,MAAtB,MAAkC,CAAtC,EAAyC;AACvC,WAAOR,sBAAsB,CAACU,KAA9B;AACAV,IAAAA,sBAAsB,CAACS,IAAvB,GAA8B,IAAI,IAAlC;AACD,GAxB2C,CAyB5C;;;AACA,MAAIlB,KAAK,CAACoB,2BAAN,GAAoC,CAApC,IAAyCpB,KAAK,CAACoB,2BAAN,GAAoCd,WAAW,CAAC,EAAD,EAAKL,gBAAL,CAA5F,EAAoH;AAClH,WAAOQ,sBAAsB,CAACC,GAA9B;AACAD,IAAAA,sBAAsB,CAACY,MAAvB,GACIpB,gBAAgB,IACfD,KAAK,CAACoB,2BAAN,GACGpB,KAAK,CAACsB,8BAFM,CAAhB,GAGA,CAHA,GAIA,IALJ;AAMD,GAlC2C,CAmC5C;;;AACA,MAAItB,KAAK,CAACoB,2BAAN,GAAoC,CAApC,IAAwCpB,KAAK,CAACoB,2BAAN,GAAoCd,WAAW,CAAC,EAAD,EAAKL,gBAAL,CAA3F,EAAmH;AACjH,WAAOQ,sBAAsB,CAACY,MAA9B;AACAZ,IAAAA,sBAAsB,CAACC,GAAvB,GACIV,KAAK,CAACoB,2BAAN,GACAG,QAAQ,CAACvB,KAAK,CAACsB,8BAAP,EAAuC,EAAvC,CADR,GAEA,CAFA,GAGA,IAJJ;AAKD;;AACD,sBACI;AACI,IAAA,KAAK,EAAEE,MAAM,CAACC,MAAP,CAAczB,KAAK,CAACY,SAApB,EAA+BH,sBAA/B,CADX;AAEI,IAAA,SAAS,EAAC,oBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGT,KAAK,CAAC0B,QAJT,CADJ;AAQD","sourcesContent":["import React from \"react\";\nimport \"./EventDialogBox.css\";\n\nexport default function EventDialogBox(props) {\n  //taking in consideration a global consensus that 1px = 1min\n  //I initialize variables the total height of the event day elapse duration\n  const totalTableHeight = (props.classLastAvailableHour - props.classInitialAvailableHour) * 60;\n  //I keep subtracting 90 px below when working w/ width\n  //as I consider the width of the <SideTab/> to 45px each\n  const totalContainerWidth = props.dimsFromLayoutWidth;\n  //percentage calculator for logical purposes\n  const percentCalc = (percentage, totalValue) => (percentage * totalValue) / 100;\n  //init the var responsible for the styling\n  let eventDialogBoxPosition = {};\n  eventDialogBoxPosition.top = eventDialogBoxPosition.top !== undefined && props.animation ? eventDialogBoxPosition.top :  50 + \"%\";\n  //positioning logic for the dialog box below\n  eventDialogBoxPosition.width = percentCalc(61, totalContainerWidth) - 90 + \"px\";\n  eventDialogBoxPosition.height = percentCalc(50, totalTableHeight) + \"px\";\n  //if day is before Wednesday\n  if (new Date(props.today).getDay() > 3) {\n    delete eventDialogBoxPosition.left;\n    eventDialogBoxPosition.right = 0 + \"px\";\n  }\n  //If day is equal or higher than Wednesday\n  if (new Date(props.today).getDay() <= 3) {\n    delete eventDialogBoxPosition.right;\n    eventDialogBoxPosition.left = 0 + \"px\";\n  }\n  //If the day card is displayed below half of the calendar\n  if (props.calculateCardTopPositioning > 0 && props.calculateCardTopPositioning > percentCalc(50, totalTableHeight)) {\n    delete eventDialogBoxPosition.top;\n    eventDialogBoxPosition.bottom =\n        totalTableHeight -\n        (props.calculateCardTopPositioning -\n            props.calculateCardHeigthPositioning) +\n        5 +\n        \"px\";\n  }\n  //If the day card is displayed above half of the calendar\n  if (props.calculateCardTopPositioning > 0 &&props.calculateCardTopPositioning < percentCalc(50, totalTableHeight)) {\n    delete eventDialogBoxPosition.bottom;\n    eventDialogBoxPosition.top =\n        props.calculateCardTopPositioning +\n        parseInt(props.calculateCardHeigthPositioning, 10) +\n        5 +\n        \"px\";\n  }\n  return (\n      <div\n          style={Object.assign(props.animation, eventDialogBoxPosition)}\n          className=\"DialogBoxContainer\"\n      >\n        {props.children}\n      </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}