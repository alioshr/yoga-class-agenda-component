{"ast":null,"code":"import _slicedToArray from \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/DayMode/DayMode.js\";\nimport React, { useState } from 'react';\nimport SideTab from \"../../../SideTab/SideTab\";\nimport TimeTables from \"../../../TimeTables/TimeTables\";\nimport EventCard from \"../../../EventCard/EventCard\";\nimport DayCard from \"./DayCard/DayCard\";\nexport default function DayMode(props) {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        dayCardRef = _useState2[0],\n        setDayCardRef = _useState2[1];\n\n  const callbackDivRef = childRef => {\n    setDayCardRef(childRef);\n  };\n\n  const today = props.currentDay;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideTab, {\n    style: {\n      height: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TimeTables, {\n    currAgendaData: props.currentDay,\n    appViewMode: props.appViewMode,\n    dayCardContainerWidth: dayCardRef,\n    style: {\n      color: \"black\",\n      border: \"none\",\n      boxShadow: \"none\",\n      borderRadius: \"0\"\n    },\n    tableOfAvailableHours: props.arrayOfDailyHoursTable,\n    agendaInitialAvailableHour: props.agendaInitialAvailableHour,\n    agendaLastAvailableHour: props.agendaLastAvailableHour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(DayCard, {\n    callbackDivRef: callbackDivRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TimeTables, {\n    tableOfAvailableHours: props.arrayOfDailyHoursTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }), props.dataToBeRendered.filter(cl => cl.classDate === today).map(cl => /*#__PURE__*/React.createElement(EventCard, {\n    zIndexIFClicked: props.dialogBoxData.displayDialogBox,\n    currDay: today,\n    classDate: cl.classDate,\n    classTitle: cl.classTitle,\n    classLocation: cl.location,\n    classDuration: cl.duration,\n    classTime: cl.classTime,\n    classInitialAvailableHour: props.agendaInitialAvailableHour,\n    key: cl.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(SideTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/DayMode/DayMode.js"],"names":["React","useState","SideTab","TimeTables","EventCard","DayCard","DayMode","props","dayCardRef","setDayCardRef","callbackDivRef","childRef","today","currentDay","display","flexDirection","width","height","appViewMode","color","border","boxShadow","borderRadius","arrayOfDailyHoursTable","agendaInitialAvailableHour","agendaLastAvailableHour","position","dataToBeRendered","filter","cl","classDate","map","dialogBoxData","displayDialogBox","classTitle","location","duration","classTime","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,oBACCN,QAAQ,EADT;AAAA;AAAA,QAC5BO,UAD4B;AAAA,QAChBC,aADgB;;AAGnC,QAAMC,cAAc,GAAGC,QAAQ,IAAI;AAC3BF,IAAAA,aAAa,CAACE,QAAD,CAAb;AACP,GAFD;;AAGA,QAAMC,KAAK,GAAGL,KAAK,CAACM,UAApB;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,aAAa,EAAE,KAAjC;AAAwCC,MAAAA,KAAK,EAAE;AAA/C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,cAAc,EAAEV,KAAK,CAACM,UAD1B;AAEI,IAAA,WAAW,EAAEN,KAAK,CAACW,WAFvB;AAGI,IAAA,qBAAqB,EAAEV,UAH3B;AAII,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE,MAA1B;AAAkCC,MAAAA,SAAS,EAAE,MAA7C;AAAsDC,MAAAA,YAAY,EAAE;AAApE,KAJX;AAKI,IAAA,qBAAqB,EAAEf,KAAK,CAACgB,sBALjC;AAMI,IAAA,0BAA0B,EAAEhB,KAAK,CAACiB,0BANtC;AAOI,IAAA,uBAAuB,EAAEjB,KAAK,CAACkB,uBAPnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAYI,oBAAC,OAAD;AACI,IAAA,cAAc,EAAEf,cADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAK,IAAA,KAAK,EAAE;AAACgB,MAAAA,QAAQ,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,qBAAqB,EAAEnB,KAAK,CAACgB,sBADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAIKhB,KAAK,CAACoB,gBAAN,CAAuBC,MAAvB,CAA8BC,EAAE,IAAIA,EAAE,CAACC,SAAH,KAAiBlB,KAArD,EAA4DmB,GAA5D,CAAgEF,EAAE,iBAC/D,oBAAC,SAAD;AACI,IAAA,eAAe,EAAEtB,KAAK,CAACyB,aAAN,CAAoBC,gBADzC;AAEI,IAAA,OAAO,EAAErB,KAFb;AAGI,IAAA,SAAS,EAAEiB,EAAE,CAACC,SAHlB;AAII,IAAA,UAAU,EAAED,EAAE,CAACK,UAJnB;AAKI,IAAA,aAAa,EAAEL,EAAE,CAACM,QALtB;AAMI,IAAA,aAAa,EAAEN,EAAE,CAACO,QANtB;AAOI,IAAA,SAAS,EAAEP,EAAE,CAACQ,SAPlB;AAQI,IAAA,yBAAyB,EAAE9B,KAAK,CAACiB,0BARrC;AASI,IAAA,GAAG,EAAEK,EAAE,CAACS,EATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAJL,CAHJ,CAZJ,eAmCI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCJ,CADJ;AAwCH","sourcesContent":["import React, {useState} from 'react'\nimport SideTab from \"../../../SideTab/SideTab\";\nimport TimeTables from \"../../../TimeTables/TimeTables\";\nimport EventCard from \"../../../EventCard/EventCard\";\nimport DayCard from \"./DayCard/DayCard\";\n\nexport default function DayMode(props) {\n    const [dayCardRef, setDayCardRef] = useState();\n\n    const callbackDivRef = childRef => {\n            setDayCardRef(childRef)\n    };\n    const today = props.currentDay;\n    return (\n        <div style={{display: \"flex\", flexDirection: \"row\", width: \"100%\"}}>\n            <SideTab style={{height: \"auto\"}}>\n                <TimeTables\n                    currAgendaData={props.currentDay}\n                    appViewMode={props.appViewMode}\n                    dayCardContainerWidth={dayCardRef}\n                    style={{ color: \"black\", border: \"none\", boxShadow: \"none\",  borderRadius: \"0\" }}\n                    tableOfAvailableHours={props.arrayOfDailyHoursTable}\n                    agendaInitialAvailableHour={props.agendaInitialAvailableHour}\n                    agendaLastAvailableHour={props.agendaLastAvailableHour}\n                />\n            </SideTab>\n            <DayCard\n                callbackDivRef={callbackDivRef}\n            >\n                <div style={{position: \"relative\"}}>\n                    <TimeTables\n                        tableOfAvailableHours={props.arrayOfDailyHoursTable}\n                    />\n                    {props.dataToBeRendered.filter(cl => cl.classDate === today).map(cl =>\n                        <EventCard\n                            zIndexIFClicked={props.dialogBoxData.displayDialogBox}\n                            currDay={today}\n                            classDate={cl.classDate}\n                            classTitle={cl.classTitle}\n                            classLocation={cl.location}\n                            classDuration={cl.duration}\n                            classTime={cl.classTime}\n                            classInitialAvailableHour={props.agendaInitialAvailableHour}\n                            key={cl.id}\n                        />\n                    )}\n                </div>\n\n            </DayCard>\n            <SideTab />\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}