{"ast":null,"code":"import _slicedToArray from \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/WeekMode/WeekMode.js\";\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport SideTab from \"../../../Components/SideTab/SideTab\";\nimport TimeTables from \"../../../Components/TimeTables/TimeTables\";\nimport EventCard from \"../../../Components/EventCard/EventCard\";\nimport EventDialogBox from \"../../EventDialogBox/EventDialogBox\";\nimport FullEventCard from \"../../../Components/EventCard/FullEventCard/FullEventCard\";\nimport Transition from \"react-transition-group/cjs/Transition\";\nimport DayOfTheWeekCard from \"../../../Components/DayOfTheWeekCard/DayOfTheWeekCard\";\nimport DateCards from \"../../../Components/DateCards.js/DateCards\";\nimport classes from './WeekMode.module.css';\nexport default function WeekMode(props) {\n  const ref = useRef({});\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        dimensions = _useState2[0],\n        setDimensions = _useState2[1];\n\n  const updateDimensions = () => {\n    setDimensions(ref.current.getBoundingClientRect());\n  };\n\n  useLayoutEffect(() => {\n    updateDimensions();\n    window.addEventListener(\"resize\", updateDimensions);\n    return () => {\n      window.removeEventListener(\"resize\", updateDimensions);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.WeekModeWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TimeTables, {\n    currAgendaData: props.currentWeek,\n    appViewMode: props.appViewMode,\n    dayCardContainerWidth: dimensions.width,\n    style: {\n      color: \"black\",\n      border: \"none\",\n      boxShadow: \"none\",\n      borderRadius: \"0\"\n    },\n    tableOfAvailableHours: props.arrayOfDailyHoursTable,\n    agendaInitialAvailableHour: props.agendaInitialAvailableHour,\n    agendaLastAvailableHour: props.agendaLastAvailableHour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), props.currentWeek.map(day => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.DayCard,\n    key: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.CardHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DayOfTheWeekCard, {\n    style: {\n      fontSize: \"1.2rem\"\n    },\n    newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n    today: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(DateCards, {\n    today: day,\n    goToClickedDate: props.goToClickedDate,\n    monthGetter: props.monthGetter,\n    newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.InnerTableData,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TimeTables, {\n    tableOfAvailableHours: props.arrayOfDailyHoursTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), props.dataToBeRendered.filter(cl => cl.classDate === day).map(cl => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: cl.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(EventCard, {\n    currDay: day,\n    classDate: cl.classDate,\n    classTitle: cl.classTitle,\n    classLocation: cl.location,\n    classDuration: cl.duration,\n    classTime: cl.classTime,\n    classInitialAvailableHour: props.agendaInitialAvailableHour,\n    displayFullEventCard: props.displayDialogBoxHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Transition, {\n    key: cl.id,\n    timeout: 500,\n    in: day === props.dialogBoxData.displayDialogBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }, state => {\n    let animation = {\n      transition: \"z-index .5s ease-out, opacity .5s ease-out\",\n      opacity: state === \"entering\" ? 1 : state === \"entered\" ? 1 : state === \"exited\" ? 0 : 0,\n      zIndex: state === \"entering\" ? 101 : state === \"entered\" ? 101 : state === \"exiting\" ? 96 : -100\n    };\n    return /*#__PURE__*/React.createElement(EventDialogBox, {\n      animation: animation,\n      dayCardContainerRef: dimensions,\n      today: day,\n      displayDialogBox: props.dialogBoxData.displayDialogBox,\n      dimsFromLayoutWidth: props.layoutWidthDimensions.width,\n      calculateCardTopPositioning: props.dialogBoxData.topPositionFromClassCard,\n      calculateCardHeigthPositioning: props.dialogBoxData.heigthPositionFromClassCard,\n      classInitialAvailableHour: props.agendaInitialAvailableHour,\n      classLastAvailableHour: props.agendaLastAvailableHour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FullEventCard, {\n      fullClassData: props.dataToBeRendered,\n      currentDay: day,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 49\n      }\n    }));\n  })))))), /*#__PURE__*/React.createElement(SideTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/WeekMode/WeekMode.js"],"names":["React","useLayoutEffect","useRef","useState","SideTab","TimeTables","EventCard","EventDialogBox","FullEventCard","Transition","DayOfTheWeekCard","DateCards","classes","WeekMode","props","ref","dimensions","setDimensions","updateDimensions","current","getBoundingClientRect","window","addEventListener","removeEventListener","WeekModeWrapper","currentWeek","appViewMode","width","color","border","boxShadow","borderRadius","arrayOfDailyHoursTable","agendaInitialAvailableHour","agendaLastAvailableHour","map","day","DayCard","CardHeader","fontSize","newDatesToVerboseHandler","goToClickedDate","monthGetter","InnerTableData","dataToBeRendered","filter","cl","classDate","id","classTitle","location","duration","classTime","displayDialogBoxHandler","dialogBoxData","displayDialogBox","state","animation","transition","opacity","zIndex","layoutWidthDimensions","topPositionFromClassCard","heigthPositionFromClassCard"],"mappings":"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","sourcesContent":["import React, {useLayoutEffect, useRef, useState} from 'react'\nimport SideTab from \"../../../Components/SideTab/SideTab\";\nimport TimeTables from \"../../../Components/TimeTables/TimeTables\";\nimport EventCard from \"../../../Components/EventCard/EventCard\";\nimport EventDialogBox from \"../../EventDialogBox/EventDialogBox\";\nimport FullEventCard from \"../../../Components/EventCard/FullEventCard/FullEventCard\";\nimport Transition from \"react-transition-group/cjs/Transition\";\nimport DayOfTheWeekCard from \"../../../Components/DayOfTheWeekCard/DayOfTheWeekCard\";\nimport DateCards from \"../../../Components/DateCards.js/DateCards\";\nimport classes from './WeekMode.module.css'\n\n\nexport default function WeekMode(props) {\n    const ref = useRef({});\n    const [dimensions, setDimensions] = useState(0);\n    const updateDimensions = () => {\n        setDimensions(ref.current.getBoundingClientRect());\n    };\n    useLayoutEffect(() => {\n        updateDimensions();\n        window.addEventListener(\"resize\", updateDimensions);\n        return () => {\n            window.removeEventListener(\"resize\", updateDimensions)\n        }\n    }, []);\n    return (\n        <div className={classes.WeekModeWrapper}>\n            <SideTab>\n                <TimeTables currAgendaData={props.currentWeek}\n                            appViewMode={props.appViewMode}\n                            dayCardContainerWidth={dimensions.width}\n                            style={{ color: \"black\", border: \"none\", boxShadow: \"none\",  borderRadius: \"0\" }}\n                            tableOfAvailableHours={props.arrayOfDailyHoursTable}\n                            agendaInitialAvailableHour={props.agendaInitialAvailableHour}\n                            agendaLastAvailableHour={props.agendaLastAvailableHour}\n                />\n            </SideTab>\n            {props.currentWeek.map(day =>\n                <div className={classes.DayCard} key={day}>\n                        <div className={classes.CardHeader}>\n                        <DayOfTheWeekCard\n                            style={{fontSize: \"1.2rem\"}}\n                            newDatesToVerboseHandler={props.newDatesToVerboseHandler}\n                            today={day}/>\n                        <DateCards today={day}\n                                   goToClickedDate={props.goToClickedDate}\n                                   monthGetter={props.monthGetter}\n                                   newDatesToVerboseHandler={props.newDatesToVerboseHandler}/>\n                        </div>\n                    <div className={classes.InnerTableData}\n                         ref={ref}>\n                    <TimeTables tableOfAvailableHours={props.arrayOfDailyHoursTable}/>\n                        {props.dataToBeRendered.filter(cl => cl.classDate === day).map(cl =>\n                            <React.Fragment key={cl.id}>\n                                <EventCard currDay={day}\n                                           classDate={cl.classDate}\n                                           classTitle={cl.classTitle}\n                                           classLocation={cl.location}\n                                           classDuration={cl.duration}\n                                           classTime={cl.classTime}\n                                           classInitialAvailableHour={props.agendaInitialAvailableHour}\n                                           displayFullEventCard={props.displayDialogBoxHandler}/>\n                                <Transition key={cl.id} timeout={500} in={day === props.dialogBoxData.displayDialogBox}>\n                                    {state => {\n                                        let animation = {\n                                            transition: \"z-index .5s ease-out, opacity .5s ease-out\",\n                                            opacity:\n                                                state === \"entering\"\n                                                    ? 1\n                                                    : state === \"entered\"\n                                                    ? 1\n                                                    : state === \"exited\"\n                                                        ? 0\n                                                        : 0,\n                                            zIndex:\n                                                state === \"entering\"\n                                                    ? 101\n                                                    : state === \"entered\"\n                                                    ? 101\n                                                    : state === \"exiting\"\n                                                        ? 96\n                                                        :  -100\n                                        };\n                                        return (\n                                            <EventDialogBox animation={animation}\n                                                            dayCardContainerRef={dimensions}\n                                                            today={day}\n                                                            displayDialogBox={props.dialogBoxData.displayDialogBox}\n                                                            dimsFromLayoutWidth={props.layoutWidthDimensions.width}\n                                                            calculateCardTopPositioning={props.dialogBoxData.topPositionFromClassCard}\n                                                            calculateCardHeigthPositioning={props.dialogBoxData.heigthPositionFromClassCard}\n                                                            classInitialAvailableHour={props.agendaInitialAvailableHour}\n                                                            classLastAvailableHour={props.agendaLastAvailableHour}>\n                                                <FullEventCard fullClassData={props.dataToBeRendered}\n                                                               currentDay={day}/>\n                                            </EventDialogBox>\n                                        );\n                                    }}\n                                </Transition>\n                            </React.Fragment>)}\n                    </div>\n                </div>)}\n            <SideTab />\n        </div>\n    )}"]},"metadata":{},"sourceType":"module"}