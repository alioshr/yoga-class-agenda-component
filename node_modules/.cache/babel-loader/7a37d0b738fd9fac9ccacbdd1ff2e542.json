{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/CalendarMode/MonthDayCard/MonthDayCard.js\";\nimport React from 'react';\nimport classes from './MonthDayCard.module.css';\nimport DayHeader from \"../../../../Components/AgendaCards/DayHeader/DayHeader\";\nimport DayOfTheWeekCard from \"../../../../Components/AgendaCards/DayOfTheWeekCard/DayOfTheWeekCard\";\nexport default function MonthCard(props) {\n  let dayHeaderWrapper;\n  let dayCardStyle;\n\n  if (props.calendarViewType === \"FullCalendar\" && props.appViewMode === \"CalendarMode\") {\n    console.log(true);\n    dayHeaderWrapper = {\n      color: \"red\",\n      zIndex: 0,\n      fontSize: \"1.5rem\",\n      justifyContent: \"flex-end\",\n      alignItems: \"flex-end\",\n      height: \"auto\"\n    };\n    dayCardStyle = {\n      color: \"black\",\n      margin: \"1px\",\n      fontSize: \"1.5rem\"\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.MonthCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DayHeader, {\n    style: dayHeaderWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: dayHeaderWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DayOfTheWeekCard, {\n    style: dayCardStyle,\n    newDatesToVerboseHandler: props.newDatesToVerboseHandler,\n    today: props.today,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, props.children));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/CalendarMode/MonthDayCard/MonthDayCard.js"],"names":["React","classes","DayHeader","DayOfTheWeekCard","MonthCard","props","dayHeaderWrapper","dayCardStyle","calendarViewType","appViewMode","console","log","color","zIndex","fontSize","justifyContent","alignItems","height","margin","newDatesToVerboseHandler","today","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,wDAAtB;AACA,OAAOC,gBAAP,MAA6B,sEAA7B;AAEA,eAAe,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AACtC,MAAIC,gBAAJ;AACA,MAAIC,YAAJ;;AACA,MAAGF,KAAK,CAACG,gBAAN,KAA2B,cAA3B,IAA6CH,KAAK,CAACI,WAAN,KAAsB,cAAtE,EAAsF;AAClFC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAL,IAAAA,gBAAgB,GAAG;AAACM,MAAAA,KAAK,EAAE,KAAR;AAAcC,MAAAA,MAAM,EAAE,CAAtB;AAAyBC,MAAAA,QAAQ,EAAE,QAAnC;AAA6CC,MAAAA,cAAc,EAAE,UAA7D;AAAyEC,MAAAA,UAAU,EAAE,UAArF;AAAiGC,MAAAA,MAAM,EAAE;AAAzG,KAAnB;AACAV,IAAAA,YAAY,GAAG;AAACK,MAAAA,KAAK,EAAE,OAAR;AAAiBM,MAAAA,MAAM,EAAE,KAAzB;AAAgCJ,MAAAA,QAAQ,EAAE;AAA1C,KAAf;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACG,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEE,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAEA,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEC,YADX;AAEI,IAAA,wBAAwB,EAAEF,KAAK,CAACc,wBAFpC;AAGI,IAAA,KAAK,EAAEd,KAAK,CAACe,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,eASI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,KAAK,CAACgB,QADX,CATJ,CADJ;AAgBH","sourcesContent":["import React from 'react'\nimport classes from './MonthDayCard.module.css'\nimport DayHeader from \"../../../../Components/AgendaCards/DayHeader/DayHeader\";\nimport DayOfTheWeekCard from \"../../../../Components/AgendaCards/DayOfTheWeekCard/DayOfTheWeekCard\";\n\nexport default function MonthCard (props) {\n    let dayHeaderWrapper;\n    let dayCardStyle;\n    if(props.calendarViewType === \"FullCalendar\" && props.appViewMode === \"CalendarMode\") {\n        console.log(true)\n        dayHeaderWrapper = {color: \"red\",zIndex: 0, fontSize: \"1.5rem\", justifyContent: \"flex-end\", alignItems: \"flex-end\", height: \"auto\"};\n        dayCardStyle = {color: \"black\", margin: \"1px\", fontSize: \"1.5rem\"};\n    }\n    return (\n        <div className={classes.MonthCard}>\n            <DayHeader style={dayHeaderWrapper}>\n                <div style={dayHeaderWrapper}>\n                    <DayOfTheWeekCard\n                        style={dayCardStyle}\n                        newDatesToVerboseHandler={props.newDatesToVerboseHandler}\n                        today={props.today}/>\n                </div>\n            </DayHeader>\n            <React.Fragment>\n                {props.children}\n            </React.Fragment>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}