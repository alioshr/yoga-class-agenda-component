{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/AgendaTitles/AgendaTitles.js\";\nimport React from 'react';\nimport classes from \"./AgendaTitles.module.css\";\nexport default function AgendaTitles(props) {\n  const renderMonthDayAndYear = \"\".concat(props.newDatesToVerboseHandler(props.currentMonth, \"renderMonth\"), \" \\n    \").concat(new Date(props.currentDay).getDate(), \", \").concat(props.currentYear);\n  const renderMonthAndYear = \"\".concat(props.newDatesToVerboseHandler(props.currentMonth, \"renderMonth\"), \", \").concat(props.currentYear);\n  const renderDayOfTheWeek = props.newDatesToVerboseHandler(new Date(props.currentDay).getDay(), \"renderWeekDay\");\n  let dayOfTheWeekStyle;\n  /* if(props.titleMode === \"DayOfTheWeek\") {\n       dayOfTheWeekStyle = {fontSize: \"1.8rem\", marginBottom: \"10px\"}\n   }*/\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.AgendaTitlesDisplay,\n    style: dayOfTheWeekStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, props.appViewMode === \"DayMode\" ? renderMonthDayAndYear : renderMonthAndYear, props.appViewMode === \"DayMode\" && props.titleMode === 'DayOfTheWeek' ? renderDayOfTheWeek : null);\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/AgendaTitles/AgendaTitles.js"],"names":["React","classes","AgendaTitles","props","renderMonthDayAndYear","newDatesToVerboseHandler","currentMonth","Date","currentDay","getDate","currentYear","renderMonthAndYear","renderDayOfTheWeek","getDay","dayOfTheWeekStyle","AgendaTitlesDisplay","appViewMode","titleMode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,QAAMC,qBAAqB,aAAMD,KAAK,CAACE,wBAAN,CAA+BF,KAAK,CAACG,YAArC,EAAmD,aAAnD,CAAN,oBACzB,IAAIC,IAAJ,CAASJ,KAAK,CAACK,UAAf,EAA2BC,OAA3B,EADyB,eACgBN,KAAK,CAACO,WADtB,CAA3B;AAEA,QAAMC,kBAAkB,aAAMR,KAAK,CAACE,wBAAN,CAA+BF,KAAK,CAACG,YAArC,EAAmD,aAAnD,CAAN,eAA4EH,KAAK,CAACO,WAAlF,CAAxB;AACA,QAAME,kBAAkB,GAAGT,KAAK,CAACE,wBAAN,CAA+B,IAAIE,IAAJ,CAASJ,KAAK,CAACK,UAAf,EAA2BK,MAA3B,EAA/B,EAAoE,eAApE,CAA3B;AACA,MAAIC,iBAAJ;AACD;;;;AAGC,sBACI;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACc,mBAAxB;AAA6C,IAAA,KAAK,EAAED,iBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,KAAK,CAACa,WAAN,KAAsB,SAAtB,GACGZ,qBADH,GAC2BO,kBAFhC,EAGKR,KAAK,CAACa,WAAN,KAAsB,SAAtB,IAAmCb,KAAK,CAACc,SAAN,KAAoB,cAAvD,GACDL,kBADC,GACoB,IAJzB,CADJ;AAQH","sourcesContent":["import React from 'react';\nimport classes from \"./AgendaTitles.module.css\";\n\nexport default function AgendaTitles(props) {\n    const renderMonthDayAndYear = `${props.newDatesToVerboseHandler(props.currentMonth, \"renderMonth\")} \n    ${new Date(props.currentDay).getDate()}, ${props.currentYear}`;\n    const renderMonthAndYear = `${props.newDatesToVerboseHandler(props.currentMonth, \"renderMonth\")}, ${props.currentYear}`;\n    const renderDayOfTheWeek = props.newDatesToVerboseHandler(new Date(props.currentDay).getDay(), \"renderWeekDay\");\n    let dayOfTheWeekStyle;\n   /* if(props.titleMode === \"DayOfTheWeek\") {\n        dayOfTheWeekStyle = {fontSize: \"1.8rem\", marginBottom: \"10px\"}\n    }*/\n    return (\n        <div className={classes.AgendaTitlesDisplay} style={dayOfTheWeekStyle}>\n            {props.appViewMode === \"DayMode\" ?\n                renderMonthDayAndYear : renderMonthAndYear}\n            {props.appViewMode === \"DayMode\" && props.titleMode === 'DayOfTheWeek' ?\n            renderDayOfTheWeek : null}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}