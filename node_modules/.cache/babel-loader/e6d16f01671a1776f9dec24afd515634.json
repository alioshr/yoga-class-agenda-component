{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/AgendaTitles/AgendaTitles.js\";\nimport React, { Fragment } from 'react';\nimport classes from \"./AgendaTitles.module.css\";\nexport default function AgendaTitles(props) {\n  let agendaTitles;\n\n  switch (props.appViewMode) {\n    case \"DayMode\":\n      agendaTitles = props.currentDay !== \"\" ? \"\".concat(props.newDatesToVerboseHandler(props.monthGetter, \"renderMonth\"), \", \\n                \").concat(new Date(props.currentDay).getDate(), \" \").concat(props.currentYear, \"\\n                \").concat(props.newDatesToVerboseHandler(new Date(props.currentDay).getDay(), \"renderWeekDay\"), \" \") : null;\n      break;\n\n    case \"WeekMode\":\n    case \"CalendarMode\":\n      agendaTitles = \"\".concat(props.newDatesToVerboseHandler(props.monthGetter, \"renderMonth\"), \", \").concat(props.currentYear);\n      break;\n\n    default:\n      agendaTitles = null;\n  }\n\n  let style;\n\n  if (props.displayDayOfTheWeek && props.currentDay !== '') {\n    style = {\n      fontSize: \"1.8rem\",\n      marginBottom: \"10px\",\n      zIndex: '999'\n    };\n  }\n\n  if (props.appViewMode === \"CalendarMode\" && props.calendarViewType === 'SimpleCalendar') {\n    style = {\n      textAlign: \"center\"\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.AgendaTitlesDisplay,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, agendaTitles);\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/AgendaTitles/AgendaTitles.js"],"names":["React","Fragment","classes","AgendaTitles","props","agendaTitles","appViewMode","currentDay","newDatesToVerboseHandler","monthGetter","Date","getDate","currentYear","getDay","style","displayDayOfTheWeek","fontSize","marginBottom","zIndex","calendarViewType","textAlign","AgendaTitlesDisplay"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,MAAIC,YAAJ;;AACA,UAAQD,KAAK,CAACE,WAAd;AACI,SAAK,SAAL;AACID,MAAAA,YAAY,GAAGD,KAAK,CAACG,UAAN,KAAqB,EAArB,aACRH,KAAK,CAACI,wBAAN,CAA+BJ,KAAK,CAACK,WAArC,EAAkD,aAAlD,CADQ,iCAET,IAAIC,IAAJ,CAASN,KAAK,CAACG,UAAf,EAA2BI,OAA3B,EAFS,cAE+BP,KAAK,CAACQ,WAFrC,+BAGTR,KAAK,CAACI,wBAAN,CAA+B,IAAIE,IAAJ,CAASN,KAAK,CAACG,UAAf,EAA2BM,MAA3B,EAA/B,EAAoE,eAApE,CAHS,SAGiF,IAHhG;AAIA;;AACJ,SAAK,UAAL;AACA,SAAK,cAAL;AACIR,MAAAA,YAAY,aAAMD,KAAK,CAACI,wBAAN,CAA+BJ,KAAK,CAACK,WAArC,EAAkD,aAAlD,CAAN,eAA2EL,KAAK,CAACQ,WAAjF,CAAZ;AACA;;AACJ;AACIP,MAAAA,YAAY,GAAG,IAAf;AAZR;;AAcA,MAAIS,KAAJ;;AACA,MAAGV,KAAK,CAACW,mBAAN,IAA6BX,KAAK,CAACG,UAAN,KAAqB,EAArD,EAAyD;AACrDO,IAAAA,KAAK,GAAG;AAACE,MAAAA,QAAQ,EAAE,QAAX;AAAqBC,MAAAA,YAAY,EAAE,MAAnC;AAA2CC,MAAAA,MAAM,EAAE;AAAnD,KAAR;AACH;;AACD,MAAGd,KAAK,CAACE,WAAN,KAAsB,cAAtB,IAAwCF,KAAK,CAACe,gBAAN,KAA2B,gBAAtE,EAAwF;AACpFL,IAAAA,KAAK,GAAG;AAACM,MAAAA,SAAS,EAAE;AAAZ,KAAR;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACmB,mBAAxB;AAA6C,IAAA,KAAK,EAAEP,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,YADL,CADJ;AAKH","sourcesContent":["import React, {Fragment} from 'react';\nimport classes from \"./AgendaTitles.module.css\";\n\nexport default function AgendaTitles(props) {\n    let agendaTitles;\n    switch (props.appViewMode) {\n        case(\"DayMode\") :\n            agendaTitles = props.currentDay !== \"\" ?\n                `${props.newDatesToVerboseHandler(props.monthGetter, \"renderMonth\")}, \n                ${new Date(props.currentDay).getDate()} ${props.currentYear}\n                ${props.newDatesToVerboseHandler(new Date(props.currentDay).getDay(), \"renderWeekDay\")} ` : null\n            break;\n        case(\"WeekMode\") :\n        case(\"CalendarMode\") :\n            agendaTitles = `${props.newDatesToVerboseHandler(props.monthGetter, \"renderMonth\")}, ${props.currentYear}`;\n            break;\n        default:\n            agendaTitles = null;\n    }\n    let style;\n    if(props.displayDayOfTheWeek && props.currentDay !== '') {\n        style = {fontSize: \"1.8rem\", marginBottom: \"10px\", zIndex: '999'};\n    }\n    if(props.appViewMode === \"CalendarMode\" && props.calendarViewType === 'SimpleCalendar') {\n        style = {textAlign: \"center\"}\n    }\n    return (\n        <div className={classes.AgendaTitlesDisplay} style={style}>\n            {agendaTitles}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}