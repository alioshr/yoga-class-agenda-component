{"ast":null,"code":"import _slicedToArray from \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/DayMode/DayMode.js\";\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport SideTab from \"../../../SideTab/SideTab\";\nimport TimeTables from \"../../../TimeTables/TimeTables\";\nimport EventCard from \"../../../EventCard/EventCard\";\nexport default function DayMode(props) {\n  const ref = useRef();\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        dimensions = _useState2[0],\n        setDimensions = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        mouseX = _useState4[0],\n        setMouseX = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        mouseY = _useState6[0],\n        setMouseY = _useState6[1];\n\n  const updateDimensions = () => {\n    setDimensions(ref.current.getBoundingClientRect());\n  };\n\n  useLayoutEffect(() => {\n    updateDimensions();\n    window.addEventListener(\"resize\", updateDimensions);\n    return () => {\n      window.removeEventListener(\"resize\", updateDimensions);\n    };\n  }, []);\n\n  const mouseMoveHandler = event => {\n    setMouseX(event.screenX);\n    setMouseY(event.screenY);\n  };\n\n  console.log(\"X: \", Math.round((mouseX - dimensions.x) / 5) * 5);\n  console.log(\"Y: \", mouseY - dimensions.y - 79); // why there is an extra 79px here?\n\n  const today = props.currentDay;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideTab, {\n    style: {\n      height: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TimeTables, {\n    currAgendaData: props.currentDay,\n    appViewMode: props.appViewMode,\n    dayCardContainerWidth: dimensions,\n    style: {\n      color: \"black\",\n      border: \"none\",\n      boxShadow: \"none\",\n      borderRadius: \"0\"\n    },\n    tableOfAvailableHours: props.arrayOfDailyHoursTable,\n    agendaInitialAvailableHour: props.agendaInitialAvailableHour,\n    agendaLastAvailableHour: props.agendaLastAvailableHour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      position: \"relative\"\n    },\n    onMouseMove: event => mouseMoveHandler(event),\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TimeTables, {\n    tableOfAvailableHours: props.arrayOfDailyHoursTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }), props.dataToBeRendered.filter(cl => cl.classDate === today).map(cl => /*#__PURE__*/React.createElement(EventCard, {\n    zIndexIFClicked: props.dialogBoxData.displayDialogBox,\n    currDay: today,\n    classDate: cl.classDate,\n    classTitle: cl.classTitle,\n    classLocation: cl.location,\n    classDuration: cl.duration,\n    classTime: cl.classTime,\n    classInitialAvailableHour: props.agendaInitialAvailableHour,\n    key: cl.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(SideTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/ViewMode/DayMode/DayMode.js"],"names":["React","useLayoutEffect","useRef","useState","SideTab","TimeTables","EventCard","DayMode","props","ref","dimensions","setDimensions","mouseX","setMouseX","mouseY","setMouseY","updateDimensions","current","getBoundingClientRect","window","addEventListener","removeEventListener","mouseMoveHandler","event","screenX","screenY","console","log","Math","round","x","y","today","currentDay","display","flexDirection","width","height","appViewMode","color","border","boxShadow","borderRadius","arrayOfDailyHoursTable","agendaInitialAvailableHour","agendaLastAvailableHour","position","dataToBeRendered","filter","cl","classDate","map","dialogBoxData","displayDialogBox","classTitle","location","duration","classTime","id"],"mappings":"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","sourcesContent":["import React, {useLayoutEffect, useRef, useState} from 'react'\nimport SideTab from \"../../../SideTab/SideTab\";\nimport TimeTables from \"../../../TimeTables/TimeTables\";\nimport EventCard from \"../../../EventCard/EventCard\";\n\nexport default function DayMode(props) {\n    const ref = useRef();\n    const [dimensions, setDimensions] = useState({});\n    const [mouseX, setMouseX] = useState();\n    const [mouseY, setMouseY] = useState();\n    const updateDimensions = () => {\n        setDimensions(ref.current.getBoundingClientRect());\n    };\n    useLayoutEffect(() => {\n        updateDimensions();\n        window.addEventListener(\"resize\", updateDimensions);\n        return () => {\n            window.removeEventListener(\"resize\", updateDimensions)\n        }\n    }, []);\n    const mouseMoveHandler = event => {\n        setMouseX(event.screenX);\n        setMouseY(event.screenY);\n    }\n    console.log(\"X: \", Math.round((mouseX - dimensions.x)/5)*5);\n    console.log(\"Y: \", mouseY - dimensions.y - 79); // why there is an extra 79px here?\n    const today = props.currentDay;\n    return (\n        <div style={{display: \"flex\", flexDirection: \"row\", width: \"100%\"}}>\n            <SideTab style={{height: \"auto\"}}>\n                <TimeTables\n                    currAgendaData={props.currentDay}\n                    appViewMode={props.appViewMode}\n                    dayCardContainerWidth={dimensions}\n                    style={{ color: \"black\", border: \"none\", boxShadow: \"none\",  borderRadius: \"0\" }}\n                    tableOfAvailableHours={props.arrayOfDailyHoursTable}\n                    agendaInitialAvailableHour={props.agendaInitialAvailableHour}\n                    agendaLastAvailableHour={props.agendaLastAvailableHour}\n                />\n            </SideTab>\n                <div style={{width: \"100%\", position: \"relative\"}}\n                     onMouseMove={(event) => mouseMoveHandler(event)}\n                     ref={ref}>\n                            <TimeTables\n                                tableOfAvailableHours={props.arrayOfDailyHoursTable}\n                            />\n                            {props.dataToBeRendered.filter(cl => cl.classDate === today).map(cl =>\n                                <EventCard\n                                    zIndexIFClicked={props.dialogBoxData.displayDialogBox}\n                                    currDay={today}\n                                    classDate={cl.classDate}\n                                    classTitle={cl.classTitle}\n                                    classLocation={cl.location}\n                                    classDuration={cl.duration}\n                                    classTime={cl.classTime}\n                                    classInitialAvailableHour={props.agendaInitialAvailableHour}\n                                    key={cl.id}\n                                />\n                            )}\n                </div>\n            <SideTab />\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}