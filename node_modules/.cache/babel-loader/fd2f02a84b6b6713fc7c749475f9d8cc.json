{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/Layout/Layout.js\";\nimport React from \"react\";\nimport classes from \"./Layout.module.css\";\nimport ViewMode from \"../ViewMode/ViewMode\";\nimport RightArrow from \"../NavigationButtons/RightArrow/RightArrow\";\nimport LeftArrow from \"../NavigationButtons/LeftArrow/LeftArrow\";\nimport AgendaTitles from \"../AgendaTitles/AgendaTitles\";\nexport default class Layout extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.updateDimensions = () => {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }, () => {\n        this.props.callbackContainerDimensions(this.container);\n      });\n    };\n\n    this.componentDidMount = () => {\n      //should delete this later and use the individual width of each card on WeekMode as I did with the DayMode\n      this.updateDimensions();\n      window.addEventListener(\"resize\", this.updateDimensions);\n    };\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    let calendarViewType;\n\n    switch (this.props.calendarViewType) {\n      case \"FullCalendar\":\n        calendarViewType = /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.OutStructure,\n          style: {\n            border: \"1px solid blue\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.FirstRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(ViewMode, {\n          weekMode: this.props.weekMode,\n          monthMode: this.props.monthMode,\n          dayMode: this.props.dayMode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.SecondRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(AgendaTitles, {\n          newDatesToVerboseHandler: this.props.newDatesToVerboseHandler,\n          currentMonth: this.props.currentMonth,\n          currentYear: this.props.currentYear,\n          currentDay: this.props.currentDay,\n          appViewMode: this.props.appViewMode,\n          calendarViewType: this.props.calendarViewType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 28\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.ControlsDisplay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(LeftArrow, {\n          appNavigationHandler: this.props.appNavigationHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 32\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.props.takeMeToToday,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }\n        }, \"Today\"), /*#__PURE__*/React.createElement(RightArrow, {\n          appNavigationHandler: this.props.appNavigationHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 32\n          }\n        }))), /*#__PURE__*/React.createElement(AgendaTitles, {\n          newDatesToVerboseHandler: this.props.newDatesToVerboseHandler,\n          currentMonth: this.props.currentMonth,\n          currentYear: this.props.currentYear,\n          currentDay: this.props.currentDay,\n          appViewMode: \"DayOfTheWeek\",\n          calendarViewType: this.props.calendarViewType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.AgendaInnerStructure,\n          ref: el => this.render(this.container = el),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }\n        }, this.props.children));\n        break;\n\n      case \"SimpleCalendar\":\n        calendarViewType = /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.OutStructure,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.SecondRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(LeftArrow, {\n          appNavigationHandler: this.props.appNavigationHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(AgendaTitles, {\n          newDatesToVerboseHandler: this.props.newDatesToVerboseHandler,\n          currentMonth: this.props.currentMonth,\n          currentYear: this.props.currentYear,\n          currentDay: this.props.currentDay,\n          appViewMode: this.props.appViewMode,\n          calendarViewType: this.props.calendarViewType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(RightArrow, {\n          appNavigationHandler: this.props.appNavigationHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.AgendaInnerStructure,\n          ref: el => this.render(this.container = el),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }\n        }, this.props.children));\n    }\n\n    return calendarViewType;\n  }\n\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/Layout/Layout.js"],"names":["React","classes","ViewMode","RightArrow","LeftArrow","AgendaTitles","Layout","Component","state","width","height","updateDimensions","setState","window","innerWidth","innerHeight","props","callbackContainerDimensions","container","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","calendarViewType","OutStructure","border","FirstRow","weekMode","monthMode","dayMode","SecondRow","newDatesToVerboseHandler","currentMonth","currentYear","currentDay","appViewMode","ControlsDisplay","appNavigationHandler","takeMeToToday","AgendaInnerStructure","el","children"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./Layout.module.css\";\nimport ViewMode from \"../ViewMode/ViewMode\";\nimport RightArrow from \"../NavigationButtons/RightArrow/RightArrow\";\nimport LeftArrow from \"../NavigationButtons/LeftArrow/LeftArrow\";\nimport AgendaTitles from \"../AgendaTitles/AgendaTitles\";\n\nexport default class Layout extends React.Component {\n    state = { width: 0, height: 0 };\n    updateDimensions = () => {\n        this.setState(\n            { width: window.innerWidth, height: window.innerHeight },\n            () => {\n                this.props.callbackContainerDimensions(this.container);\n            }\n        );\n    };\n    componentDidMount = () => {\n        //should delete this later and use the individual width of each card on WeekMode as I did with the DayMode\n        this.updateDimensions();\n        window.addEventListener(\"resize\", this.updateDimensions);\n    };\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n\n    render() {\n        let calendarViewType;\n        switch (this.props.calendarViewType) {\n            case (\"FullCalendar\") :\n                calendarViewType = (\n                    <div className={classes.OutStructure} style={{border: \"1px solid blue\"}}>\n                        {/*here is display the top title w/ the curr month*/}\n                        <div className={classes.FirstRow}>\n                            <ViewMode\n                                weekMode={this.props.weekMode}\n                                monthMode={this.props.monthMode}\n                                dayMode={this.props.dayMode}/>\n                        </div>\n                        <div className={classes.SecondRow}>\n                           <AgendaTitles newDatesToVerboseHandler={this.props.newDatesToVerboseHandler}\n                                         currentMonth={this.props.currentMonth}\n                                         currentYear={this.props.currentYear}\n                                         currentDay={this.props.currentDay}\n                                         appViewMode={this.props.appViewMode}\n                                         calendarViewType={this.props.calendarViewType}/>\n                            <div className={classes.ControlsDisplay}>\n                               <LeftArrow appNavigationHandler={this.props.appNavigationHandler}/>\n                                <button onClick={this.props.takeMeToToday}>Today</button>\n                               <RightArrow appNavigationHandler={this.props.appNavigationHandler}/>\n                            </div>\n                        </div>\n                        <AgendaTitles newDatesToVerboseHandler={this.props.newDatesToVerboseHandler}\n                                      currentMonth={this.props.currentMonth}\n                                      currentYear={this.props.currentYear}\n                                      currentDay={this.props.currentDay}\n                                      appViewMode={\"DayOfTheWeek\"}\n                                      calendarViewType={this.props.calendarViewType}/>\n                        <div className={classes.AgendaInnerStructure}\n                             ref={el => this.render((this.container = el))}>\n                            {this.props.children}\n                        </div>\n                    </div>\n                );\n                break;\n            case(\"SimpleCalendar\") :\n                calendarViewType = (\n                    <div className={classes.OutStructure}>\n                        <div className={classes.SecondRow}>\n                            <LeftArrow appNavigationHandler={this.props.appNavigationHandler}/>\n                            <AgendaTitles newDatesToVerboseHandler={this.props.newDatesToVerboseHandler}\n                                          currentMonth={this.props.currentMonth}\n                                          currentYear={this.props.currentYear}\n                                          currentDay={this.props.currentDay}\n                                          appViewMode={this.props.appViewMode}\n                                          calendarViewType={this.props.calendarViewType}/>\n                            <RightArrow appNavigationHandler={this.props.appNavigationHandler}/>\n                        </div>\n                        <div className={classes.AgendaInnerStructure}\n                             ref={el => this.render((this.container = el))}>\n                            {this.props.children}\n                        </div>\n                    </div>\n                );\n        }\n        return calendarViewType\n    }\n}\n"]},"metadata":{},"sourceType":"module"}