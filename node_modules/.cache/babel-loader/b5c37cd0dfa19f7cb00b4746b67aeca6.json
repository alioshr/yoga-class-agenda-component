{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/Layout/Layout.js\";\nimport React from \"react\";\nimport classes from \"./Layout.module.css\";\nimport ViewMode from \"../ViewMode/ViewMode\";\nimport LeftArrow from '../NavigationButtons/NavigationButtons';\nexport default class Layout extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.updateDimensions = () => {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }, () => {\n        this.props.callbackContainerDimensions(this.container);\n      });\n    };\n\n    this.componentDidMount = () => {\n      //should delete this later and use the individual width of each card on WeekMode as I did with the DayMode\n      this.updateDimensions();\n      window.addEventListener(\"resize\", this.updateDimensions);\n    };\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    console.log(\"left arrow\", LeftArrow);\n    let calendarViewType;\n\n    switch (this.props.calendarViewType) {\n      case \"FullCalendar\":\n        calendarViewType = /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.OutStructure,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.FirstRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(ViewMode, {\n          weekMode: this.props.weekMode,\n          monthMode: this.props.monthMode,\n          dayMode: this.props.dayMode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.SecondRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.AgendaTitlesDisplay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }\n        }, this.props.appViewMode === \"DayMode\" ? \"\".concat(this.props.newDatesToVerboseHandler(this.props.currentMonth, \"renderMonth\"), \"\\n                                     \").concat(new Date(this.props.currentDay).getDate(), \", \").concat(this.props.currentYear) : \" \".concat(this.props.newDatesToVerboseHandler(this.props.currentMonth, \"renderMonth\"), \", \").concat(this.props.currentYear)), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.ControlsDisplay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.LeftArrow,\n          onClick: () => this.props.appNavigationHandler(\"decrement\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.props.takeMeToToday,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }\n        }, \"Today\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.RightArrow,\n          onClick: () => this.props.appNavigationHandler(\"increment\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }\n        }))), this.props.appViewMode === \"DayMode\" ? /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: \"1.8rem\",\n            marginBottom: \"10px\"\n          },\n          className: classes.AgendaTitlesDisplay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }\n        }, this.props.newDatesToVerboseHandler(new Date(this.props.currentDay).getDay(), \"renderWeekDay\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.AgendaInnerStructure,\n          ref: el => this.render(this.container = el),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }\n        }, this.props.children));\n        break;\n\n      case \"SimpleCalendar\":\n        calendarViewType = /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.OutStructure,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.SecondRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.LeftArrow,\n          onClick: () => this.props.appNavigationHandler(\"decrement\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.AgendaTitlesDisplay,\n          style: {\n            textAlign: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }\n        }, this.props.newDatesToVerboseHandler(this.props.currentMonth, \"renderMonth\"), \", \", this.props.currentYear), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.RightArrow,\n          onClick: () => this.props.appNavigationHandler(\"increment\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.AgendaInnerStructure,\n          ref: el => this.render(this.container = el),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }\n        }, this.props.children));\n    }\n\n    return calendarViewType;\n  }\n\n}","map":{"version":3,"sources":["/Users/Dev/WebstormProjects/event-calendar/yoga-class-agenda-component/src/Agenda/UI/Layout/Layout.js"],"names":["React","classes","ViewMode","LeftArrow","Layout","Component","state","width","height","updateDimensions","setState","window","innerWidth","innerHeight","props","callbackContainerDimensions","container","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","console","log","calendarViewType","OutStructure","FirstRow","weekMode","monthMode","dayMode","SecondRow","AgendaTitlesDisplay","appViewMode","newDatesToVerboseHandler","currentMonth","Date","currentDay","getDate","currentYear","ControlsDisplay","appNavigationHandler","takeMeToToday","RightArrow","fontSize","marginBottom","getDay","AgendaInnerStructure","el","children","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./Layout.module.css\";\nimport ViewMode from \"../ViewMode/ViewMode\";\nimport LeftArrow from '../NavigationButtons/NavigationButtons'\n\nexport default class Layout extends React.Component {\n    state = { width: 0, height: 0 };\n    updateDimensions = () => {\n        this.setState(\n            { width: window.innerWidth, height: window.innerHeight },\n            () => {\n                this.props.callbackContainerDimensions(this.container);\n            }\n        );\n    };\n    componentDidMount = () => {\n        //should delete this later and use the individual width of each card on WeekMode as I did with the DayMode\n        this.updateDimensions();\n        window.addEventListener(\"resize\", this.updateDimensions);\n    };\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n\n    render() {\n        console.log(\"left arrow\", LeftArrow)\n        let calendarViewType;\n        switch (this.props.calendarViewType) {\n            case (\"FullCalendar\") :\n                calendarViewType = (\n                    <div className={classes.OutStructure}>\n                        {/*here is display the top title w/ the curr month*/}\n                        <div className={classes.FirstRow}>\n                            <ViewMode\n                                weekMode={this.props.weekMode}\n                                monthMode={this.props.monthMode}\n                                dayMode={this.props.dayMode}/>\n                        </div>\n                        <div className={classes.SecondRow}>\n                            <div className={classes.AgendaTitlesDisplay}>\n                                {this.props.appViewMode === \"DayMode\" ?\n                                    `${this.props.newDatesToVerboseHandler(this.props.currentMonth, \"renderMonth\")}\n                                     ${new Date(this.props.currentDay).getDate()}, ${this.props.currentYear}`:\n                                    ` ${this.props.newDatesToVerboseHandler(this.props.currentMonth, \"renderMonth\")}, ${this.props.currentYear}`\n                                }\n                            </div>\n                            <div className={classes.ControlsDisplay}>\n                                <div className={classes.LeftArrow}\n                                     onClick={() => this.props.appNavigationHandler(\"decrement\")}\n                                />\n                                <button onClick={this.props.takeMeToToday}>Today</button>\n                                <div\n                                    className={classes.RightArrow}\n                                    onClick={() => this.props.appNavigationHandler(\"increment\")}\n                                />\n                            </div>\n                        </div>\n                        {this.props.appViewMode === \"DayMode\" ?\n                            <div style={{fontSize: \"1.8rem\", marginBottom: \"10px\"}} className={classes.AgendaTitlesDisplay}>\n                                {this.props.newDatesToVerboseHandler(new Date(this.props.currentDay).getDay(), \"renderWeekDay\")}\n                            </div> :\n                            null}\n                        <div className={classes.AgendaInnerStructure}\n                             ref={el => this.render((this.container = el))}>\n                            {this.props.children}\n                        </div>\n                    </div>\n                );\n                break;\n            case(\"SimpleCalendar\") :\n                calendarViewType = (\n                    <div className={classes.OutStructure}>\n                        <div className={classes.SecondRow}>\n                                <div className={classes.LeftArrow}\n                                     onClick={() => this.props.appNavigationHandler(\"decrement\")}/>\n                                <div className={classes.AgendaTitlesDisplay} style={{textAlign: \"center\"}}>\n                                    {this.props.newDatesToVerboseHandler(this.props.currentMonth, \"renderMonth\")}, {this.props.currentYear}\n                                </div>\n                                <div\n                                    className={classes.RightArrow}\n                                    onClick={() => this.props.appNavigationHandler(\"increment\")}/>\n                        </div>\n                        <div\n                            className={classes.AgendaInnerStructure}\n                            ref={el => this.render((this.container = el))}>\n                            {this.props.children}\n                        </div>\n                    </div>\n                );\n        }\n        return calendarViewType\n    }\n}\n"]},"metadata":{},"sourceType":"module"}